2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on DESKTOP-9GM6JO6 with PID 17128 (E:\code\team-01\target\classes started by admin in E:\code\team-01)
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31ms. Found 0 JDBC repository interfaces.
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-11-17 17:48 [restartedMain] [DEBUG]  org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105)ev  el org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@21e1a964' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheConfig' of type [crw.bishe.team.config.RedisCacheConfig$$EnhancerBySpringCGLIB$$56c52779] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-11-17 17:48 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-11-17 17:48 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-11-17 17:48 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-17 17:48 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2389 ms
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyListener--->目标方法名为:contextInitialized
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:init
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-11-17 17:48:45",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisConfig--->目标方法名为:jedisPoolConfig
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.config.RedisConfig.jedisPoolConfig(RedisConfig.java:48)ev  el crw.bishe.team.config.RedisConfig - 初始化JedisPoolConfig
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : JedisPoolConfig [lifo=true, fairness=false, maxWaitMillis=-1, minEvictableIdleTimeMillis=60000, softMinEvictableIdleTimeMillis=-1, numTestsPerEvictionRun=-1, evictionPolicyClassName=org.apache.commons.pool2.impl.DefaultEvictionPolicy, testOnCreate=false, testOnBorrow=false, testOnReturn=false, testWhileIdle=true, timeBetweenEvictionRunsMillis=30000, blockWhenExhausted=true, jmxEnabled=true, jmxNamePrefix=pool, jmxNameBase=null, maxTotal=8, maxIdle=8, minIdle=0]
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisConfig--->目标方法名为:jedisConnectionFactory
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.config.RedisConfig.jedisConnectionFactory(RedisConfig.java:67)ev  el crw.bishe.team.config.RedisConfig - 初始化RedisConnectionFactory
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.data.redis.connection.jedis.JedisConnectionFactory@254a14b1
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisConfig--->目标方法名为:functionDomainRedisTemplate
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.config.RedisConfig.functionDomainRedisTemplate(RedisConfig.java:81)ev  el crw.bishe.team.config.RedisConfig - 初始化RedisTemplate
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.data.redis.core.RedisTemplate@61a27027
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@202b01b
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@199ede47
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@104180c
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:26)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@1697ec12
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@27925c9e
2020-11-17 17:48 [restartedMain] [INFO]  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1184)ev  el org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2020-11-17 17:48 [restartedMain] [INFO]  org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)ev  el org.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-11-17 17:48 [restartedMain] [INFO]  org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:240)ev  el org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.2.1 created.
2020-11-17 17:48 [restartedMain] [INFO]  org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)ev  el org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2020-11-17 17:48 [restartedMain] [INFO]  org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:305)ev  el org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.2.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2020-11-17 17:48 [restartedMain] [INFO]  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1339)ev  el org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2020-11-17 17:48 [restartedMain] [INFO]  org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1343)ev  el org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.2.1
2020-11-17 17:48 [restartedMain] [INFO]  org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2311)ev  el org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@327316fd
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisCacheConfig--->目标方法名为:cacheManager
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.data.redis.cache.RedisCacheManager@17a27151
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@71306ecd
2020-11-17 17:48 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisCacheConfig--->目标方法名为:keyGenerator
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.RedisCacheConfig$1@594d4ff8
2020-11-17 17:48 [restartedMain] [WARN]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:61)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@7f31bd64
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$639/747994475@29ea8f6f
2020-11-17 17:48 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-11-17 17:48 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-11-17 17:48 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-11-17 17:48 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d8dcab, org.springframework.security.web.context.SecurityContextPersistenceFilter@36d501f8, org.springframework.security.web.header.HeaderWriterFilter@c9aa40d, org.springframework.security.web.authentication.logout.LogoutFilter@63c2570f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1b45045c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@54797ccc, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@24a433ef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7f6303d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a501cfe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46eea9d4, org.springframework.security.web.session.SessionManagementFilter@5f503497, org.springframework.security.web.access.ExceptionTranslationFilter@e745a9a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@515251a2]
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebSocketConfig--->目标方法名为:serverEndpointExporter
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.web.socket.server.standard.ServerEndpointExporter@2291b234
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@54c2f662
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getSessionUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:727)ev  el org.springframework.scheduling.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2020-11-17 17:48 [restartedMain] [INFO]  org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:575)ev  el org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplicationStartQuartzJobListener--->目标方法名为:onApplicationEvent
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-11-17 17:48 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 7.231 seconds (JVM running for 8.561)
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-11-17 17:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2020-11-17 17:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-11-17 17:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-11-17 17:48 [http-nio-8888-exec-6] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-11-17 17:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@76be0e4b
2020-11-17 17:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@192e11c: Username: 曹荣武; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-11-17 17:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:49 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyFilter--->目标方法名为:doFilter
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-11-17 17:49 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:findAll
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:findAll
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [Team(teamId=124, teamName=废铁团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=无, teamType=其他, teamScope=校外, teamNumber=1, sumNumber=10, teamDate=Sat May 30 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=Java, seeNum=1, projects=null), Team(teamId=125, teamName=Java招聘, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=整理Java招聘信息, teamType=技术类, teamScope=校外, teamNumber=1, sumNumber=10, teamDate=Sat May 30 00:00:00 CST 2020, status=1, staff=Java开发人员, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)]
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1eee7932, teamId=124, teamName=废铁团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=无, teamType=其他, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=无, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=1, university=null, projects=null)
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:35)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@14f9d3c0, teamId=125, teamName=Java招聘, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=整理Java招聘信息, teamType=技术类, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=Java开发人员, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, university=null, projects=null)
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1eee7932, teamId=124, teamName=废铁团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=无, teamType=其他, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=无, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=1, university=null, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@14f9d3c0, teamId=125, teamName=Java招聘, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=整理Java招聘信息, teamType=技术类, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=Java开发人员, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, university=null, projects=null)]
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=处理成功, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1eee7932, teamId=124, teamName=废铁团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=无, teamType=其他, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=无, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=1, university=null, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@14f9d3c0, teamId=125, teamName=Java招聘, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=整理Java招聘信息, teamType=技术类, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=Java开发人员, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, university=null, projects=null)]),[]>
2020-11-17 17:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:41)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
