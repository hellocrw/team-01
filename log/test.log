2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 30224 (D:\MyProject\毕业设计项目\team-01\target\classes started by crw in D:\MyProject\毕业设计项目\team-01)
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114ms. Found 0 JDBC repository interfaces.
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:249)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50ms. Found 0 Redis repository interfaces.
2021-02-22 20:38 [restartedMain] [DEBUG]  org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105)ev  el org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6c8f7714' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-02-22 20:38 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheConfig' of type [crw.bishe.team.config.RedisCacheConfig$$EnhancerBySpringCGLIB$$4177e0e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-02-22 20:39 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2021-02-22 20:39 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2021-02-22 20:39 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2021-02-22 20:39 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2021-02-22 20:39 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-02-22 20:39 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7612 ms
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2021-02-22 20:39:01",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@504dd588
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@38761159
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@1f6eda1b
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisConfig--->目标方法名为:jedisPoolConfig
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.config.RedisConfig.jedisPoolConfig(RedisConfig.java:48)ev  el crw.bishe.team.config.RedisConfig - 初始化JedisPoolConfig
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : JedisPoolConfig [lifo=true, fairness=false, maxWaitMillis=-1, minEvictableIdleTimeMillis=60000, softMinEvictableIdleTimeMillis=-1, numTestsPerEvictionRun=-1, evictionPolicyClassName=org.apache.commons.pool2.impl.DefaultEvictionPolicy, testOnCreate=false, testOnBorrow=false, testOnReturn=false, testWhileIdle=true, timeBetweenEvictionRunsMillis=30000, blockWhenExhausted=true, jmxEnabled=true, jmxNamePrefix=pool, jmxNameBase=null, maxTotal=8, maxIdle=8, minIdle=0]
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisConfig--->目标方法名为:jedisConnectionFactory
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.config.RedisConfig.jedisConnectionFactory(RedisConfig.java:67)ev  el crw.bishe.team.config.RedisConfig - 初始化RedisConnectionFactory
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.data.redis.connection.jedis.JedisConnectionFactory@39539bcd
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisCacheConfig--->目标方法名为:cacheManager
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.data.redis.cache.RedisCacheManager@560ea522
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisCacheConfig--->目标方法名为:keyGenerator
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.RedisCacheConfig$1@16a68121
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisConfig--->目标方法名为:functionDomainRedisTemplate
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.config.RedisConfig.functionDomainRedisTemplate(RedisConfig.java:81)ev  el crw.bishe.team.config.RedisConfig - 初始化RedisTemplate
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.data.redis.core.RedisTemplate@5977dfd8
2021-02-22 20:39 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63e7fe82, org.springframework.security.web.context.SecurityContextPersistenceFilter@4d3bebd5, org.springframework.security.web.header.HeaderWriterFilter@22498237, org.springframework.security.web.authentication.logout.LogoutFilter@ee40529, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@53f6d826, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@6e8450c3, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@76dda31e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ac88252, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7228e49a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69c3d493, org.springframework.security.web.session.SessionManagementFilter@619ea0fd, org.springframework.security.web.access.ExceptionTranslationFilter@61fb7196, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6aca23b0]
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@610983a9
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@1aa5b6a5
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$595/1005651799@494aaa4e
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@3bce0ba2
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@50e3c441
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@73fe2719
2021-02-22 20:39 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2021-02-22 20:39 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-02-22 20:39 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2021-02-22 20:39 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-02-22 20:39 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2021-02-22 20:39 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2021-02-22 20:39 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2021-02-22 20:39 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2021-02-22 20:39 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2021-02-22 20:39 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2021-02-22 20:39 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 22.988 seconds (JVM running for 29.635)
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2021-02-22 20:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 43 ms
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getLeaderIdByProId
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getLeaderIdByProId
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : RedisCacheConfig--->目标方法名为:keyGenerator
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.RedisCacheConfig$1@16a68121
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getLeaderIdByProId
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2021-02-22 20:39 [http-nio-8888-exec-10] [ERROR]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "null"] with root cause
java.lang.NumberFormatException: For input string: "null"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[?:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:589) ~[?:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:631) ~[?:1.8.0_121]
	at crw.bishe.team.service.ProjectServiceImpl.getProjectByProId(ProjectServiceImpl.java:162) ~[classes/:?]
	at crw.bishe.team.service.ProjectServiceImpl$$FastClassBySpringCGLIB$$9c65e95b.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.service.ProjectServiceImpl$$EnhancerBySpringCGLIB$$5b89734.getProjectByProId(<generated>) ~[classes/:?]
	at crw.bishe.team.controller.project.ProjectController.getProjectByProId(ProjectController.java:121) ~[classes/:?]
	at crw.bishe.team.controller.project.ProjectController$$FastClassBySpringCGLIB$$12e3454.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.controller.project.ProjectController$$EnhancerBySpringCGLIB$$78d79bbf.getProjectByProId(<generated>) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.0.12.jar:1.0.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2021-02-22 20:39 [http-nio-8888-exec-7] [ERROR]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "null"] with root cause
java.lang.NumberFormatException: For input string: "null"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[?:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:589) ~[?:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:631) ~[?:1.8.0_121]
	at crw.bishe.team.service.FilesServiceImpl.getFilesByProId(FilesServiceImpl.java:124) ~[classes/:?]
	at crw.bishe.team.service.FilesServiceImpl$$FastClassBySpringCGLIB$$d894b6fd.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.service.FilesServiceImpl$$EnhancerBySpringCGLIB$$bbd9955a.getFilesByProId(<generated>) ~[classes/:?]
	at crw.bishe.team.controller.project.FilesController.getFilesByProId(FilesController.java:46) ~[classes/:?]
	at crw.bishe.team.controller.project.FilesController$$FastClassBySpringCGLIB$$108ba9f2.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.controller.project.FilesController$$EnhancerBySpringCGLIB$$d87f6f59.getFilesByProId(<generated>) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.0.12.jar:1.0.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=26, teamId=124, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2020-02-02, decribe=test, phone=18814231208, status=0)]),[]>
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : --->目标方法名为:generate
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=26, teamId=124, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2020-02-02, decribe=test, phone=18814231208, status=0)]),[]>
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.service.DictionaryServiceImplgetTeamType
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@b1b8c3f3, teamId=124, teamName=废铁团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=无, teamType=其他, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=无, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=1, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@793b9fbe, proId=86, proName=每天一学, leaderName=曹荣武, proDescribe=每天一学, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@8c951b17, proId=87, proName=悟, leaderName=曹荣武, proDescribe=记录一生中领悟的道理, proDate=2020-06-30, proStartTime=2020-06-30, proEndTime=2020-06-30, proStatus=0, teamId=124, proType=其他, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@def6927, teamId=125, teamName=Java招聘, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=整理Java招聘信息, teamType=技术类, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=Java开发人员, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f8f59573, proId=85, proName=Java, leaderName=曹荣武, proDescribe=Java开发, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=125, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : StudyPlanController--->目标方法名为:getStudyPlans
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : StudyPlanServiceImpl--->目标方法名为:getStudyPlans
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : StudyPlanMapper--->目标方法名为:getStudyPlans
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=true),[]>
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : --->目标方法名为:generate
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.service.DictionaryServiceImplgetTeamType
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : --->目标方法名为:generate
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.service.TeamServiceImplgetTeams
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@ed17ef61, teamId=124, teamName=废铁团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=无, teamType=其他, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=无, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=1, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@793b9fbe, proId=86, proName=每天一学, leaderName=曹荣武, proDescribe=每天一学, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@8c951b17, proId=87, proName=悟, leaderName=曹荣武, proDescribe=记录一生中领悟的道理, proDate=2020-06-30, proStartTime=2020-06-30, proEndTime=2020-06-30, proStatus=0, teamId=124, proType=其他, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@494e9495, teamId=125, teamName=Java招聘, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=整理Java招聘信息, teamType=技术类, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=Java开发人员, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f8f59573, proId=85, proName=Java, leaderName=曹荣武, proDescribe=Java开发, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=125, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]),[]>
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [StudyPlanDto(spId=27, userId=1, spTitle=广州众盟信息科技有限公司, spContext=Java工程师(5k - 7k), spTime=2020-06-25 08:58:32, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=66368), StudyPlanDto(spId=28, userId=1, spTitle=深圳创酷互动信息技术有限公司, spContext=一、公司名称：深圳创酷互动信息技术有限公司
二、招聘岗位：java工程师
三、岗位职责：
1、负责平台系统业务的服务端开发工作。
2、根据开发规范独立完成编码，测试。按预定目标完成任务，保证代码质量。
3、主动跟进开发过程中的各项事务，例如开发联调、处理Bug、线上部署等。
四、任职要求：
1、本科以上学历，计算机相关专业，1年以上Java服务端开发经验。
2、掌握常用的设计模式，有良好编程习惯。掌握并发、分布式等技术。
3、熟悉Spring全家桶、Mybatis等技术框架。熟练使用Git、Maven、Jenkins等工具。
4、了解RESTful架构，熟悉HTTP等互联网基础知识。
5、熟练MySQL数据库，熟悉Redis，RabbitMQ等中间件。
6、熟练Linux系统常用命令。
7、良好的学习能力、沟通能力和团队协作精神，能独立完成功能模块开发工作。, spTime=2020-06-25 09:01:36, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=74069), StudyPlanDto(spId=29, userId=1, spTitle=算法：礼物的最大价值, spContext=在一个 m*n 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。你可以从棋盘的左上角开始拿格子里的礼物，并每次向右或者向下移动一格、直到到达棋盘的右下角。给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:05:10, spLink=https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/), StudyPlanDto(spId=30, userId=1, spTitle=算法： 矩阵中的路径, spContext=请设计一个函数，用来判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。例如，在下面的3×4的矩阵中包含一条字符串“bfce”的路径（路径中的字母用加粗标出）。

[["a","b","c","e"],
["s","f","c","s"],
["a","d","e","e"]]

但矩阵中不包含字符串“abfb”的路径，因为字符串的第一个字符b占据了矩阵中的第一行第二个格子之后，路径不能再次进入这个格子。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:18:26, spLink=https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/), StudyPlanDto(spId=31, userId=1, spTitle=redis面试题, spContext=缓存雪崩、缓存穿透、缓存预热、缓存更新、缓存降级等问题, spTime=2020-06-25 17:38:30, spLink=https://blog.csdn.net/Butterfly_resting/article/details/89668661), StudyPlanDto(spId=32, userId=1, spTitle=修改组队系统时间不对问题, spContext=serverTimezone=Asia/Shanghai, spTime=2020-06-26 02:51:56, spLink=https://www.cnblogs.com/july-sunny/p/11888270.html), StudyPlanDto(spId=33, userId=1, spTitle=机器人的运动范围, spContext=地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-26 03:06:26, spLink=https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof), StudyPlanDto(spId=34, userId=1, spTitle=完善组队系统的注册功能, spContext=完善组队系统的注册功能, spTime=2020-06-27 03:58:39, spLink=http://120.79.191.236/#/passport/register), StudyPlanDto(spId=35, userId=1, spTitle=用Angular编写个人在线简历, spContext=在线简历制作, spTime=2020-06-27 05:57:17, spLink=http://www.baidu.com), StudyPlanDto(spId=36, userId=1, spTitle=算法：缺失的第一个正数, spContext=给你一个未排序的整数数组，请你找出其中没有出现的最小的正整数。, spTime=2020-06-27 08:38:52, spLink=https://leetcode-cn.com/problems/first-missing-positive/), StudyPlanDto(spId=37, userId=1, spTitle=算法：最长不含重复字符的子字符串, spContext=请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。, spTime=2020-06-27 20:14:47, spLink=https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/solution/mian-shi-ti-48-zui-chang-bu-han-zhong-fu-zi-fu-d-9/), StudyPlanDto(spId=38, userId=1, spTitle=算法：长度最小的子数组, spContext=长度最小的子数组, spTime=2020-06-28 01:36:53, spLink=https://leetcode-cn.com/problems/minimum-size-subarray-sum/), StudyPlanDto(spId=39, userId=1, spTitle=算法： 硬币, spContext=硬币。给定数量不限的硬币，币值为25分、10分、5分和1分，编写代码计算n分有几种表示法。(结果可能会很大，你需要将结果模上1000000007), spTime=2020-06-28 17:42:10, spLink=https://leetcode-cn.com/problems/coin-lcci/), StudyPlanDto(spId=40, userId=1, spTitle=算法：连续的子数组和, spContext=给定一个包含非负数的数组和一目标整数k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为2，且总和为 k 的倍数，即总和为n*k，其中n也是一个整数。, spTime=2020-06-28 20:26:12, spLink=https://leetcode-cn.com/problems/continuous-subarray-sum/), StudyPlanDto(spId=41, userId=1, spTitle=算法：删除与获取点数, spContext=删除与获取点数, spTime=2020-06-29 00:22:21, spLink=https://leetcode-cn.com/problems/delete-and-earn/), StudyPlanDto(spId=42, userId=1, spTitle=算法：数组中的第k个最大元素, spContext=在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。, spTime=2020-06-29 02:30:58, spLink=https://leetcode-cn.com/problems/kth-largest-element-in-an-array/), StudyPlanDto(spId=43, userId=1, spTitle=redis面试题, spContext=redis, spTime=2020-06-29 03:03:39, spLink=https://blog.csdn.net/ThinkWon/article/details/103522351), StudyPlanDto(spId=44, userId=1, spTitle=redis配置文件, spContext=redis, spTime=2020-06-30 02:43:37, spLink=https://blog.csdn.net/suprezheng/article/details/90679790), StudyPlanDto(spId=45, userId=1, spTitle=算法：零钱兑换, spContext=动态规划, spTime=2020-06-30 04:46:08, spLink=https://leetcode-cn.com/problems/coin-change/), StudyPlanDto(spId=46, userId=1, spTitle=2020-06-30感悟, spContext=找到最前沿的开发技术，并学习和掌握它；
少玩少看，多学习；
忆一晚上没睡所思所想，回到过去最希望做的事，让自己提升；
梦想：在互联网+教育行业发展；, spTime=2020-06-30 10:12:11, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=47, userId=1, spTitle=算法：用两个栈实现队列, spContext=两个栈实现队列, spTime=2020-06-30 10:18:39, spLink=https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/), StudyPlanDto(spId=48, userId=1, spTitle=分析近十年的行业发展情况, spContext=2020－06－30, spTime=2020-06-30 10:21:51, spLink=http://www.baidu.com), StudyPlanDto(spId=49, userId=1, spTitle=修改组队项目的缓存刷新和添加项目缓存不更新问题, spContext=设置缓存过期时间。修改后端添加数据缓存更新问题, spTime=2020-06-30 10:50:22, spLink=www.baidu.com), StudyPlanDto(spId=50, userId=1, spTitle=soket通信原理分析, spContext=了解soket即时通信, spTime=2020-06-30 10:57:44, spLink=http://www.baidu.com), StudyPlanDto(spId=51, userId=1, spTitle=AI学习资源(github), spContext=AI 学习资料包下载链接, spTime=2020-06-30 11:30:53, spLink=https://gitee.com/OSCYuanChuangHui/ai_learning), StudyPlanDto(spId=52, userId=1, spTitle=斗鱼开源首秀:基于Go的微服务框架Jupiter, spContext=时事, spTime=2020-06-30 11:40:34, spLink=https://www.oschina.net/question/4487475_2317201?from=20200621), StudyPlanDto(spId=53, userId=1, spTitle=springboot+websocket实现在线聊天, spContext=websocket, spTime=2020-07-01 02:26:13, spLink=https://blog.csdn.net/qq_41603102/article/details/82492040), StudyPlanDto(spId=54, userId=1, spTitle=算法：最长重复子数组, spContext=给两个数组A和B ,返回两个数组的公共最长子数组的长度；, spTime=2020-07-01 02:58:11, spLink=https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/), StudyPlanDto(spId=55, userId=1, spTitle=redis发布/订阅模式, spContext=redis, spTime=2020-07-01 04:57:00, spLink=https://www.cnblogs.com/qlqwjy/p/9763754.html), StudyPlanDto(spId=56, userId=1, spTitle=ActiveMQ消息中间件, spContext=ActiveMQ, spTime=2020-07-01 05:31:27, spLink=http://activemq.apache.org/components/classic/documentation), StudyPlanDto(spId=57, userId=1, spTitle=zookeeper-图灵学院, spContext=zookeeper, spTime=2020-07-02 01:36:37, spLink=https://ke.qq.com/course/list/%E5%9B%BE%E7%81%B5), StudyPlanDto(spId=58, userId=1, spTitle=redis集群详解, spContext=redis, spTime=2020-07-02 01:42:28, spLink=https://blog.csdn.net/miss1181248983/article/details/90056960), StudyPlanDto(spId=59, userId=1, spTitle=算法：将有序数组转换为二叉搜索树, spContext=算法, spTime=2020-07-03 03:20:41, spLink=https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/), StudyPlanDto(spId=60, userId=1, spTitle=算法：最长有效括号, spContext=算法, spTime=2020-07-04 07:05:00, spLink=https://leetcode-cn.com/problems/longest-valid-parentheses/), StudyPlanDto(spId=61, userId=1, spTitle=顺时针打印矩阵, spContext=算法, spTime=2020-07-04 23:24:10, spLink=https://leetcode-cn.com/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/), StudyPlanDto(spId=62, userId=1, spTitle=算法：链表中倒数第k个节点, spContext=算法, spTime=2020-07-05 02:03:17, spLink=https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/), StudyPlanDto(spId=63, userId=1, spTitle=算法：不同的二叉搜索树, spContext=算法, spTime=2020-07-05 02:04:41, spLink=https://leetcode-cn.com/problems/unique-binary-search-trees/), StudyPlanDto(spId=64, userId=1, spTitle=算法：连续子数组的最大和, spContext=算法, spTime=2020-07-05 11:37:13, spLink=https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/), StudyPlanDto(spId=65, userId=1, spTitle=IO流，socket，web socket, spContext=IO流, spTime=2020-07-05 22:04:00, spLink=https://blog.csdn.net/qq_37875585/article/details/89385688), StudyPlanDto(spId=66, userId=1, spTitle=socket原理, spContext=socket, spTime=2020-07-06 02:59:00, spLink=https://www.cnblogs.com/wn1m/p/10983172.html), StudyPlanDto(spId=67, userId=1, spTitle=java利用Socket实现客户端与客户端通信, spContext=socket, spTime=2020-07-06 05:52:15, spLink=https://www.jianshu.com/p/211720900e14), StudyPlanDto(spId=68, userId=1, spTitle=解决websocket在nginx上的跨越问题, spContext=websocket部署, spTime=2020-07-07 03:31:08, spLink=http://www.baidu.com), StudyPlanDto(spId=69, userId=1, spTitle=复习：JVM内存模型, spContext=JVM, spTime=2020-07-09 21:31:45, spLink=https://www.jianshu.com/p/76959115d486), StudyPlanDto(spId=70, userId=1, spTitle=session在分布式中如何实现共享, spContext=分布式, spTime=2020-07-10 16:39:35, spLink=baidu.com), StudyPlanDto(spId=71, userId=1, spTitle=解决websocket在项目中的聊天通信问题, spContext=websocket, spTime=2020-07-14 21:37:43, spLink=http://www.baidu.com), StudyPlanDto(spId=72, userId=1, spTitle=算法：三角形最小路径和, spContext=leetcode, spTime=2020-07-14 21:41:03, spLink=https://leetcode-cn.com/problems/triangle/), StudyPlanDto(spId=73, userId=1, spTitle=深入了解angular缓存, spContext=angular, spTime=2020-07-15 10:56:45, spLink=http://baidu.com), StudyPlanDto(spId=74, userId=1, spTitle=深入了解CAP, spContext=cap, spTime=2020-07-16 16:46:34, spLink=baidu.com), StudyPlanDto(spId=75, userId=1, spTitle=算法：两数之和, spContext=算法, spTime=2020-07-20 13:15:13, spLink=https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/submissions/), StudyPlanDto(spId=76, userId=1, spTitle=dom对象的api, spContext=dom, spTime=2020-07-21 00:28:43, spLink=baidu.com), StudyPlanDto(spId=77, userId=1, spTitle=阿里巴巴代码编程规范, spContext=编程, spTime=2020-07-21 19:48:10, spLink=baidu.com), StudyPlanDto(spId=78, userId=1, spTitle=BUG： mybatis + oracle 逆向功能报错：驱动的版本有问题, spContext=bug, spTime=2020-07-21 20:27:07, spLink=baidu.com), StudyPlanDto(spId=79, userId=1, spTitle=完成前端学生表的增加，修改，删除功能, spContext=ly, spTime=2020-07-21 20:27:46, spLink=baidu.com), StudyPlanDto(spId=80, userId=1, spTitle=用react做每天任务打卡功能, spContext=react, spTime=2020-07-24 18:55:02, spLink=baidu.com), StudyPlanDto(spId=81, userId=1, spTitle=表单数据校验，Docket, spContext=react，docket, spTime=2020-07-26 05:31:10, spLink=https://ant.design/components/form-cn/#API), StudyPlanDto(spId=82, userId=1, spTitle=Docker 安装，基本命令, spContext=Docker, spTime=2020-08-03 23:50:22, spLink=http://www.baidu.com), StudyPlanDto(spId=83, userId=1, spTitle=Docker学习p14~p25, spContext=Docker, spTime=2020-08-04 20:29:36, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=14), StudyPlanDto(spId=84, userId=1, spTitle=Docker p14 ~ 18, spContext=docker, spTime=2020-08-04 23:58:30, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=18), StudyPlanDto(spId=85, userId=1, spTitle=完成每天任务的开发, spContext=组队系统, spTime=2020-08-07 00:24:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=86, userId=1, spTitle=组队系统修改密码功能实现, spContext=组队系统, spTime=2020-08-07 22:38:41, spLink=http://www.baidu.com), StudyPlanDto(spId=87, userId=1, spTitle=springboot基础环境搭建（学习专用）, spContext=springboot, spTime=2020-08-10 17:08:49, spLink=http://www.baidu.com), StudyPlanDto(spId=88, userId=1, spTitle=完成组队系统每天任务总结功能, spContext=组队系统, spTime=2020-08-11 00:26:16, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=89, userId=1, spTitle=Docker学习p18~p24, spContext=Docker, spTime=2020-08-15 01:20:27, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=24), StudyPlanDto(spId=90, userId=1, spTitle=Docker学习p31~p34, spContext=Docker, spTime=2020-08-15 02:54:09, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=34), StudyPlanDto(spId=91, userId=1, spTitle=springcloud环境搭建, spContext=springcloud, spTime=2020-08-15 03:09:12, spLink=https://note.youdao.com/web/#/file/WEB3c5c7b9601a754586ebce711dfedbf5a/note/WEB3a6ae7f7653499f7c3fe0c70eed036af/), StudyPlanDto(spId=92, userId=1, spTitle=Dockerfile p26, spContext=Docker, spTime=2020-08-16 13:11:06, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=26), StudyPlanDto(spId=93, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-19 01:25:35, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=94, userId=1, spTitle=中大系统个人中心查询任务的sql分析, spContext=sql, spTime=2020-08-19 17:35:37, spLink=http://localhost:8070/#/personalUser), StudyPlanDto(spId=95, userId=1, spTitle=思考如何提高工作效率, spContext=每天任务, spTime=2020-08-20 01:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=96, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:01, spLink=http://www.baidu.com), StudyPlanDto(spId=97, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:08, spLink=http://www.baidu.com), StudyPlanDto(spId=98, userId=1, spTitle=权限管理平台数据库设计, spContext=权限管理平台, spTime=2020-08-20 02:25:43, spLink=http://www.baidu.com), StudyPlanDto(spId=99, userId=1, spTitle=完成每天学习时间点功能设计, spContext=组队系统, spTime=2020-08-20 02:31:24, spLink=http://www.baidu.com), StudyPlanDto(spId=100, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-20 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=101, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-20 02:32:05, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=102, userId=1, spTitle=react 类和方法两种方式建立组件的使用, spContext=react, spTime=2020-08-20 02:48:32, spLink=http://www.baidu.com), StudyPlanDto(spId=103, userId=1, spTitle=springboot 注册三大组件servlet,filter,litener, spContext=springboot, spTime=2020-08-20 19:21:31, spLink=http://www.baidu.com), StudyPlanDto(spId=104, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-21 01:11:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=105, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-21 01:11:47, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=106, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-21 01:11:49, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=107, userId=1, spTitle=每天总结（组队系统功能）, spContext=每天任务, spTime=2020-08-21 01:11:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=108, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-22 00:20:28, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=109, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:03, spLink=http://www.baidu.com), StudyPlanDto(spId=110, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:13, spLink=http://www.baidu.com), StudyPlanDto(spId=111, userId=1, spTitle=war包和jar包的区别, spContext=springboot, spTime=2020-08-22 00:55:59, spLink=http://www.baidu.com), StudyPlanDto(spId=112, userId=1, spTitle=时间调度器的cron表达式, spContext=quartz, spTime=2020-08-22 14:26:46, spLink=https://www.cnblogs.com/yanghj010/p/10875151.html), StudyPlanDto(spId=113, userId=1, spTitle=websocket通信, spContext=websocket, spTime=2020-08-22 16:43:58, spLink=http://www.baidu.com), StudyPlanDto(spId=114, userId=1, spTitle=深入对session底层的理解, spContext=session, spTime=2020-08-22 17:11:29, spLink=http://www.baidu.com), StudyPlanDto(spId=115, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-23 17:14:27, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=116, userId=1, spTitle=spring security学习, spContext=spring security, spTime=2020-08-23 17:16:19, spLink=http://www.baidu.com), StudyPlanDto(spId=117, userId=1, spTitle=每天任务打卡时间BUG, spContext=组队系统, spTime=2020-08-23 17:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=118, userId=1, spTitle=portainer学习和配置, spContext=portainer, spTime=2020-08-24 16:20:02, spLink=https://www.cnblogs.com/ExMan/p/11657069.html), StudyPlanDto(spId=119, userId=1, spTitle=OpenFeign的学习和配置整合springcloud, spContext=OpenFeign, spTime=2020-08-25 00:52:54, spLink=https://www.cnblogs.com/wf614/p/12919798.html), StudyPlanDto(spId=120, userId=1, spTitle=Consul 服务注册与发现的学习和配置整合springcloud, spContext=Consul, spTime=2020-08-25 00:53:27, spLink=http://www.baidu.com), StudyPlanDto(spId=121, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-25 00:52:21, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=122, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-25 00:52:41, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=123, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-25 00:53:13, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=124, userId=1, spTitle=Hystrix熔断的学习和配置整合springcloud, spContext=Hystrix, spTime=2020-08-25 00:56:13, spLink=http://www.baidu.com), StudyPlanDto(spId=125, userId=1, spTitle=consul整合springcloud, spContext=consul, spTime=2020-08-25 22:48:47, spLink=https://www.cnblogs.com/wf614/p/12919799.html#_12), StudyPlanDto(spId=126, userId=1, spTitle=Hystrix, spContext=Hystrix, spTime=2020-08-25 22:52:29, spLink=https://blog.csdn.net/loushuiyifan/article/details/82702522), StudyPlanDto(spId=127, userId=1, spTitle=如何拦截路由器请求获取用户信息, spContext=路由器, spTime=2020-08-26 10:26:02, spLink=http://www.baidu.com), StudyPlanDto(spId=128, userId=1, spTitle=git代码回滚操作学习, spContext=git, spTime=2020-08-26 10:28:22, spLink=http://www.baidu.com), StudyPlanDto(spId=129, userId=1, spTitle=springcloud整合Zuul2、Gateway服务网关, spContext=zuul2,gateway, spTime=2020-08-27 02:29:45, spLink=https://www.cnblogs.com/cloudxlr/p/11768468.html), StudyPlanDto(spId=130, userId=1, spTitle=Hystrix熔断整合springcloud, spContext=每天任务, spTime=2020-08-27 02:31:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=131, userId=1, spTitle=一表通项目功能实现流程, spContext=每天任务, spTime=2020-08-27 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=132, userId=1, spTitle=springcloud整合配置中心config, spContext=config, spTime=2020-08-27 22:56:25, spLink=http://www.baidu.com), StudyPlanDto(spId=133, userId=1, spTitle=中大的一表通国际处的功能模块理解和BUG, spContext=每天任务, spTime=2020-08-28 20:57:46, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=134, userId=1, spTitle=rabbitMQ消息队列学习, spContext=rabbitMQ, spTime=2020-08-28 21:00:22, spLink=https://www.bilibili.com/video/BV1dE411K7MG?from=search&seid=3960229584189343275), StudyPlanDto(spId=135, userId=1, spTitle=集群, spContext=集群, spTime=2020-08-30 23:31:03, spLink=http://www.baidu.com), StudyPlanDto(spId=136, userId=1, spTitle=elasticsearch学习, spContext=elasticsearch, spTime=2020-08-31 00:03:31, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?from=search&seid=12571544612246652602), StudyPlanDto(spId=137, userId=1, spTitle=Hadoop大数据, spContext=hadoop, spTime=2020-08-31 00:18:22, spLink=https://www.bilibili.com/video/BV1cW411r7c5?from=search&seid=14522186892049429676), StudyPlanDto(spId=138, userId=1, spTitle=JVM调优, spContext=JVM, spTime=2020-08-31 00:49:24, spLink=https://www.baidu.com), StudyPlanDto(spId=139, userId=1, spTitle=Shiro安全框架, spContext=Shiro, spTime=2020-08-31 01:19:12, spLink=http://www.baidu.com), StudyPlanDto(spId=140, userId=1, spTitle=MongoDB, spContext=MongoDB, spTime=2020-08-31 01:22:03, spLink=http://www.baidu.com), StudyPlanDto(spId=141, userId=1, spTitle=用ElasticSreach写组队系统的搜索功能实现, spContext=ElasticSreach, spTime=2020-08-31 22:48:11, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?p=20), StudyPlanDto(spId=142, userId=1, spTitle=Hadoop 15-21, spContext=Hadoop, spTime=2020-09-02 00:27:09, spLink=https://www.bilibili.com/video/BV1cW411r7c5?p=15), StudyPlanDto(spId=143, userId=1, spTitle=狂神说elasticsearch, spContext=elasticsearch, spTime=2020-09-03 01:48:14, spLink=https://blog.csdn.net/admin741admin/article/details/107816451), StudyPlanDto(spId=144, userId=1, spTitle=mongodb连接和整合spring boot, spContext=mongodb, spTime=2020-09-03 23:08:04, spLink=http://www.baidu.com), StudyPlanDto(spId=145, userId=1, spTitle=研究源码, spContext=源码, spTime=2020-09-03 23:53:46, spLink=http://www.baidu.com), StudyPlanDto(spId=146, userId=1, spTitle=redis集群, spContext=redis, spTime=2020-09-06 23:25:54, spLink=https://www.bilibili.com/video/BV1FZ4y1u7ny?p=24), StudyPlanDto(spId=147, userId=1, spTitle=HDFS分布式文件系统, spContext=HDFS, spTime=2020-09-07 09:06:30, spLink=http://www.baidu.com), StudyPlanDto(spId=148, userId=1, spTitle=Nginx学习, spContext=nginx, spTime=2020-09-07 09:06:46, spLink=http://www.baidu.com), StudyPlanDto(spId=149, userId=1, spTitle=nginx集群高可用配置, spContext=nginx, spTime=2020-09-08 02:01:33, spLink=https://www.bilibili.com/video/BV1zJ411w7SV?p=15), StudyPlanDto(spId=150, userId=1, spTitle=Java视频, spContext=每天任务, spTime=2020-09-08 02:00:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=151, userId=1, spTitle=sql语句熟悉, spContext=sql, spTime=2020-09-09 02:17:29, spLink=http://www.baidu.com), StudyPlanDto(spId=152, userId=1, spTitle=K8S学习, spContext=K8S, spTime=2020-09-12 02:23:50, spLink=http://www.baidu.com)]
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [StudyPlanDto(spId=152, userId=1, spTitle=K8S学习, spContext=K8S, spTime=2020-09-12 02:23:50, spLink=http://www.baidu.com), StudyPlanDto(spId=151, userId=1, spTitle=sql语句熟悉, spContext=sql, spTime=2020-09-09 02:17:29, spLink=http://www.baidu.com), StudyPlanDto(spId=149, userId=1, spTitle=nginx集群高可用配置, spContext=nginx, spTime=2020-09-08 02:01:33, spLink=https://www.bilibili.com/video/BV1zJ411w7SV?p=15), StudyPlanDto(spId=150, userId=1, spTitle=Java视频, spContext=每天任务, spTime=2020-09-08 02:00:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=148, userId=1, spTitle=Nginx学习, spContext=nginx, spTime=2020-09-07 09:06:46, spLink=http://www.baidu.com), StudyPlanDto(spId=147, userId=1, spTitle=HDFS分布式文件系统, spContext=HDFS, spTime=2020-09-07 09:06:30, spLink=http://www.baidu.com), StudyPlanDto(spId=146, userId=1, spTitle=redis集群, spContext=redis, spTime=2020-09-06 23:25:54, spLink=https://www.bilibili.com/video/BV1FZ4y1u7ny?p=24), StudyPlanDto(spId=145, userId=1, spTitle=研究源码, spContext=源码, spTime=2020-09-03 23:53:46, spLink=http://www.baidu.com), StudyPlanDto(spId=144, userId=1, spTitle=mongodb连接和整合spring boot, spContext=mongodb, spTime=2020-09-03 23:08:04, spLink=http://www.baidu.com), StudyPlanDto(spId=143, userId=1, spTitle=狂神说elasticsearch, spContext=elasticsearch, spTime=2020-09-03 01:48:14, spLink=https://blog.csdn.net/admin741admin/article/details/107816451), StudyPlanDto(spId=142, userId=1, spTitle=Hadoop 15-21, spContext=Hadoop, spTime=2020-09-02 00:27:09, spLink=https://www.bilibili.com/video/BV1cW411r7c5?p=15), StudyPlanDto(spId=141, userId=1, spTitle=用ElasticSreach写组队系统的搜索功能实现, spContext=ElasticSreach, spTime=2020-08-31 22:48:11, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?p=20), StudyPlanDto(spId=140, userId=1, spTitle=MongoDB, spContext=MongoDB, spTime=2020-08-31 01:22:03, spLink=http://www.baidu.com), StudyPlanDto(spId=139, userId=1, spTitle=Shiro安全框架, spContext=Shiro, spTime=2020-08-31 01:19:12, spLink=http://www.baidu.com), StudyPlanDto(spId=138, userId=1, spTitle=JVM调优, spContext=JVM, spTime=2020-08-31 00:49:24, spLink=https://www.baidu.com), StudyPlanDto(spId=137, userId=1, spTitle=Hadoop大数据, spContext=hadoop, spTime=2020-08-31 00:18:22, spLink=https://www.bilibili.com/video/BV1cW411r7c5?from=search&seid=14522186892049429676), StudyPlanDto(spId=136, userId=1, spTitle=elasticsearch学习, spContext=elasticsearch, spTime=2020-08-31 00:03:31, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?from=search&seid=12571544612246652602), StudyPlanDto(spId=135, userId=1, spTitle=集群, spContext=集群, spTime=2020-08-30 23:31:03, spLink=http://www.baidu.com), StudyPlanDto(spId=134, userId=1, spTitle=rabbitMQ消息队列学习, spContext=rabbitMQ, spTime=2020-08-28 21:00:22, spLink=https://www.bilibili.com/video/BV1dE411K7MG?from=search&seid=3960229584189343275), StudyPlanDto(spId=133, userId=1, spTitle=中大的一表通国际处的功能模块理解和BUG, spContext=每天任务, spTime=2020-08-28 20:57:46, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=132, userId=1, spTitle=springcloud整合配置中心config, spContext=config, spTime=2020-08-27 22:56:25, spLink=http://www.baidu.com), StudyPlanDto(spId=131, userId=1, spTitle=一表通项目功能实现流程, spContext=每天任务, spTime=2020-08-27 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=130, userId=1, spTitle=Hystrix熔断整合springcloud, spContext=每天任务, spTime=2020-08-27 02:31:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=129, userId=1, spTitle=springcloud整合Zuul2、Gateway服务网关, spContext=zuul2,gateway, spTime=2020-08-27 02:29:45, spLink=https://www.cnblogs.com/cloudxlr/p/11768468.html), StudyPlanDto(spId=128, userId=1, spTitle=git代码回滚操作学习, spContext=git, spTime=2020-08-26 10:28:22, spLink=http://www.baidu.com), StudyPlanDto(spId=127, userId=1, spTitle=如何拦截路由器请求获取用户信息, spContext=路由器, spTime=2020-08-26 10:26:02, spLink=http://www.baidu.com), StudyPlanDto(spId=126, userId=1, spTitle=Hystrix, spContext=Hystrix, spTime=2020-08-25 22:52:29, spLink=https://blog.csdn.net/loushuiyifan/article/details/82702522), StudyPlanDto(spId=125, userId=1, spTitle=consul整合springcloud, spContext=consul, spTime=2020-08-25 22:48:47, spLink=https://www.cnblogs.com/wf614/p/12919799.html#_12), StudyPlanDto(spId=124, userId=1, spTitle=Hystrix熔断的学习和配置整合springcloud, spContext=Hystrix, spTime=2020-08-25 00:56:13, spLink=http://www.baidu.com), StudyPlanDto(spId=120, userId=1, spTitle=Consul 服务注册与发现的学习和配置整合springcloud, spContext=Consul, spTime=2020-08-25 00:53:27, spLink=http://www.baidu.com), StudyPlanDto(spId=123, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-25 00:53:13, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=119, userId=1, spTitle=OpenFeign的学习和配置整合springcloud, spContext=OpenFeign, spTime=2020-08-25 00:52:54, spLink=https://www.cnblogs.com/wf614/p/12919798.html), StudyPlanDto(spId=122, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-25 00:52:41, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=121, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-25 00:52:21, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=118, userId=1, spTitle=portainer学习和配置, spContext=portainer, spTime=2020-08-24 16:20:02, spLink=https://www.cnblogs.com/ExMan/p/11657069.html), StudyPlanDto(spId=117, userId=1, spTitle=每天任务打卡时间BUG, spContext=组队系统, spTime=2020-08-23 17:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=116, userId=1, spTitle=spring security学习, spContext=spring security, spTime=2020-08-23 17:16:19, spLink=http://www.baidu.com), StudyPlanDto(spId=115, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-23 17:14:27, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=114, userId=1, spTitle=深入对session底层的理解, spContext=session, spTime=2020-08-22 17:11:29, spLink=http://www.baidu.com), StudyPlanDto(spId=113, userId=1, spTitle=websocket通信, spContext=websocket, spTime=2020-08-22 16:43:58, spLink=http://www.baidu.com), StudyPlanDto(spId=112, userId=1, spTitle=时间调度器的cron表达式, spContext=quartz, spTime=2020-08-22 14:26:46, spLink=https://www.cnblogs.com/yanghj010/p/10875151.html), StudyPlanDto(spId=111, userId=1, spTitle=war包和jar包的区别, spContext=springboot, spTime=2020-08-22 00:55:59, spLink=http://www.baidu.com), StudyPlanDto(spId=110, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:13, spLink=http://www.baidu.com), StudyPlanDto(spId=109, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:03, spLink=http://www.baidu.com), StudyPlanDto(spId=108, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-22 00:20:28, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=107, userId=1, spTitle=每天总结（组队系统功能）, spContext=每天任务, spTime=2020-08-21 01:11:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=106, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-21 01:11:49, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=105, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-21 01:11:47, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=104, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-21 01:11:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=103, userId=1, spTitle=springboot 注册三大组件servlet,filter,litener, spContext=springboot, spTime=2020-08-20 19:21:31, spLink=http://www.baidu.com), StudyPlanDto(spId=102, userId=1, spTitle=react 类和方法两种方式建立组件的使用, spContext=react, spTime=2020-08-20 02:48:32, spLink=http://www.baidu.com), StudyPlanDto(spId=101, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-20 02:32:05, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=100, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-20 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=99, userId=1, spTitle=完成每天学习时间点功能设计, spContext=组队系统, spTime=2020-08-20 02:31:24, spLink=http://www.baidu.com), StudyPlanDto(spId=98, userId=1, spTitle=权限管理平台数据库设计, spContext=权限管理平台, spTime=2020-08-20 02:25:43, spLink=http://www.baidu.com), StudyPlanDto(spId=97, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:08, spLink=http://www.baidu.com), StudyPlanDto(spId=96, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:01, spLink=http://www.baidu.com), StudyPlanDto(spId=95, userId=1, spTitle=思考如何提高工作效率, spContext=每天任务, spTime=2020-08-20 01:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=94, userId=1, spTitle=中大系统个人中心查询任务的sql分析, spContext=sql, spTime=2020-08-19 17:35:37, spLink=http://localhost:8070/#/personalUser), StudyPlanDto(spId=93, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-19 01:25:35, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=92, userId=1, spTitle=Dockerfile p26, spContext=Docker, spTime=2020-08-16 13:11:06, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=26), StudyPlanDto(spId=91, userId=1, spTitle=springcloud环境搭建, spContext=springcloud, spTime=2020-08-15 03:09:12, spLink=https://note.youdao.com/web/#/file/WEB3c5c7b9601a754586ebce711dfedbf5a/note/WEB3a6ae7f7653499f7c3fe0c70eed036af/), StudyPlanDto(spId=90, userId=1, spTitle=Docker学习p31~p34, spContext=Docker, spTime=2020-08-15 02:54:09, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=34), StudyPlanDto(spId=89, userId=1, spTitle=Docker学习p18~p24, spContext=Docker, spTime=2020-08-15 01:20:27, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=24), StudyPlanDto(spId=88, userId=1, spTitle=完成组队系统每天任务总结功能, spContext=组队系统, spTime=2020-08-11 00:26:16, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=87, userId=1, spTitle=springboot基础环境搭建（学习专用）, spContext=springboot, spTime=2020-08-10 17:08:49, spLink=http://www.baidu.com), StudyPlanDto(spId=86, userId=1, spTitle=组队系统修改密码功能实现, spContext=组队系统, spTime=2020-08-07 22:38:41, spLink=http://www.baidu.com), StudyPlanDto(spId=85, userId=1, spTitle=完成每天任务的开发, spContext=组队系统, spTime=2020-08-07 00:24:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=84, userId=1, spTitle=Docker p14 ~ 18, spContext=docker, spTime=2020-08-04 23:58:30, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=18), StudyPlanDto(spId=83, userId=1, spTitle=Docker学习p14~p25, spContext=Docker, spTime=2020-08-04 20:29:36, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=14), StudyPlanDto(spId=82, userId=1, spTitle=Docker 安装，基本命令, spContext=Docker, spTime=2020-08-03 23:50:22, spLink=http://www.baidu.com), StudyPlanDto(spId=81, userId=1, spTitle=表单数据校验，Docket, spContext=react，docket, spTime=2020-07-26 05:31:10, spLink=https://ant.design/components/form-cn/#API), StudyPlanDto(spId=80, userId=1, spTitle=用react做每天任务打卡功能, spContext=react, spTime=2020-07-24 18:55:02, spLink=baidu.com), StudyPlanDto(spId=79, userId=1, spTitle=完成前端学生表的增加，修改，删除功能, spContext=ly, spTime=2020-07-21 20:27:46, spLink=baidu.com), StudyPlanDto(spId=78, userId=1, spTitle=BUG： mybatis + oracle 逆向功能报错：驱动的版本有问题, spContext=bug, spTime=2020-07-21 20:27:07, spLink=baidu.com), StudyPlanDto(spId=77, userId=1, spTitle=阿里巴巴代码编程规范, spContext=编程, spTime=2020-07-21 19:48:10, spLink=baidu.com), StudyPlanDto(spId=76, userId=1, spTitle=dom对象的api, spContext=dom, spTime=2020-07-21 00:28:43, spLink=baidu.com), StudyPlanDto(spId=75, userId=1, spTitle=算法：两数之和, spContext=算法, spTime=2020-07-20 13:15:13, spLink=https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/submissions/), StudyPlanDto(spId=74, userId=1, spTitle=深入了解CAP, spContext=cap, spTime=2020-07-16 16:46:34, spLink=baidu.com), StudyPlanDto(spId=73, userId=1, spTitle=深入了解angular缓存, spContext=angular, spTime=2020-07-15 10:56:45, spLink=http://baidu.com), StudyPlanDto(spId=72, userId=1, spTitle=算法：三角形最小路径和, spContext=leetcode, spTime=2020-07-14 21:41:03, spLink=https://leetcode-cn.com/problems/triangle/), StudyPlanDto(spId=71, userId=1, spTitle=解决websocket在项目中的聊天通信问题, spContext=websocket, spTime=2020-07-14 21:37:43, spLink=http://www.baidu.com), StudyPlanDto(spId=70, userId=1, spTitle=session在分布式中如何实现共享, spContext=分布式, spTime=2020-07-10 16:39:35, spLink=baidu.com), StudyPlanDto(spId=69, userId=1, spTitle=复习：JVM内存模型, spContext=JVM, spTime=2020-07-09 21:31:45, spLink=https://www.jianshu.com/p/76959115d486), StudyPlanDto(spId=68, userId=1, spTitle=解决websocket在nginx上的跨越问题, spContext=websocket部署, spTime=2020-07-07 03:31:08, spLink=http://www.baidu.com), StudyPlanDto(spId=67, userId=1, spTitle=java利用Socket实现客户端与客户端通信, spContext=socket, spTime=2020-07-06 05:52:15, spLink=https://www.jianshu.com/p/211720900e14), StudyPlanDto(spId=66, userId=1, spTitle=socket原理, spContext=socket, spTime=2020-07-06 02:59:00, spLink=https://www.cnblogs.com/wn1m/p/10983172.html), StudyPlanDto(spId=65, userId=1, spTitle=IO流，socket，web socket, spContext=IO流, spTime=2020-07-05 22:04:00, spLink=https://blog.csdn.net/qq_37875585/article/details/89385688), StudyPlanDto(spId=64, userId=1, spTitle=算法：连续子数组的最大和, spContext=算法, spTime=2020-07-05 11:37:13, spLink=https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/), StudyPlanDto(spId=63, userId=1, spTitle=算法：不同的二叉搜索树, spContext=算法, spTime=2020-07-05 02:04:41, spLink=https://leetcode-cn.com/problems/unique-binary-search-trees/), StudyPlanDto(spId=62, userId=1, spTitle=算法：链表中倒数第k个节点, spContext=算法, spTime=2020-07-05 02:03:17, spLink=https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/), StudyPlanDto(spId=61, userId=1, spTitle=顺时针打印矩阵, spContext=算法, spTime=2020-07-04 23:24:10, spLink=https://leetcode-cn.com/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/), StudyPlanDto(spId=60, userId=1, spTitle=算法：最长有效括号, spContext=算法, spTime=2020-07-04 07:05:00, spLink=https://leetcode-cn.com/problems/longest-valid-parentheses/), StudyPlanDto(spId=59, userId=1, spTitle=算法：将有序数组转换为二叉搜索树, spContext=算法, spTime=2020-07-03 03:20:41, spLink=https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/), StudyPlanDto(spId=58, userId=1, spTitle=redis集群详解, spContext=redis, spTime=2020-07-02 01:42:28, spLink=https://blog.csdn.net/miss1181248983/article/details/90056960), StudyPlanDto(spId=57, userId=1, spTitle=zookeeper-图灵学院, spContext=zookeeper, spTime=2020-07-02 01:36:37, spLink=https://ke.qq.com/course/list/%E5%9B%BE%E7%81%B5), StudyPlanDto(spId=56, userId=1, spTitle=ActiveMQ消息中间件, spContext=ActiveMQ, spTime=2020-07-01 05:31:27, spLink=http://activemq.apache.org/components/classic/documentation), StudyPlanDto(spId=55, userId=1, spTitle=redis发布/订阅模式, spContext=redis, spTime=2020-07-01 04:57:00, spLink=https://www.cnblogs.com/qlqwjy/p/9763754.html), StudyPlanDto(spId=54, userId=1, spTitle=算法：最长重复子数组, spContext=给两个数组A和B ,返回两个数组的公共最长子数组的长度；, spTime=2020-07-01 02:58:11, spLink=https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/), StudyPlanDto(spId=53, userId=1, spTitle=springboot+websocket实现在线聊天, spContext=websocket, spTime=2020-07-01 02:26:13, spLink=https://blog.csdn.net/qq_41603102/article/details/82492040), StudyPlanDto(spId=52, userId=1, spTitle=斗鱼开源首秀:基于Go的微服务框架Jupiter, spContext=时事, spTime=2020-06-30 11:40:34, spLink=https://www.oschina.net/question/4487475_2317201?from=20200621), StudyPlanDto(spId=51, userId=1, spTitle=AI学习资源(github), spContext=AI 学习资料包下载链接, spTime=2020-06-30 11:30:53, spLink=https://gitee.com/OSCYuanChuangHui/ai_learning), StudyPlanDto(spId=50, userId=1, spTitle=soket通信原理分析, spContext=了解soket即时通信, spTime=2020-06-30 10:57:44, spLink=http://www.baidu.com), StudyPlanDto(spId=49, userId=1, spTitle=修改组队项目的缓存刷新和添加项目缓存不更新问题, spContext=设置缓存过期时间。修改后端添加数据缓存更新问题, spTime=2020-06-30 10:50:22, spLink=www.baidu.com), StudyPlanDto(spId=48, userId=1, spTitle=分析近十年的行业发展情况, spContext=2020－06－30, spTime=2020-06-30 10:21:51, spLink=http://www.baidu.com), StudyPlanDto(spId=47, userId=1, spTitle=算法：用两个栈实现队列, spContext=两个栈实现队列, spTime=2020-06-30 10:18:39, spLink=https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/), StudyPlanDto(spId=46, userId=1, spTitle=2020-06-30感悟, spContext=找到最前沿的开发技术，并学习和掌握它；
少玩少看，多学习；
忆一晚上没睡所思所想，回到过去最希望做的事，让自己提升；
梦想：在互联网+教育行业发展；, spTime=2020-06-30 10:12:11, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=45, userId=1, spTitle=算法：零钱兑换, spContext=动态规划, spTime=2020-06-30 04:46:08, spLink=https://leetcode-cn.com/problems/coin-change/), StudyPlanDto(spId=44, userId=1, spTitle=redis配置文件, spContext=redis, spTime=2020-06-30 02:43:37, spLink=https://blog.csdn.net/suprezheng/article/details/90679790), StudyPlanDto(spId=43, userId=1, spTitle=redis面试题, spContext=redis, spTime=2020-06-29 03:03:39, spLink=https://blog.csdn.net/ThinkWon/article/details/103522351), StudyPlanDto(spId=42, userId=1, spTitle=算法：数组中的第k个最大元素, spContext=在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。, spTime=2020-06-29 02:30:58, spLink=https://leetcode-cn.com/problems/kth-largest-element-in-an-array/), StudyPlanDto(spId=41, userId=1, spTitle=算法：删除与获取点数, spContext=删除与获取点数, spTime=2020-06-29 00:22:21, spLink=https://leetcode-cn.com/problems/delete-and-earn/), StudyPlanDto(spId=40, userId=1, spTitle=算法：连续的子数组和, spContext=给定一个包含非负数的数组和一目标整数k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为2，且总和为 k 的倍数，即总和为n*k，其中n也是一个整数。, spTime=2020-06-28 20:26:12, spLink=https://leetcode-cn.com/problems/continuous-subarray-sum/), StudyPlanDto(spId=39, userId=1, spTitle=算法： 硬币, spContext=硬币。给定数量不限的硬币，币值为25分、10分、5分和1分，编写代码计算n分有几种表示法。(结果可能会很大，你需要将结果模上1000000007), spTime=2020-06-28 17:42:10, spLink=https://leetcode-cn.com/problems/coin-lcci/), StudyPlanDto(spId=38, userId=1, spTitle=算法：长度最小的子数组, spContext=长度最小的子数组, spTime=2020-06-28 01:36:53, spLink=https://leetcode-cn.com/problems/minimum-size-subarray-sum/), StudyPlanDto(spId=37, userId=1, spTitle=算法：最长不含重复字符的子字符串, spContext=请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。, spTime=2020-06-27 20:14:47, spLink=https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/solution/mian-shi-ti-48-zui-chang-bu-han-zhong-fu-zi-fu-d-9/), StudyPlanDto(spId=36, userId=1, spTitle=算法：缺失的第一个正数, spContext=给你一个未排序的整数数组，请你找出其中没有出现的最小的正整数。, spTime=2020-06-27 08:38:52, spLink=https://leetcode-cn.com/problems/first-missing-positive/), StudyPlanDto(spId=35, userId=1, spTitle=用Angular编写个人在线简历, spContext=在线简历制作, spTime=2020-06-27 05:57:17, spLink=http://www.baidu.com), StudyPlanDto(spId=34, userId=1, spTitle=完善组队系统的注册功能, spContext=完善组队系统的注册功能, spTime=2020-06-27 03:58:39, spLink=http://120.79.191.236/#/passport/register), StudyPlanDto(spId=33, userId=1, spTitle=机器人的运动范围, spContext=地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-26 03:06:26, spLink=https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof), StudyPlanDto(spId=32, userId=1, spTitle=修改组队系统时间不对问题, spContext=serverTimezone=Asia/Shanghai, spTime=2020-06-26 02:51:56, spLink=https://www.cnblogs.com/july-sunny/p/11888270.html), StudyPlanDto(spId=31, userId=1, spTitle=redis面试题, spContext=缓存雪崩、缓存穿透、缓存预热、缓存更新、缓存降级等问题, spTime=2020-06-25 17:38:30, spLink=https://blog.csdn.net/Butterfly_resting/article/details/89668661), StudyPlanDto(spId=30, userId=1, spTitle=算法： 矩阵中的路径, spContext=请设计一个函数，用来判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。例如，在下面的3×4的矩阵中包含一条字符串“bfce”的路径（路径中的字母用加粗标出）。

[["a","b","c","e"],
["s","f","c","s"],
["a","d","e","e"]]

但矩阵中不包含字符串“abfb”的路径，因为字符串的第一个字符b占据了矩阵中的第一行第二个格子之后，路径不能再次进入这个格子。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:18:26, spLink=https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/), StudyPlanDto(spId=29, userId=1, spTitle=算法：礼物的最大价值, spContext=在一个 m*n 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。你可以从棋盘的左上角开始拿格子里的礼物，并每次向右或者向下移动一格、直到到达棋盘的右下角。给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:05:10, spLink=https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/), StudyPlanDto(spId=28, userId=1, spTitle=深圳创酷互动信息技术有限公司, spContext=一、公司名称：深圳创酷互动信息技术有限公司
二、招聘岗位：java工程师
三、岗位职责：
1、负责平台系统业务的服务端开发工作。
2、根据开发规范独立完成编码，测试。按预定目标完成任务，保证代码质量。
3、主动跟进开发过程中的各项事务，例如开发联调、处理Bug、线上部署等。
四、任职要求：
1、本科以上学历，计算机相关专业，1年以上Java服务端开发经验。
2、掌握常用的设计模式，有良好编程习惯。掌握并发、分布式等技术。
3、熟悉Spring全家桶、Mybatis等技术框架。熟练使用Git、Maven、Jenkins等工具。
4、了解RESTful架构，熟悉HTTP等互联网基础知识。
5、熟练MySQL数据库，熟悉Redis，RabbitMQ等中间件。
6、熟练Linux系统常用命令。
7、良好的学习能力、沟通能力和团队协作精神，能独立完成功能模块开发工作。, spTime=2020-06-25 09:01:36, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=74069), StudyPlanDto(spId=27, userId=1, spTitle=广州众盟信息科技有限公司, spContext=Java工程师(5k - 7k), spTime=2020-06-25 08:58:32, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=66368)]
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[StudyPlanDto(spId=152, userId=1, spTitle=K8S学习, spContext=K8S, spTime=2020-09-12 02:23:50, spLink=http://www.baidu.com), StudyPlanDto(spId=151, userId=1, spTitle=sql语句熟悉, spContext=sql, spTime=2020-09-09 02:17:29, spLink=http://www.baidu.com), StudyPlanDto(spId=149, userId=1, spTitle=nginx集群高可用配置, spContext=nginx, spTime=2020-09-08 02:01:33, spLink=https://www.bilibili.com/video/BV1zJ411w7SV?p=15), StudyPlanDto(spId=150, userId=1, spTitle=Java视频, spContext=每天任务, spTime=2020-09-08 02:00:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=148, userId=1, spTitle=Nginx学习, spContext=nginx, spTime=2020-09-07 09:06:46, spLink=http://www.baidu.com), StudyPlanDto(spId=147, userId=1, spTitle=HDFS分布式文件系统, spContext=HDFS, spTime=2020-09-07 09:06:30, spLink=http://www.baidu.com), StudyPlanDto(spId=146, userId=1, spTitle=redis集群, spContext=redis, spTime=2020-09-06 23:25:54, spLink=https://www.bilibili.com/video/BV1FZ4y1u7ny?p=24), StudyPlanDto(spId=145, userId=1, spTitle=研究源码, spContext=源码, spTime=2020-09-03 23:53:46, spLink=http://www.baidu.com), StudyPlanDto(spId=144, userId=1, spTitle=mongodb连接和整合spring boot, spContext=mongodb, spTime=2020-09-03 23:08:04, spLink=http://www.baidu.com), StudyPlanDto(spId=143, userId=1, spTitle=狂神说elasticsearch, spContext=elasticsearch, spTime=2020-09-03 01:48:14, spLink=https://blog.csdn.net/admin741admin/article/details/107816451), StudyPlanDto(spId=142, userId=1, spTitle=Hadoop 15-21, spContext=Hadoop, spTime=2020-09-02 00:27:09, spLink=https://www.bilibili.com/video/BV1cW411r7c5?p=15), StudyPlanDto(spId=141, userId=1, spTitle=用ElasticSreach写组队系统的搜索功能实现, spContext=ElasticSreach, spTime=2020-08-31 22:48:11, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?p=20), StudyPlanDto(spId=140, userId=1, spTitle=MongoDB, spContext=MongoDB, spTime=2020-08-31 01:22:03, spLink=http://www.baidu.com), StudyPlanDto(spId=139, userId=1, spTitle=Shiro安全框架, spContext=Shiro, spTime=2020-08-31 01:19:12, spLink=http://www.baidu.com), StudyPlanDto(spId=138, userId=1, spTitle=JVM调优, spContext=JVM, spTime=2020-08-31 00:49:24, spLink=https://www.baidu.com), StudyPlanDto(spId=137, userId=1, spTitle=Hadoop大数据, spContext=hadoop, spTime=2020-08-31 00:18:22, spLink=https://www.bilibili.com/video/BV1cW411r7c5?from=search&seid=14522186892049429676), StudyPlanDto(spId=136, userId=1, spTitle=elasticsearch学习, spContext=elasticsearch, spTime=2020-08-31 00:03:31, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?from=search&seid=12571544612246652602), StudyPlanDto(spId=135, userId=1, spTitle=集群, spContext=集群, spTime=2020-08-30 23:31:03, spLink=http://www.baidu.com), StudyPlanDto(spId=134, userId=1, spTitle=rabbitMQ消息队列学习, spContext=rabbitMQ, spTime=2020-08-28 21:00:22, spLink=https://www.bilibili.com/video/BV1dE411K7MG?from=search&seid=3960229584189343275), StudyPlanDto(spId=133, userId=1, spTitle=中大的一表通国际处的功能模块理解和BUG, spContext=每天任务, spTime=2020-08-28 20:57:46, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=132, userId=1, spTitle=springcloud整合配置中心config, spContext=config, spTime=2020-08-27 22:56:25, spLink=http://www.baidu.com), StudyPlanDto(spId=131, userId=1, spTitle=一表通项目功能实现流程, spContext=每天任务, spTime=2020-08-27 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=130, userId=1, spTitle=Hystrix熔断整合springcloud, spContext=每天任务, spTime=2020-08-27 02:31:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=129, userId=1, spTitle=springcloud整合Zuul2、Gateway服务网关, spContext=zuul2,gateway, spTime=2020-08-27 02:29:45, spLink=https://www.cnblogs.com/cloudxlr/p/11768468.html), StudyPlanDto(spId=128, userId=1, spTitle=git代码回滚操作学习, spContext=git, spTime=2020-08-26 10:28:22, spLink=http://www.baidu.com), StudyPlanDto(spId=127, userId=1, spTitle=如何拦截路由器请求获取用户信息, spContext=路由器, spTime=2020-08-26 10:26:02, spLink=http://www.baidu.com), StudyPlanDto(spId=126, userId=1, spTitle=Hystrix, spContext=Hystrix, spTime=2020-08-25 22:52:29, spLink=https://blog.csdn.net/loushuiyifan/article/details/82702522), StudyPlanDto(spId=125, userId=1, spTitle=consul整合springcloud, spContext=consul, spTime=2020-08-25 22:48:47, spLink=https://www.cnblogs.com/wf614/p/12919799.html#_12), StudyPlanDto(spId=124, userId=1, spTitle=Hystrix熔断的学习和配置整合springcloud, spContext=Hystrix, spTime=2020-08-25 00:56:13, spLink=http://www.baidu.com), StudyPlanDto(spId=120, userId=1, spTitle=Consul 服务注册与发现的学习和配置整合springcloud, spContext=Consul, spTime=2020-08-25 00:53:27, spLink=http://www.baidu.com), StudyPlanDto(spId=123, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-25 00:53:13, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=119, userId=1, spTitle=OpenFeign的学习和配置整合springcloud, spContext=OpenFeign, spTime=2020-08-25 00:52:54, spLink=https://www.cnblogs.com/wf614/p/12919798.html), StudyPlanDto(spId=122, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-25 00:52:41, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=121, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-25 00:52:21, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=118, userId=1, spTitle=portainer学习和配置, spContext=portainer, spTime=2020-08-24 16:20:02, spLink=https://www.cnblogs.com/ExMan/p/11657069.html), StudyPlanDto(spId=117, userId=1, spTitle=每天任务打卡时间BUG, spContext=组队系统, spTime=2020-08-23 17:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=116, userId=1, spTitle=spring security学习, spContext=spring security, spTime=2020-08-23 17:16:19, spLink=http://www.baidu.com), StudyPlanDto(spId=115, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-23 17:14:27, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=114, userId=1, spTitle=深入对session底层的理解, spContext=session, spTime=2020-08-22 17:11:29, spLink=http://www.baidu.com), StudyPlanDto(spId=113, userId=1, spTitle=websocket通信, spContext=websocket, spTime=2020-08-22 16:43:58, spLink=http://www.baidu.com), StudyPlanDto(spId=112, userId=1, spTitle=时间调度器的cron表达式, spContext=quartz, spTime=2020-08-22 14:26:46, spLink=https://www.cnblogs.com/yanghj010/p/10875151.html), StudyPlanDto(spId=111, userId=1, spTitle=war包和jar包的区别, spContext=springboot, spTime=2020-08-22 00:55:59, spLink=http://www.baidu.com), StudyPlanDto(spId=110, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:13, spLink=http://www.baidu.com), StudyPlanDto(spId=109, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:03, spLink=http://www.baidu.com), StudyPlanDto(spId=108, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-22 00:20:28, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=107, userId=1, spTitle=每天总结（组队系统功能）, spContext=每天任务, spTime=2020-08-21 01:11:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=106, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-21 01:11:49, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=105, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-21 01:11:47, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=104, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-21 01:11:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=103, userId=1, spTitle=springboot 注册三大组件servlet,filter,litener, spContext=springboot, spTime=2020-08-20 19:21:31, spLink=http://www.baidu.com), StudyPlanDto(spId=102, userId=1, spTitle=react 类和方法两种方式建立组件的使用, spContext=react, spTime=2020-08-20 02:48:32, spLink=http://www.baidu.com), StudyPlanDto(spId=101, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-20 02:32:05, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=100, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-20 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=99, userId=1, spTitle=完成每天学习时间点功能设计, spContext=组队系统, spTime=2020-08-20 02:31:24, spLink=http://www.baidu.com), StudyPlanDto(spId=98, userId=1, spTitle=权限管理平台数据库设计, spContext=权限管理平台, spTime=2020-08-20 02:25:43, spLink=http://www.baidu.com), StudyPlanDto(spId=97, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:08, spLink=http://www.baidu.com), StudyPlanDto(spId=96, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:01, spLink=http://www.baidu.com), StudyPlanDto(spId=95, userId=1, spTitle=思考如何提高工作效率, spContext=每天任务, spTime=2020-08-20 01:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=94, userId=1, spTitle=中大系统个人中心查询任务的sql分析, spContext=sql, spTime=2020-08-19 17:35:37, spLink=http://localhost:8070/#/personalUser), StudyPlanDto(spId=93, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-19 01:25:35, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=92, userId=1, spTitle=Dockerfile p26, spContext=Docker, spTime=2020-08-16 13:11:06, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=26), StudyPlanDto(spId=91, userId=1, spTitle=springcloud环境搭建, spContext=springcloud, spTime=2020-08-15 03:09:12, spLink=https://note.youdao.com/web/#/file/WEB3c5c7b9601a754586ebce711dfedbf5a/note/WEB3a6ae7f7653499f7c3fe0c70eed036af/), StudyPlanDto(spId=90, userId=1, spTitle=Docker学习p31~p34, spContext=Docker, spTime=2020-08-15 02:54:09, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=34), StudyPlanDto(spId=89, userId=1, spTitle=Docker学习p18~p24, spContext=Docker, spTime=2020-08-15 01:20:27, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=24), StudyPlanDto(spId=88, userId=1, spTitle=完成组队系统每天任务总结功能, spContext=组队系统, spTime=2020-08-11 00:26:16, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=87, userId=1, spTitle=springboot基础环境搭建（学习专用）, spContext=springboot, spTime=2020-08-10 17:08:49, spLink=http://www.baidu.com), StudyPlanDto(spId=86, userId=1, spTitle=组队系统修改密码功能实现, spContext=组队系统, spTime=2020-08-07 22:38:41, spLink=http://www.baidu.com), StudyPlanDto(spId=85, userId=1, spTitle=完成每天任务的开发, spContext=组队系统, spTime=2020-08-07 00:24:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=84, userId=1, spTitle=Docker p14 ~ 18, spContext=docker, spTime=2020-08-04 23:58:30, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=18), StudyPlanDto(spId=83, userId=1, spTitle=Docker学习p14~p25, spContext=Docker, spTime=2020-08-04 20:29:36, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=14), StudyPlanDto(spId=82, userId=1, spTitle=Docker 安装，基本命令, spContext=Docker, spTime=2020-08-03 23:50:22, spLink=http://www.baidu.com), StudyPlanDto(spId=81, userId=1, spTitle=表单数据校验，Docket, spContext=react，docket, spTime=2020-07-26 05:31:10, spLink=https://ant.design/components/form-cn/#API), StudyPlanDto(spId=80, userId=1, spTitle=用react做每天任务打卡功能, spContext=react, spTime=2020-07-24 18:55:02, spLink=baidu.com), StudyPlanDto(spId=79, userId=1, spTitle=完成前端学生表的增加，修改，删除功能, spContext=ly, spTime=2020-07-21 20:27:46, spLink=baidu.com), StudyPlanDto(spId=78, userId=1, spTitle=BUG： mybatis + oracle 逆向功能报错：驱动的版本有问题, spContext=bug, spTime=2020-07-21 20:27:07, spLink=baidu.com), StudyPlanDto(spId=77, userId=1, spTitle=阿里巴巴代码编程规范, spContext=编程, spTime=2020-07-21 19:48:10, spLink=baidu.com), StudyPlanDto(spId=76, userId=1, spTitle=dom对象的api, spContext=dom, spTime=2020-07-21 00:28:43, spLink=baidu.com), StudyPlanDto(spId=75, userId=1, spTitle=算法：两数之和, spContext=算法, spTime=2020-07-20 13:15:13, spLink=https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/submissions/), StudyPlanDto(spId=74, userId=1, spTitle=深入了解CAP, spContext=cap, spTime=2020-07-16 16:46:34, spLink=baidu.com), StudyPlanDto(spId=73, userId=1, spTitle=深入了解angular缓存, spContext=angular, spTime=2020-07-15 10:56:45, spLink=http://baidu.com), StudyPlanDto(spId=72, userId=1, spTitle=算法：三角形最小路径和, spContext=leetcode, spTime=2020-07-14 21:41:03, spLink=https://leetcode-cn.com/problems/triangle/), StudyPlanDto(spId=71, userId=1, spTitle=解决websocket在项目中的聊天通信问题, spContext=websocket, spTime=2020-07-14 21:37:43, spLink=http://www.baidu.com), StudyPlanDto(spId=70, userId=1, spTitle=session在分布式中如何实现共享, spContext=分布式, spTime=2020-07-10 16:39:35, spLink=baidu.com), StudyPlanDto(spId=69, userId=1, spTitle=复习：JVM内存模型, spContext=JVM, spTime=2020-07-09 21:31:45, spLink=https://www.jianshu.com/p/76959115d486), StudyPlanDto(spId=68, userId=1, spTitle=解决websocket在nginx上的跨越问题, spContext=websocket部署, spTime=2020-07-07 03:31:08, spLink=http://www.baidu.com), StudyPlanDto(spId=67, userId=1, spTitle=java利用Socket实现客户端与客户端通信, spContext=socket, spTime=2020-07-06 05:52:15, spLink=https://www.jianshu.com/p/211720900e14), StudyPlanDto(spId=66, userId=1, spTitle=socket原理, spContext=socket, spTime=2020-07-06 02:59:00, spLink=https://www.cnblogs.com/wn1m/p/10983172.html), StudyPlanDto(spId=65, userId=1, spTitle=IO流，socket，web socket, spContext=IO流, spTime=2020-07-05 22:04:00, spLink=https://blog.csdn.net/qq_37875585/article/details/89385688), StudyPlanDto(spId=64, userId=1, spTitle=算法：连续子数组的最大和, spContext=算法, spTime=2020-07-05 11:37:13, spLink=https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/), StudyPlanDto(spId=63, userId=1, spTitle=算法：不同的二叉搜索树, spContext=算法, spTime=2020-07-05 02:04:41, spLink=https://leetcode-cn.com/problems/unique-binary-search-trees/), StudyPlanDto(spId=62, userId=1, spTitle=算法：链表中倒数第k个节点, spContext=算法, spTime=2020-07-05 02:03:17, spLink=https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/), StudyPlanDto(spId=61, userId=1, spTitle=顺时针打印矩阵, spContext=算法, spTime=2020-07-04 23:24:10, spLink=https://leetcode-cn.com/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/), StudyPlanDto(spId=60, userId=1, spTitle=算法：最长有效括号, spContext=算法, spTime=2020-07-04 07:05:00, spLink=https://leetcode-cn.com/problems/longest-valid-parentheses/), StudyPlanDto(spId=59, userId=1, spTitle=算法：将有序数组转换为二叉搜索树, spContext=算法, spTime=2020-07-03 03:20:41, spLink=https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/), StudyPlanDto(spId=58, userId=1, spTitle=redis集群详解, spContext=redis, spTime=2020-07-02 01:42:28, spLink=https://blog.csdn.net/miss1181248983/article/details/90056960), StudyPlanDto(spId=57, userId=1, spTitle=zookeeper-图灵学院, spContext=zookeeper, spTime=2020-07-02 01:36:37, spLink=https://ke.qq.com/course/list/%E5%9B%BE%E7%81%B5), StudyPlanDto(spId=56, userId=1, spTitle=ActiveMQ消息中间件, spContext=ActiveMQ, spTime=2020-07-01 05:31:27, spLink=http://activemq.apache.org/components/classic/documentation), StudyPlanDto(spId=55, userId=1, spTitle=redis发布/订阅模式, spContext=redis, spTime=2020-07-01 04:57:00, spLink=https://www.cnblogs.com/qlqwjy/p/9763754.html), StudyPlanDto(spId=54, userId=1, spTitle=算法：最长重复子数组, spContext=给两个数组A和B ,返回两个数组的公共最长子数组的长度；, spTime=2020-07-01 02:58:11, spLink=https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/), StudyPlanDto(spId=53, userId=1, spTitle=springboot+websocket实现在线聊天, spContext=websocket, spTime=2020-07-01 02:26:13, spLink=https://blog.csdn.net/qq_41603102/article/details/82492040), StudyPlanDto(spId=52, userId=1, spTitle=斗鱼开源首秀:基于Go的微服务框架Jupiter, spContext=时事, spTime=2020-06-30 11:40:34, spLink=https://www.oschina.net/question/4487475_2317201?from=20200621), StudyPlanDto(spId=51, userId=1, spTitle=AI学习资源(github), spContext=AI 学习资料包下载链接, spTime=2020-06-30 11:30:53, spLink=https://gitee.com/OSCYuanChuangHui/ai_learning), StudyPlanDto(spId=50, userId=1, spTitle=soket通信原理分析, spContext=了解soket即时通信, spTime=2020-06-30 10:57:44, spLink=http://www.baidu.com), StudyPlanDto(spId=49, userId=1, spTitle=修改组队项目的缓存刷新和添加项目缓存不更新问题, spContext=设置缓存过期时间。修改后端添加数据缓存更新问题, spTime=2020-06-30 10:50:22, spLink=www.baidu.com), StudyPlanDto(spId=48, userId=1, spTitle=分析近十年的行业发展情况, spContext=2020－06－30, spTime=2020-06-30 10:21:51, spLink=http://www.baidu.com), StudyPlanDto(spId=47, userId=1, spTitle=算法：用两个栈实现队列, spContext=两个栈实现队列, spTime=2020-06-30 10:18:39, spLink=https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/), StudyPlanDto(spId=46, userId=1, spTitle=2020-06-30感悟, spContext=找到最前沿的开发技术，并学习和掌握它；
少玩少看，多学习；
忆一晚上没睡所思所想，回到过去最希望做的事，让自己提升；
梦想：在互联网+教育行业发展；, spTime=2020-06-30 10:12:11, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=45, userId=1, spTitle=算法：零钱兑换, spContext=动态规划, spTime=2020-06-30 04:46:08, spLink=https://leetcode-cn.com/problems/coin-change/), StudyPlanDto(spId=44, userId=1, spTitle=redis配置文件, spContext=redis, spTime=2020-06-30 02:43:37, spLink=https://blog.csdn.net/suprezheng/article/details/90679790), StudyPlanDto(spId=43, userId=1, spTitle=redis面试题, spContext=redis, spTime=2020-06-29 03:03:39, spLink=https://blog.csdn.net/ThinkWon/article/details/103522351), StudyPlanDto(spId=42, userId=1, spTitle=算法：数组中的第k个最大元素, spContext=在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。, spTime=2020-06-29 02:30:58, spLink=https://leetcode-cn.com/problems/kth-largest-element-in-an-array/), StudyPlanDto(spId=41, userId=1, spTitle=算法：删除与获取点数, spContext=删除与获取点数, spTime=2020-06-29 00:22:21, spLink=https://leetcode-cn.com/problems/delete-and-earn/), StudyPlanDto(spId=40, userId=1, spTitle=算法：连续的子数组和, spContext=给定一个包含非负数的数组和一目标整数k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为2，且总和为 k 的倍数，即总和为n*k，其中n也是一个整数。, spTime=2020-06-28 20:26:12, spLink=https://leetcode-cn.com/problems/continuous-subarray-sum/), StudyPlanDto(spId=39, userId=1, spTitle=算法： 硬币, spContext=硬币。给定数量不限的硬币，币值为25分、10分、5分和1分，编写代码计算n分有几种表示法。(结果可能会很大，你需要将结果模上1000000007), spTime=2020-06-28 17:42:10, spLink=https://leetcode-cn.com/problems/coin-lcci/), StudyPlanDto(spId=38, userId=1, spTitle=算法：长度最小的子数组, spContext=长度最小的子数组, spTime=2020-06-28 01:36:53, spLink=https://leetcode-cn.com/problems/minimum-size-subarray-sum/), StudyPlanDto(spId=37, userId=1, spTitle=算法：最长不含重复字符的子字符串, spContext=请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。, spTime=2020-06-27 20:14:47, spLink=https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/solution/mian-shi-ti-48-zui-chang-bu-han-zhong-fu-zi-fu-d-9/), StudyPlanDto(spId=36, userId=1, spTitle=算法：缺失的第一个正数, spContext=给你一个未排序的整数数组，请你找出其中没有出现的最小的正整数。, spTime=2020-06-27 08:38:52, spLink=https://leetcode-cn.com/problems/first-missing-positive/), StudyPlanDto(spId=35, userId=1, spTitle=用Angular编写个人在线简历, spContext=在线简历制作, spTime=2020-06-27 05:57:17, spLink=http://www.baidu.com), StudyPlanDto(spId=34, userId=1, spTitle=完善组队系统的注册功能, spContext=完善组队系统的注册功能, spTime=2020-06-27 03:58:39, spLink=http://120.79.191.236/#/passport/register), StudyPlanDto(spId=33, userId=1, spTitle=机器人的运动范围, spContext=地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-26 03:06:26, spLink=https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof), StudyPlanDto(spId=32, userId=1, spTitle=修改组队系统时间不对问题, spContext=serverTimezone=Asia/Shanghai, spTime=2020-06-26 02:51:56, spLink=https://www.cnblogs.com/july-sunny/p/11888270.html), StudyPlanDto(spId=31, userId=1, spTitle=redis面试题, spContext=缓存雪崩、缓存穿透、缓存预热、缓存更新、缓存降级等问题, spTime=2020-06-25 17:38:30, spLink=https://blog.csdn.net/Butterfly_resting/article/details/89668661), StudyPlanDto(spId=30, userId=1, spTitle=算法： 矩阵中的路径, spContext=请设计一个函数，用来判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。例如，在下面的3×4的矩阵中包含一条字符串“bfce”的路径（路径中的字母用加粗标出）。

[["a","b","c","e"],
["s","f","c","s"],
["a","d","e","e"]]

但矩阵中不包含字符串“abfb”的路径，因为字符串的第一个字符b占据了矩阵中的第一行第二个格子之后，路径不能再次进入这个格子。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:18:26, spLink=https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/), StudyPlanDto(spId=29, userId=1, spTitle=算法：礼物的最大价值, spContext=在一个 m*n 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。你可以从棋盘的左上角开始拿格子里的礼物，并每次向右或者向下移动一格、直到到达棋盘的右下角。给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:05:10, spLink=https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/), StudyPlanDto(spId=28, userId=1, spTitle=深圳创酷互动信息技术有限公司, spContext=一、公司名称：深圳创酷互动信息技术有限公司
二、招聘岗位：java工程师
三、岗位职责：
1、负责平台系统业务的服务端开发工作。
2、根据开发规范独立完成编码，测试。按预定目标完成任务，保证代码质量。
3、主动跟进开发过程中的各项事务，例如开发联调、处理Bug、线上部署等。
四、任职要求：
1、本科以上学历，计算机相关专业，1年以上Java服务端开发经验。
2、掌握常用的设计模式，有良好编程习惯。掌握并发、分布式等技术。
3、熟悉Spring全家桶、Mybatis等技术框架。熟练使用Git、Maven、Jenkins等工具。
4、了解RESTful架构，熟悉HTTP等互联网基础知识。
5、熟练MySQL数据库，熟悉Redis，RabbitMQ等中间件。
6、熟练Linux系统常用命令。
7、良好的学习能力、沟通能力和团队协作精神，能独立完成功能模块开发工作。, spTime=2020-06-25 09:01:36, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=74069), StudyPlanDto(spId=27, userId=1, spTitle=广州众盟信息科技有限公司, spContext=Java工程师(5k - 7k), spTime=2020-06-25 08:58:32, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=66368)]),[]>
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getJoinTeamProByUserId
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@b1b8c3f3, teamId=124, teamName=废铁团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=无, teamType=其他, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=无, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=1, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@793b9fbe, proId=86, proName=每天一学, leaderName=曹荣武, proDescribe=每天一学, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@8c951b17, proId=87, proName=悟, leaderName=曹荣武, proDescribe=记录一生中领悟的道理, proDate=2020-06-30, proStartTime=2020-06-30, proEndTime=2020-06-30, proStatus=0, teamId=124, proType=其他, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@def6927, teamId=125, teamName=Java招聘, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=整理Java招聘信息, teamType=技术类, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=Java开发人员, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f8f59573, proId=85, proName=Java, leaderName=曹荣武, proDescribe=Java开发, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=125, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=其他, y=1}, {x=技术类, y=1}]
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=其他, y=1}, {x=技术类, y=1}]
2021-02-22 20:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=其他, y=1}, {x=技术类, y=1}]),[]>
2021-02-22 20:39 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=26, teamId=124, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2020-02-02, decribe=test, phone=18814231208, status=0)]),[]>
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9c0f666e, taskId=88, proId=85, taskCreateTime=2020-05-30, taskStartTime=2020-05-30, taskEndTime=2020-05-30, taskContent=广州皇上皇集团, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=国企；
3k - 5k；广东大学生就业创业平台；, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6fb4e922, taskId=89, proId=86, taskCreateTime=2020-05-29, taskStartTime=null, taskEndTime=2020-05-29, taskContent=WebSocket, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=https://mp.weixin.qq.com/s/jkI8V7TwnYwl02uGi7_x9w, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[])]
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9c0f666e, taskId=88, proId=85, taskCreateTime=2020-05-30, taskStartTime=2020-05-30, taskEndTime=2020-05-30, taskContent=广州皇上皇集团, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=国企；
3k - 5k；广东大学生就业创业平台；, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6fb4e922, taskId=89, proId=86, taskCreateTime=2020-05-29, taskStartTime=null, taskEndTime=2020-05-29, taskContent=WebSocket, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=https://mp.weixin.qq.com/s/jkI8V7TwnYwl02uGi7_x9w, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[])]
2021-02-22 20:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9c0f666e, taskId=88, proId=85, taskCreateTime=2020-05-30, taskStartTime=2020-05-30, taskEndTime=2020-05-30, taskContent=广州皇上皇集团, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=国企；
3k - 5k；广东大学生就业创业平台；, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6fb4e922, taskId=89, proId=86, taskCreateTime=2020-05-29, taskStartTime=null, taskEndTime=2020-05-29, taskContent=WebSocket, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=https://mp.weixin.qq.com/s/jkI8V7TwnYwl02uGi7_x9w, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[])]),[]>
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getLeaderIdByProId
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getLeaderIdByProId
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getLeaderIdByProId
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=true),[]>
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]),[]>
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:39 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]),[]>
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:39 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=19, fileName=1.txt, userId=1, userName=曹荣武, fileLink=D:/upload/1.txt, proId=84, proName=任务, uploadTime=2021-02-19), FilesDto(fileId=20, fileName=微信图片_20200408152754.jpg, userId=1, userName=曹荣武, fileLink=D:/upload/微信图片_20200408152754.jpg, proId=84, proName=任务, uploadTime=2021-02-21)]
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=19, fileName=1.txt, userId=1, userName=曹荣武, fileLink=D:/upload/1.txt, proId=84, proName=任务, uploadTime=2021-02-19), FilesDto(fileId=20, fileName=微信图片_20200408152754.jpg, userId=1, userName=曹荣武, fileLink=D:/upload/微信图片_20200408152754.jpg, proId=84, proName=任务, uploadTime=2021-02-21)]
2021-02-22 20:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=19, fileName=1.txt, userId=1, userName=曹荣武, fileLink=D:/upload/1.txt, proId=84, proName=任务, uploadTime=2021-02-19), FilesDto(fileId=20, fileName=微信图片_20200408152754.jpg, userId=1, userName=曹荣武, fileLink=D:/upload/微信图片_20200408152754.jpg, proId=84, proName=任务, uploadTime=2021-02-21)]),[]>
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:download
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:downloadFile
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : success
2021-02-22 20:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getLeaderIdByProId
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getLeaderIdByProId
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getLeaderIdByProId
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=true),[]>
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]),[]>
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-7] [ERROR]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "null"] with root cause
java.lang.NumberFormatException: For input string: "null"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[?:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:589) ~[?:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:631) ~[?:1.8.0_121]
	at crw.bishe.team.service.FilesServiceImpl.getFilesByProId(FilesServiceImpl.java:124) ~[classes/:?]
	at crw.bishe.team.service.FilesServiceImpl$$FastClassBySpringCGLIB$$d894b6fd.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.service.FilesServiceImpl$$EnhancerBySpringCGLIB$$bbd9955a.getFilesByProId(<generated>) ~[classes/:?]
	at crw.bishe.team.controller.project.FilesController.getFilesByProId(FilesController.java:46) ~[classes/:?]
	at crw.bishe.team.controller.project.FilesController$$FastClassBySpringCGLIB$$108ba9f2.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.controller.project.FilesController$$EnhancerBySpringCGLIB$$d87f6f59.getFilesByProId(<generated>) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.0.12.jar:1.0.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2021-02-22 20:40 [http-nio-8888-exec-5] [ERROR]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "null"] with root cause
java.lang.NumberFormatException: For input string: "null"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[?:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:589) ~[?:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:631) ~[?:1.8.0_121]
	at crw.bishe.team.service.ProjectServiceImpl.getProjectByProId(ProjectServiceImpl.java:162) ~[classes/:?]
	at crw.bishe.team.service.ProjectServiceImpl$$FastClassBySpringCGLIB$$9c65e95b.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.service.ProjectServiceImpl$$EnhancerBySpringCGLIB$$5b89734.getProjectByProId(<generated>) ~[classes/:?]
	at crw.bishe.team.controller.project.ProjectController.getProjectByProId(ProjectController.java:121) ~[classes/:?]
	at crw.bishe.team.controller.project.ProjectController$$FastClassBySpringCGLIB$$12e3454.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.controller.project.ProjectController$$EnhancerBySpringCGLIB$$78d79bbf.getProjectByProId(<generated>) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.0.12.jar:1.0.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2021-02-22 20:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : --->目标方法名为:generate
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.service.DictionaryServiceImplgetTeamType
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=26, teamId=124, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2020-02-02, decribe=test, phone=18814231208, status=0)]),[]>
2021-02-22 20:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=26, teamId=124, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2020-02-02, decribe=test, phone=18814231208, status=0)]),[]>
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@b1b8c3f3, teamId=124, teamName=废铁团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=无, teamType=其他, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=无, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=1, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@793b9fbe, proId=86, proName=每天一学, leaderName=曹荣武, proDescribe=每天一学, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@8c951b17, proId=87, proName=悟, leaderName=曹荣武, proDescribe=记录一生中领悟的道理, proDate=2020-06-30, proStartTime=2020-06-30, proEndTime=2020-06-30, proStatus=0, teamId=124, proType=其他, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@def6927, teamId=125, teamName=Java招聘, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=整理Java招聘信息, teamType=技术类, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=Java开发人员, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f8f59573, proId=85, proName=Java, leaderName=曹荣武, proDescribe=Java开发, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=125, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : StudyPlanController--->目标方法名为:getStudyPlans
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : StudyPlanServiceImpl--->目标方法名为:getStudyPlans
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : --->目标方法名为:generate
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.service.DictionaryServiceImplgetTeamType
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : StudyPlanMapper--->目标方法名为:getStudyPlans
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [StudyPlanDto(spId=27, userId=1, spTitle=广州众盟信息科技有限公司, spContext=Java工程师(5k - 7k), spTime=2020-06-25 08:58:32, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=66368), StudyPlanDto(spId=28, userId=1, spTitle=深圳创酷互动信息技术有限公司, spContext=一、公司名称：深圳创酷互动信息技术有限公司
二、招聘岗位：java工程师
三、岗位职责：
1、负责平台系统业务的服务端开发工作。
2、根据开发规范独立完成编码，测试。按预定目标完成任务，保证代码质量。
3、主动跟进开发过程中的各项事务，例如开发联调、处理Bug、线上部署等。
四、任职要求：
1、本科以上学历，计算机相关专业，1年以上Java服务端开发经验。
2、掌握常用的设计模式，有良好编程习惯。掌握并发、分布式等技术。
3、熟悉Spring全家桶、Mybatis等技术框架。熟练使用Git、Maven、Jenkins等工具。
4、了解RESTful架构，熟悉HTTP等互联网基础知识。
5、熟练MySQL数据库，熟悉Redis，RabbitMQ等中间件。
6、熟练Linux系统常用命令。
7、良好的学习能力、沟通能力和团队协作精神，能独立完成功能模块开发工作。, spTime=2020-06-25 09:01:36, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=74069), StudyPlanDto(spId=29, userId=1, spTitle=算法：礼物的最大价值, spContext=在一个 m*n 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。你可以从棋盘的左上角开始拿格子里的礼物，并每次向右或者向下移动一格、直到到达棋盘的右下角。给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:05:10, spLink=https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/), StudyPlanDto(spId=30, userId=1, spTitle=算法： 矩阵中的路径, spContext=请设计一个函数，用来判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。例如，在下面的3×4的矩阵中包含一条字符串“bfce”的路径（路径中的字母用加粗标出）。

[["a","b","c","e"],
["s","f","c","s"],
["a","d","e","e"]]

但矩阵中不包含字符串“abfb”的路径，因为字符串的第一个字符b占据了矩阵中的第一行第二个格子之后，路径不能再次进入这个格子。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:18:26, spLink=https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/), StudyPlanDto(spId=31, userId=1, spTitle=redis面试题, spContext=缓存雪崩、缓存穿透、缓存预热、缓存更新、缓存降级等问题, spTime=2020-06-25 17:38:30, spLink=https://blog.csdn.net/Butterfly_resting/article/details/89668661), StudyPlanDto(spId=32, userId=1, spTitle=修改组队系统时间不对问题, spContext=serverTimezone=Asia/Shanghai, spTime=2020-06-26 02:51:56, spLink=https://www.cnblogs.com/july-sunny/p/11888270.html), StudyPlanDto(spId=33, userId=1, spTitle=机器人的运动范围, spContext=地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-26 03:06:26, spLink=https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof), StudyPlanDto(spId=34, userId=1, spTitle=完善组队系统的注册功能, spContext=完善组队系统的注册功能, spTime=2020-06-27 03:58:39, spLink=http://120.79.191.236/#/passport/register), StudyPlanDto(spId=35, userId=1, spTitle=用Angular编写个人在线简历, spContext=在线简历制作, spTime=2020-06-27 05:57:17, spLink=http://www.baidu.com), StudyPlanDto(spId=36, userId=1, spTitle=算法：缺失的第一个正数, spContext=给你一个未排序的整数数组，请你找出其中没有出现的最小的正整数。, spTime=2020-06-27 08:38:52, spLink=https://leetcode-cn.com/problems/first-missing-positive/), StudyPlanDto(spId=37, userId=1, spTitle=算法：最长不含重复字符的子字符串, spContext=请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。, spTime=2020-06-27 20:14:47, spLink=https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/solution/mian-shi-ti-48-zui-chang-bu-han-zhong-fu-zi-fu-d-9/), StudyPlanDto(spId=38, userId=1, spTitle=算法：长度最小的子数组, spContext=长度最小的子数组, spTime=2020-06-28 01:36:53, spLink=https://leetcode-cn.com/problems/minimum-size-subarray-sum/), StudyPlanDto(spId=39, userId=1, spTitle=算法： 硬币, spContext=硬币。给定数量不限的硬币，币值为25分、10分、5分和1分，编写代码计算n分有几种表示法。(结果可能会很大，你需要将结果模上1000000007), spTime=2020-06-28 17:42:10, spLink=https://leetcode-cn.com/problems/coin-lcci/), StudyPlanDto(spId=40, userId=1, spTitle=算法：连续的子数组和, spContext=给定一个包含非负数的数组和一目标整数k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为2，且总和为 k 的倍数，即总和为n*k，其中n也是一个整数。, spTime=2020-06-28 20:26:12, spLink=https://leetcode-cn.com/problems/continuous-subarray-sum/), StudyPlanDto(spId=41, userId=1, spTitle=算法：删除与获取点数, spContext=删除与获取点数, spTime=2020-06-29 00:22:21, spLink=https://leetcode-cn.com/problems/delete-and-earn/), StudyPlanDto(spId=42, userId=1, spTitle=算法：数组中的第k个最大元素, spContext=在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。, spTime=2020-06-29 02:30:58, spLink=https://leetcode-cn.com/problems/kth-largest-element-in-an-array/), StudyPlanDto(spId=43, userId=1, spTitle=redis面试题, spContext=redis, spTime=2020-06-29 03:03:39, spLink=https://blog.csdn.net/ThinkWon/article/details/103522351), StudyPlanDto(spId=44, userId=1, spTitle=redis配置文件, spContext=redis, spTime=2020-06-30 02:43:37, spLink=https://blog.csdn.net/suprezheng/article/details/90679790), StudyPlanDto(spId=45, userId=1, spTitle=算法：零钱兑换, spContext=动态规划, spTime=2020-06-30 04:46:08, spLink=https://leetcode-cn.com/problems/coin-change/), StudyPlanDto(spId=46, userId=1, spTitle=2020-06-30感悟, spContext=找到最前沿的开发技术，并学习和掌握它；
少玩少看，多学习；
忆一晚上没睡所思所想，回到过去最希望做的事，让自己提升；
梦想：在互联网+教育行业发展；, spTime=2020-06-30 10:12:11, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=47, userId=1, spTitle=算法：用两个栈实现队列, spContext=两个栈实现队列, spTime=2020-06-30 10:18:39, spLink=https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/), StudyPlanDto(spId=48, userId=1, spTitle=分析近十年的行业发展情况, spContext=2020－06－30, spTime=2020-06-30 10:21:51, spLink=http://www.baidu.com), StudyPlanDto(spId=49, userId=1, spTitle=修改组队项目的缓存刷新和添加项目缓存不更新问题, spContext=设置缓存过期时间。修改后端添加数据缓存更新问题, spTime=2020-06-30 10:50:22, spLink=www.baidu.com), StudyPlanDto(spId=50, userId=1, spTitle=soket通信原理分析, spContext=了解soket即时通信, spTime=2020-06-30 10:57:44, spLink=http://www.baidu.com), StudyPlanDto(spId=51, userId=1, spTitle=AI学习资源(github), spContext=AI 学习资料包下载链接, spTime=2020-06-30 11:30:53, spLink=https://gitee.com/OSCYuanChuangHui/ai_learning), StudyPlanDto(spId=52, userId=1, spTitle=斗鱼开源首秀:基于Go的微服务框架Jupiter, spContext=时事, spTime=2020-06-30 11:40:34, spLink=https://www.oschina.net/question/4487475_2317201?from=20200621), StudyPlanDto(spId=53, userId=1, spTitle=springboot+websocket实现在线聊天, spContext=websocket, spTime=2020-07-01 02:26:13, spLink=https://blog.csdn.net/qq_41603102/article/details/82492040), StudyPlanDto(spId=54, userId=1, spTitle=算法：最长重复子数组, spContext=给两个数组A和B ,返回两个数组的公共最长子数组的长度；, spTime=2020-07-01 02:58:11, spLink=https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/), StudyPlanDto(spId=55, userId=1, spTitle=redis发布/订阅模式, spContext=redis, spTime=2020-07-01 04:57:00, spLink=https://www.cnblogs.com/qlqwjy/p/9763754.html), StudyPlanDto(spId=56, userId=1, spTitle=ActiveMQ消息中间件, spContext=ActiveMQ, spTime=2020-07-01 05:31:27, spLink=http://activemq.apache.org/components/classic/documentation), StudyPlanDto(spId=57, userId=1, spTitle=zookeeper-图灵学院, spContext=zookeeper, spTime=2020-07-02 01:36:37, spLink=https://ke.qq.com/course/list/%E5%9B%BE%E7%81%B5), StudyPlanDto(spId=58, userId=1, spTitle=redis集群详解, spContext=redis, spTime=2020-07-02 01:42:28, spLink=https://blog.csdn.net/miss1181248983/article/details/90056960), StudyPlanDto(spId=59, userId=1, spTitle=算法：将有序数组转换为二叉搜索树, spContext=算法, spTime=2020-07-03 03:20:41, spLink=https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/), StudyPlanDto(spId=60, userId=1, spTitle=算法：最长有效括号, spContext=算法, spTime=2020-07-04 07:05:00, spLink=https://leetcode-cn.com/problems/longest-valid-parentheses/), StudyPlanDto(spId=61, userId=1, spTitle=顺时针打印矩阵, spContext=算法, spTime=2020-07-04 23:24:10, spLink=https://leetcode-cn.com/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/), StudyPlanDto(spId=62, userId=1, spTitle=算法：链表中倒数第k个节点, spContext=算法, spTime=2020-07-05 02:03:17, spLink=https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/), StudyPlanDto(spId=63, userId=1, spTitle=算法：不同的二叉搜索树, spContext=算法, spTime=2020-07-05 02:04:41, spLink=https://leetcode-cn.com/problems/unique-binary-search-trees/), StudyPlanDto(spId=64, userId=1, spTitle=算法：连续子数组的最大和, spContext=算法, spTime=2020-07-05 11:37:13, spLink=https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/), StudyPlanDto(spId=65, userId=1, spTitle=IO流，socket，web socket, spContext=IO流, spTime=2020-07-05 22:04:00, spLink=https://blog.csdn.net/qq_37875585/article/details/89385688), StudyPlanDto(spId=66, userId=1, spTitle=socket原理, spContext=socket, spTime=2020-07-06 02:59:00, spLink=https://www.cnblogs.com/wn1m/p/10983172.html), StudyPlanDto(spId=67, userId=1, spTitle=java利用Socket实现客户端与客户端通信, spContext=socket, spTime=2020-07-06 05:52:15, spLink=https://www.jianshu.com/p/211720900e14), StudyPlanDto(spId=68, userId=1, spTitle=解决websocket在nginx上的跨越问题, spContext=websocket部署, spTime=2020-07-07 03:31:08, spLink=http://www.baidu.com), StudyPlanDto(spId=69, userId=1, spTitle=复习：JVM内存模型, spContext=JVM, spTime=2020-07-09 21:31:45, spLink=https://www.jianshu.com/p/76959115d486), StudyPlanDto(spId=70, userId=1, spTitle=session在分布式中如何实现共享, spContext=分布式, spTime=2020-07-10 16:39:35, spLink=baidu.com), StudyPlanDto(spId=71, userId=1, spTitle=解决websocket在项目中的聊天通信问题, spContext=websocket, spTime=2020-07-14 21:37:43, spLink=http://www.baidu.com), StudyPlanDto(spId=72, userId=1, spTitle=算法：三角形最小路径和, spContext=leetcode, spTime=2020-07-14 21:41:03, spLink=https://leetcode-cn.com/problems/triangle/), StudyPlanDto(spId=73, userId=1, spTitle=深入了解angular缓存, spContext=angular, spTime=2020-07-15 10:56:45, spLink=http://baidu.com), StudyPlanDto(spId=74, userId=1, spTitle=深入了解CAP, spContext=cap, spTime=2020-07-16 16:46:34, spLink=baidu.com), StudyPlanDto(spId=75, userId=1, spTitle=算法：两数之和, spContext=算法, spTime=2020-07-20 13:15:13, spLink=https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/submissions/), StudyPlanDto(spId=76, userId=1, spTitle=dom对象的api, spContext=dom, spTime=2020-07-21 00:28:43, spLink=baidu.com), StudyPlanDto(spId=77, userId=1, spTitle=阿里巴巴代码编程规范, spContext=编程, spTime=2020-07-21 19:48:10, spLink=baidu.com), StudyPlanDto(spId=78, userId=1, spTitle=BUG： mybatis + oracle 逆向功能报错：驱动的版本有问题, spContext=bug, spTime=2020-07-21 20:27:07, spLink=baidu.com), StudyPlanDto(spId=79, userId=1, spTitle=完成前端学生表的增加，修改，删除功能, spContext=ly, spTime=2020-07-21 20:27:46, spLink=baidu.com), StudyPlanDto(spId=80, userId=1, spTitle=用react做每天任务打卡功能, spContext=react, spTime=2020-07-24 18:55:02, spLink=baidu.com), StudyPlanDto(spId=81, userId=1, spTitle=表单数据校验，Docket, spContext=react，docket, spTime=2020-07-26 05:31:10, spLink=https://ant.design/components/form-cn/#API), StudyPlanDto(spId=82, userId=1, spTitle=Docker 安装，基本命令, spContext=Docker, spTime=2020-08-03 23:50:22, spLink=http://www.baidu.com), StudyPlanDto(spId=83, userId=1, spTitle=Docker学习p14~p25, spContext=Docker, spTime=2020-08-04 20:29:36, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=14), StudyPlanDto(spId=84, userId=1, spTitle=Docker p14 ~ 18, spContext=docker, spTime=2020-08-04 23:58:30, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=18), StudyPlanDto(spId=85, userId=1, spTitle=完成每天任务的开发, spContext=组队系统, spTime=2020-08-07 00:24:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=86, userId=1, spTitle=组队系统修改密码功能实现, spContext=组队系统, spTime=2020-08-07 22:38:41, spLink=http://www.baidu.com), StudyPlanDto(spId=87, userId=1, spTitle=springboot基础环境搭建（学习专用）, spContext=springboot, spTime=2020-08-10 17:08:49, spLink=http://www.baidu.com), StudyPlanDto(spId=88, userId=1, spTitle=完成组队系统每天任务总结功能, spContext=组队系统, spTime=2020-08-11 00:26:16, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=89, userId=1, spTitle=Docker学习p18~p24, spContext=Docker, spTime=2020-08-15 01:20:27, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=24), StudyPlanDto(spId=90, userId=1, spTitle=Docker学习p31~p34, spContext=Docker, spTime=2020-08-15 02:54:09, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=34), StudyPlanDto(spId=91, userId=1, spTitle=springcloud环境搭建, spContext=springcloud, spTime=2020-08-15 03:09:12, spLink=https://note.youdao.com/web/#/file/WEB3c5c7b9601a754586ebce711dfedbf5a/note/WEB3a6ae7f7653499f7c3fe0c70eed036af/), StudyPlanDto(spId=92, userId=1, spTitle=Dockerfile p26, spContext=Docker, spTime=2020-08-16 13:11:06, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=26), StudyPlanDto(spId=93, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-19 01:25:35, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=94, userId=1, spTitle=中大系统个人中心查询任务的sql分析, spContext=sql, spTime=2020-08-19 17:35:37, spLink=http://localhost:8070/#/personalUser), StudyPlanDto(spId=95, userId=1, spTitle=思考如何提高工作效率, spContext=每天任务, spTime=2020-08-20 01:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=96, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:01, spLink=http://www.baidu.com), StudyPlanDto(spId=97, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:08, spLink=http://www.baidu.com), StudyPlanDto(spId=98, userId=1, spTitle=权限管理平台数据库设计, spContext=权限管理平台, spTime=2020-08-20 02:25:43, spLink=http://www.baidu.com), StudyPlanDto(spId=99, userId=1, spTitle=完成每天学习时间点功能设计, spContext=组队系统, spTime=2020-08-20 02:31:24, spLink=http://www.baidu.com), StudyPlanDto(spId=100, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-20 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=101, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-20 02:32:05, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=102, userId=1, spTitle=react 类和方法两种方式建立组件的使用, spContext=react, spTime=2020-08-20 02:48:32, spLink=http://www.baidu.com), StudyPlanDto(spId=103, userId=1, spTitle=springboot 注册三大组件servlet,filter,litener, spContext=springboot, spTime=2020-08-20 19:21:31, spLink=http://www.baidu.com), StudyPlanDto(spId=104, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-21 01:11:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=105, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-21 01:11:47, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=106, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-21 01:11:49, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=107, userId=1, spTitle=每天总结（组队系统功能）, spContext=每天任务, spTime=2020-08-21 01:11:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=108, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-22 00:20:28, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=109, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:03, spLink=http://www.baidu.com), StudyPlanDto(spId=110, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:13, spLink=http://www.baidu.com), StudyPlanDto(spId=111, userId=1, spTitle=war包和jar包的区别, spContext=springboot, spTime=2020-08-22 00:55:59, spLink=http://www.baidu.com), StudyPlanDto(spId=112, userId=1, spTitle=时间调度器的cron表达式, spContext=quartz, spTime=2020-08-22 14:26:46, spLink=https://www.cnblogs.com/yanghj010/p/10875151.html), StudyPlanDto(spId=113, userId=1, spTitle=websocket通信, spContext=websocket, spTime=2020-08-22 16:43:58, spLink=http://www.baidu.com), StudyPlanDto(spId=114, userId=1, spTitle=深入对session底层的理解, spContext=session, spTime=2020-08-22 17:11:29, spLink=http://www.baidu.com), StudyPlanDto(spId=115, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-23 17:14:27, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=116, userId=1, spTitle=spring security学习, spContext=spring security, spTime=2020-08-23 17:16:19, spLink=http://www.baidu.com), StudyPlanDto(spId=117, userId=1, spTitle=每天任务打卡时间BUG, spContext=组队系统, spTime=2020-08-23 17:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=118, userId=1, spTitle=portainer学习和配置, spContext=portainer, spTime=2020-08-24 16:20:02, spLink=https://www.cnblogs.com/ExMan/p/11657069.html), StudyPlanDto(spId=119, userId=1, spTitle=OpenFeign的学习和配置整合springcloud, spContext=OpenFeign, spTime=2020-08-25 00:52:54, spLink=https://www.cnblogs.com/wf614/p/12919798.html), StudyPlanDto(spId=120, userId=1, spTitle=Consul 服务注册与发现的学习和配置整合springcloud, spContext=Consul, spTime=2020-08-25 00:53:27, spLink=http://www.baidu.com), StudyPlanDto(spId=121, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-25 00:52:21, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=122, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-25 00:52:41, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=123, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-25 00:53:13, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=124, userId=1, spTitle=Hystrix熔断的学习和配置整合springcloud, spContext=Hystrix, spTime=2020-08-25 00:56:13, spLink=http://www.baidu.com), StudyPlanDto(spId=125, userId=1, spTitle=consul整合springcloud, spContext=consul, spTime=2020-08-25 22:48:47, spLink=https://www.cnblogs.com/wf614/p/12919799.html#_12), StudyPlanDto(spId=126, userId=1, spTitle=Hystrix, spContext=Hystrix, spTime=2020-08-25 22:52:29, spLink=https://blog.csdn.net/loushuiyifan/article/details/82702522), StudyPlanDto(spId=127, userId=1, spTitle=如何拦截路由器请求获取用户信息, spContext=路由器, spTime=2020-08-26 10:26:02, spLink=http://www.baidu.com), StudyPlanDto(spId=128, userId=1, spTitle=git代码回滚操作学习, spContext=git, spTime=2020-08-26 10:28:22, spLink=http://www.baidu.com), StudyPlanDto(spId=129, userId=1, spTitle=springcloud整合Zuul2、Gateway服务网关, spContext=zuul2,gateway, spTime=2020-08-27 02:29:45, spLink=https://www.cnblogs.com/cloudxlr/p/11768468.html), StudyPlanDto(spId=130, userId=1, spTitle=Hystrix熔断整合springcloud, spContext=每天任务, spTime=2020-08-27 02:31:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=131, userId=1, spTitle=一表通项目功能实现流程, spContext=每天任务, spTime=2020-08-27 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=132, userId=1, spTitle=springcloud整合配置中心config, spContext=config, spTime=2020-08-27 22:56:25, spLink=http://www.baidu.com), StudyPlanDto(spId=133, userId=1, spTitle=中大的一表通国际处的功能模块理解和BUG, spContext=每天任务, spTime=2020-08-28 20:57:46, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=134, userId=1, spTitle=rabbitMQ消息队列学习, spContext=rabbitMQ, spTime=2020-08-28 21:00:22, spLink=https://www.bilibili.com/video/BV1dE411K7MG?from=search&seid=3960229584189343275), StudyPlanDto(spId=135, userId=1, spTitle=集群, spContext=集群, spTime=2020-08-30 23:31:03, spLink=http://www.baidu.com), StudyPlanDto(spId=136, userId=1, spTitle=elasticsearch学习, spContext=elasticsearch, spTime=2020-08-31 00:03:31, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?from=search&seid=12571544612246652602), StudyPlanDto(spId=137, userId=1, spTitle=Hadoop大数据, spContext=hadoop, spTime=2020-08-31 00:18:22, spLink=https://www.bilibili.com/video/BV1cW411r7c5?from=search&seid=14522186892049429676), StudyPlanDto(spId=138, userId=1, spTitle=JVM调优, spContext=JVM, spTime=2020-08-31 00:49:24, spLink=https://www.baidu.com), StudyPlanDto(spId=139, userId=1, spTitle=Shiro安全框架, spContext=Shiro, spTime=2020-08-31 01:19:12, spLink=http://www.baidu.com), StudyPlanDto(spId=140, userId=1, spTitle=MongoDB, spContext=MongoDB, spTime=2020-08-31 01:22:03, spLink=http://www.baidu.com), StudyPlanDto(spId=141, userId=1, spTitle=用ElasticSreach写组队系统的搜索功能实现, spContext=ElasticSreach, spTime=2020-08-31 22:48:11, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?p=20), StudyPlanDto(spId=142, userId=1, spTitle=Hadoop 15-21, spContext=Hadoop, spTime=2020-09-02 00:27:09, spLink=https://www.bilibili.com/video/BV1cW411r7c5?p=15), StudyPlanDto(spId=143, userId=1, spTitle=狂神说elasticsearch, spContext=elasticsearch, spTime=2020-09-03 01:48:14, spLink=https://blog.csdn.net/admin741admin/article/details/107816451), StudyPlanDto(spId=144, userId=1, spTitle=mongodb连接和整合spring boot, spContext=mongodb, spTime=2020-09-03 23:08:04, spLink=http://www.baidu.com), StudyPlanDto(spId=145, userId=1, spTitle=研究源码, spContext=源码, spTime=2020-09-03 23:53:46, spLink=http://www.baidu.com), StudyPlanDto(spId=146, userId=1, spTitle=redis集群, spContext=redis, spTime=2020-09-06 23:25:54, spLink=https://www.bilibili.com/video/BV1FZ4y1u7ny?p=24), StudyPlanDto(spId=147, userId=1, spTitle=HDFS分布式文件系统, spContext=HDFS, spTime=2020-09-07 09:06:30, spLink=http://www.baidu.com), StudyPlanDto(spId=148, userId=1, spTitle=Nginx学习, spContext=nginx, spTime=2020-09-07 09:06:46, spLink=http://www.baidu.com), StudyPlanDto(spId=149, userId=1, spTitle=nginx集群高可用配置, spContext=nginx, spTime=2020-09-08 02:01:33, spLink=https://www.bilibili.com/video/BV1zJ411w7SV?p=15), StudyPlanDto(spId=150, userId=1, spTitle=Java视频, spContext=每天任务, spTime=2020-09-08 02:00:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=151, userId=1, spTitle=sql语句熟悉, spContext=sql, spTime=2020-09-09 02:17:29, spLink=http://www.baidu.com), StudyPlanDto(spId=152, userId=1, spTitle=K8S学习, spContext=K8S, spTime=2020-09-12 02:23:50, spLink=http://www.baidu.com)]
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [StudyPlanDto(spId=152, userId=1, spTitle=K8S学习, spContext=K8S, spTime=2020-09-12 02:23:50, spLink=http://www.baidu.com), StudyPlanDto(spId=151, userId=1, spTitle=sql语句熟悉, spContext=sql, spTime=2020-09-09 02:17:29, spLink=http://www.baidu.com), StudyPlanDto(spId=149, userId=1, spTitle=nginx集群高可用配置, spContext=nginx, spTime=2020-09-08 02:01:33, spLink=https://www.bilibili.com/video/BV1zJ411w7SV?p=15), StudyPlanDto(spId=150, userId=1, spTitle=Java视频, spContext=每天任务, spTime=2020-09-08 02:00:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=148, userId=1, spTitle=Nginx学习, spContext=nginx, spTime=2020-09-07 09:06:46, spLink=http://www.baidu.com), StudyPlanDto(spId=147, userId=1, spTitle=HDFS分布式文件系统, spContext=HDFS, spTime=2020-09-07 09:06:30, spLink=http://www.baidu.com), StudyPlanDto(spId=146, userId=1, spTitle=redis集群, spContext=redis, spTime=2020-09-06 23:25:54, spLink=https://www.bilibili.com/video/BV1FZ4y1u7ny?p=24), StudyPlanDto(spId=145, userId=1, spTitle=研究源码, spContext=源码, spTime=2020-09-03 23:53:46, spLink=http://www.baidu.com), StudyPlanDto(spId=144, userId=1, spTitle=mongodb连接和整合spring boot, spContext=mongodb, spTime=2020-09-03 23:08:04, spLink=http://www.baidu.com), StudyPlanDto(spId=143, userId=1, spTitle=狂神说elasticsearch, spContext=elasticsearch, spTime=2020-09-03 01:48:14, spLink=https://blog.csdn.net/admin741admin/article/details/107816451), StudyPlanDto(spId=142, userId=1, spTitle=Hadoop 15-21, spContext=Hadoop, spTime=2020-09-02 00:27:09, spLink=https://www.bilibili.com/video/BV1cW411r7c5?p=15), StudyPlanDto(spId=141, userId=1, spTitle=用ElasticSreach写组队系统的搜索功能实现, spContext=ElasticSreach, spTime=2020-08-31 22:48:11, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?p=20), StudyPlanDto(spId=140, userId=1, spTitle=MongoDB, spContext=MongoDB, spTime=2020-08-31 01:22:03, spLink=http://www.baidu.com), StudyPlanDto(spId=139, userId=1, spTitle=Shiro安全框架, spContext=Shiro, spTime=2020-08-31 01:19:12, spLink=http://www.baidu.com), StudyPlanDto(spId=138, userId=1, spTitle=JVM调优, spContext=JVM, spTime=2020-08-31 00:49:24, spLink=https://www.baidu.com), StudyPlanDto(spId=137, userId=1, spTitle=Hadoop大数据, spContext=hadoop, spTime=2020-08-31 00:18:22, spLink=https://www.bilibili.com/video/BV1cW411r7c5?from=search&seid=14522186892049429676), StudyPlanDto(spId=136, userId=1, spTitle=elasticsearch学习, spContext=elasticsearch, spTime=2020-08-31 00:03:31, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?from=search&seid=12571544612246652602), StudyPlanDto(spId=135, userId=1, spTitle=集群, spContext=集群, spTime=2020-08-30 23:31:03, spLink=http://www.baidu.com), StudyPlanDto(spId=134, userId=1, spTitle=rabbitMQ消息队列学习, spContext=rabbitMQ, spTime=2020-08-28 21:00:22, spLink=https://www.bilibili.com/video/BV1dE411K7MG?from=search&seid=3960229584189343275), StudyPlanDto(spId=133, userId=1, spTitle=中大的一表通国际处的功能模块理解和BUG, spContext=每天任务, spTime=2020-08-28 20:57:46, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=132, userId=1, spTitle=springcloud整合配置中心config, spContext=config, spTime=2020-08-27 22:56:25, spLink=http://www.baidu.com), StudyPlanDto(spId=131, userId=1, spTitle=一表通项目功能实现流程, spContext=每天任务, spTime=2020-08-27 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=130, userId=1, spTitle=Hystrix熔断整合springcloud, spContext=每天任务, spTime=2020-08-27 02:31:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=129, userId=1, spTitle=springcloud整合Zuul2、Gateway服务网关, spContext=zuul2,gateway, spTime=2020-08-27 02:29:45, spLink=https://www.cnblogs.com/cloudxlr/p/11768468.html), StudyPlanDto(spId=128, userId=1, spTitle=git代码回滚操作学习, spContext=git, spTime=2020-08-26 10:28:22, spLink=http://www.baidu.com), StudyPlanDto(spId=127, userId=1, spTitle=如何拦截路由器请求获取用户信息, spContext=路由器, spTime=2020-08-26 10:26:02, spLink=http://www.baidu.com), StudyPlanDto(spId=126, userId=1, spTitle=Hystrix, spContext=Hystrix, spTime=2020-08-25 22:52:29, spLink=https://blog.csdn.net/loushuiyifan/article/details/82702522), StudyPlanDto(spId=125, userId=1, spTitle=consul整合springcloud, spContext=consul, spTime=2020-08-25 22:48:47, spLink=https://www.cnblogs.com/wf614/p/12919799.html#_12), StudyPlanDto(spId=124, userId=1, spTitle=Hystrix熔断的学习和配置整合springcloud, spContext=Hystrix, spTime=2020-08-25 00:56:13, spLink=http://www.baidu.com), StudyPlanDto(spId=120, userId=1, spTitle=Consul 服务注册与发现的学习和配置整合springcloud, spContext=Consul, spTime=2020-08-25 00:53:27, spLink=http://www.baidu.com), StudyPlanDto(spId=123, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-25 00:53:13, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=119, userId=1, spTitle=OpenFeign的学习和配置整合springcloud, spContext=OpenFeign, spTime=2020-08-25 00:52:54, spLink=https://www.cnblogs.com/wf614/p/12919798.html), StudyPlanDto(spId=122, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-25 00:52:41, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=121, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-25 00:52:21, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=118, userId=1, spTitle=portainer学习和配置, spContext=portainer, spTime=2020-08-24 16:20:02, spLink=https://www.cnblogs.com/ExMan/p/11657069.html), StudyPlanDto(spId=117, userId=1, spTitle=每天任务打卡时间BUG, spContext=组队系统, spTime=2020-08-23 17:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=116, userId=1, spTitle=spring security学习, spContext=spring security, spTime=2020-08-23 17:16:19, spLink=http://www.baidu.com), StudyPlanDto(spId=115, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-23 17:14:27, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=114, userId=1, spTitle=深入对session底层的理解, spContext=session, spTime=2020-08-22 17:11:29, spLink=http://www.baidu.com), StudyPlanDto(spId=113, userId=1, spTitle=websocket通信, spContext=websocket, spTime=2020-08-22 16:43:58, spLink=http://www.baidu.com), StudyPlanDto(spId=112, userId=1, spTitle=时间调度器的cron表达式, spContext=quartz, spTime=2020-08-22 14:26:46, spLink=https://www.cnblogs.com/yanghj010/p/10875151.html), StudyPlanDto(spId=111, userId=1, spTitle=war包和jar包的区别, spContext=springboot, spTime=2020-08-22 00:55:59, spLink=http://www.baidu.com), StudyPlanDto(spId=110, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:13, spLink=http://www.baidu.com), StudyPlanDto(spId=109, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:03, spLink=http://www.baidu.com), StudyPlanDto(spId=108, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-22 00:20:28, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=107, userId=1, spTitle=每天总结（组队系统功能）, spContext=每天任务, spTime=2020-08-21 01:11:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=106, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-21 01:11:49, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=105, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-21 01:11:47, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=104, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-21 01:11:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=103, userId=1, spTitle=springboot 注册三大组件servlet,filter,litener, spContext=springboot, spTime=2020-08-20 19:21:31, spLink=http://www.baidu.com), StudyPlanDto(spId=102, userId=1, spTitle=react 类和方法两种方式建立组件的使用, spContext=react, spTime=2020-08-20 02:48:32, spLink=http://www.baidu.com), StudyPlanDto(spId=101, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-20 02:32:05, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=100, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-20 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=99, userId=1, spTitle=完成每天学习时间点功能设计, spContext=组队系统, spTime=2020-08-20 02:31:24, spLink=http://www.baidu.com), StudyPlanDto(spId=98, userId=1, spTitle=权限管理平台数据库设计, spContext=权限管理平台, spTime=2020-08-20 02:25:43, spLink=http://www.baidu.com), StudyPlanDto(spId=97, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:08, spLink=http://www.baidu.com), StudyPlanDto(spId=96, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:01, spLink=http://www.baidu.com), StudyPlanDto(spId=95, userId=1, spTitle=思考如何提高工作效率, spContext=每天任务, spTime=2020-08-20 01:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=94, userId=1, spTitle=中大系统个人中心查询任务的sql分析, spContext=sql, spTime=2020-08-19 17:35:37, spLink=http://localhost:8070/#/personalUser), StudyPlanDto(spId=93, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-19 01:25:35, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=92, userId=1, spTitle=Dockerfile p26, spContext=Docker, spTime=2020-08-16 13:11:06, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=26), StudyPlanDto(spId=91, userId=1, spTitle=springcloud环境搭建, spContext=springcloud, spTime=2020-08-15 03:09:12, spLink=https://note.youdao.com/web/#/file/WEB3c5c7b9601a754586ebce711dfedbf5a/note/WEB3a6ae7f7653499f7c3fe0c70eed036af/), StudyPlanDto(spId=90, userId=1, spTitle=Docker学习p31~p34, spContext=Docker, spTime=2020-08-15 02:54:09, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=34), StudyPlanDto(spId=89, userId=1, spTitle=Docker学习p18~p24, spContext=Docker, spTime=2020-08-15 01:20:27, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=24), StudyPlanDto(spId=88, userId=1, spTitle=完成组队系统每天任务总结功能, spContext=组队系统, spTime=2020-08-11 00:26:16, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=87, userId=1, spTitle=springboot基础环境搭建（学习专用）, spContext=springboot, spTime=2020-08-10 17:08:49, spLink=http://www.baidu.com), StudyPlanDto(spId=86, userId=1, spTitle=组队系统修改密码功能实现, spContext=组队系统, spTime=2020-08-07 22:38:41, spLink=http://www.baidu.com), StudyPlanDto(spId=85, userId=1, spTitle=完成每天任务的开发, spContext=组队系统, spTime=2020-08-07 00:24:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=84, userId=1, spTitle=Docker p14 ~ 18, spContext=docker, spTime=2020-08-04 23:58:30, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=18), StudyPlanDto(spId=83, userId=1, spTitle=Docker学习p14~p25, spContext=Docker, spTime=2020-08-04 20:29:36, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=14), StudyPlanDto(spId=82, userId=1, spTitle=Docker 安装，基本命令, spContext=Docker, spTime=2020-08-03 23:50:22, spLink=http://www.baidu.com), StudyPlanDto(spId=81, userId=1, spTitle=表单数据校验，Docket, spContext=react，docket, spTime=2020-07-26 05:31:10, spLink=https://ant.design/components/form-cn/#API), StudyPlanDto(spId=80, userId=1, spTitle=用react做每天任务打卡功能, spContext=react, spTime=2020-07-24 18:55:02, spLink=baidu.com), StudyPlanDto(spId=79, userId=1, spTitle=完成前端学生表的增加，修改，删除功能, spContext=ly, spTime=2020-07-21 20:27:46, spLink=baidu.com), StudyPlanDto(spId=78, userId=1, spTitle=BUG： mybatis + oracle 逆向功能报错：驱动的版本有问题, spContext=bug, spTime=2020-07-21 20:27:07, spLink=baidu.com), StudyPlanDto(spId=77, userId=1, spTitle=阿里巴巴代码编程规范, spContext=编程, spTime=2020-07-21 19:48:10, spLink=baidu.com), StudyPlanDto(spId=76, userId=1, spTitle=dom对象的api, spContext=dom, spTime=2020-07-21 00:28:43, spLink=baidu.com), StudyPlanDto(spId=75, userId=1, spTitle=算法：两数之和, spContext=算法, spTime=2020-07-20 13:15:13, spLink=https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/submissions/), StudyPlanDto(spId=74, userId=1, spTitle=深入了解CAP, spContext=cap, spTime=2020-07-16 16:46:34, spLink=baidu.com), StudyPlanDto(spId=73, userId=1, spTitle=深入了解angular缓存, spContext=angular, spTime=2020-07-15 10:56:45, spLink=http://baidu.com), StudyPlanDto(spId=72, userId=1, spTitle=算法：三角形最小路径和, spContext=leetcode, spTime=2020-07-14 21:41:03, spLink=https://leetcode-cn.com/problems/triangle/), StudyPlanDto(spId=71, userId=1, spTitle=解决websocket在项目中的聊天通信问题, spContext=websocket, spTime=2020-07-14 21:37:43, spLink=http://www.baidu.com), StudyPlanDto(spId=70, userId=1, spTitle=session在分布式中如何实现共享, spContext=分布式, spTime=2020-07-10 16:39:35, spLink=baidu.com), StudyPlanDto(spId=69, userId=1, spTitle=复习：JVM内存模型, spContext=JVM, spTime=2020-07-09 21:31:45, spLink=https://www.jianshu.com/p/76959115d486), StudyPlanDto(spId=68, userId=1, spTitle=解决websocket在nginx上的跨越问题, spContext=websocket部署, spTime=2020-07-07 03:31:08, spLink=http://www.baidu.com), StudyPlanDto(spId=67, userId=1, spTitle=java利用Socket实现客户端与客户端通信, spContext=socket, spTime=2020-07-06 05:52:15, spLink=https://www.jianshu.com/p/211720900e14), StudyPlanDto(spId=66, userId=1, spTitle=socket原理, spContext=socket, spTime=2020-07-06 02:59:00, spLink=https://www.cnblogs.com/wn1m/p/10983172.html), StudyPlanDto(spId=65, userId=1, spTitle=IO流，socket，web socket, spContext=IO流, spTime=2020-07-05 22:04:00, spLink=https://blog.csdn.net/qq_37875585/article/details/89385688), StudyPlanDto(spId=64, userId=1, spTitle=算法：连续子数组的最大和, spContext=算法, spTime=2020-07-05 11:37:13, spLink=https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/), StudyPlanDto(spId=63, userId=1, spTitle=算法：不同的二叉搜索树, spContext=算法, spTime=2020-07-05 02:04:41, spLink=https://leetcode-cn.com/problems/unique-binary-search-trees/), StudyPlanDto(spId=62, userId=1, spTitle=算法：链表中倒数第k个节点, spContext=算法, spTime=2020-07-05 02:03:17, spLink=https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/), StudyPlanDto(spId=61, userId=1, spTitle=顺时针打印矩阵, spContext=算法, spTime=2020-07-04 23:24:10, spLink=https://leetcode-cn.com/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/), StudyPlanDto(spId=60, userId=1, spTitle=算法：最长有效括号, spContext=算法, spTime=2020-07-04 07:05:00, spLink=https://leetcode-cn.com/problems/longest-valid-parentheses/), StudyPlanDto(spId=59, userId=1, spTitle=算法：将有序数组转换为二叉搜索树, spContext=算法, spTime=2020-07-03 03:20:41, spLink=https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/), StudyPlanDto(spId=58, userId=1, spTitle=redis集群详解, spContext=redis, spTime=2020-07-02 01:42:28, spLink=https://blog.csdn.net/miss1181248983/article/details/90056960), StudyPlanDto(spId=57, userId=1, spTitle=zookeeper-图灵学院, spContext=zookeeper, spTime=2020-07-02 01:36:37, spLink=https://ke.qq.com/course/list/%E5%9B%BE%E7%81%B5), StudyPlanDto(spId=56, userId=1, spTitle=ActiveMQ消息中间件, spContext=ActiveMQ, spTime=2020-07-01 05:31:27, spLink=http://activemq.apache.org/components/classic/documentation), StudyPlanDto(spId=55, userId=1, spTitle=redis发布/订阅模式, spContext=redis, spTime=2020-07-01 04:57:00, spLink=https://www.cnblogs.com/qlqwjy/p/9763754.html), StudyPlanDto(spId=54, userId=1, spTitle=算法：最长重复子数组, spContext=给两个数组A和B ,返回两个数组的公共最长子数组的长度；, spTime=2020-07-01 02:58:11, spLink=https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/), StudyPlanDto(spId=53, userId=1, spTitle=springboot+websocket实现在线聊天, spContext=websocket, spTime=2020-07-01 02:26:13, spLink=https://blog.csdn.net/qq_41603102/article/details/82492040), StudyPlanDto(spId=52, userId=1, spTitle=斗鱼开源首秀:基于Go的微服务框架Jupiter, spContext=时事, spTime=2020-06-30 11:40:34, spLink=https://www.oschina.net/question/4487475_2317201?from=20200621), StudyPlanDto(spId=51, userId=1, spTitle=AI学习资源(github), spContext=AI 学习资料包下载链接, spTime=2020-06-30 11:30:53, spLink=https://gitee.com/OSCYuanChuangHui/ai_learning), StudyPlanDto(spId=50, userId=1, spTitle=soket通信原理分析, spContext=了解soket即时通信, spTime=2020-06-30 10:57:44, spLink=http://www.baidu.com), StudyPlanDto(spId=49, userId=1, spTitle=修改组队项目的缓存刷新和添加项目缓存不更新问题, spContext=设置缓存过期时间。修改后端添加数据缓存更新问题, spTime=2020-06-30 10:50:22, spLink=www.baidu.com), StudyPlanDto(spId=48, userId=1, spTitle=分析近十年的行业发展情况, spContext=2020－06－30, spTime=2020-06-30 10:21:51, spLink=http://www.baidu.com), StudyPlanDto(spId=47, userId=1, spTitle=算法：用两个栈实现队列, spContext=两个栈实现队列, spTime=2020-06-30 10:18:39, spLink=https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/), StudyPlanDto(spId=46, userId=1, spTitle=2020-06-30感悟, spContext=找到最前沿的开发技术，并学习和掌握它；
少玩少看，多学习；
忆一晚上没睡所思所想，回到过去最希望做的事，让自己提升；
梦想：在互联网+教育行业发展；, spTime=2020-06-30 10:12:11, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=45, userId=1, spTitle=算法：零钱兑换, spContext=动态规划, spTime=2020-06-30 04:46:08, spLink=https://leetcode-cn.com/problems/coin-change/), StudyPlanDto(spId=44, userId=1, spTitle=redis配置文件, spContext=redis, spTime=2020-06-30 02:43:37, spLink=https://blog.csdn.net/suprezheng/article/details/90679790), StudyPlanDto(spId=43, userId=1, spTitle=redis面试题, spContext=redis, spTime=2020-06-29 03:03:39, spLink=https://blog.csdn.net/ThinkWon/article/details/103522351), StudyPlanDto(spId=42, userId=1, spTitle=算法：数组中的第k个最大元素, spContext=在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。, spTime=2020-06-29 02:30:58, spLink=https://leetcode-cn.com/problems/kth-largest-element-in-an-array/), StudyPlanDto(spId=41, userId=1, spTitle=算法：删除与获取点数, spContext=删除与获取点数, spTime=2020-06-29 00:22:21, spLink=https://leetcode-cn.com/problems/delete-and-earn/), StudyPlanDto(spId=40, userId=1, spTitle=算法：连续的子数组和, spContext=给定一个包含非负数的数组和一目标整数k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为2，且总和为 k 的倍数，即总和为n*k，其中n也是一个整数。, spTime=2020-06-28 20:26:12, spLink=https://leetcode-cn.com/problems/continuous-subarray-sum/), StudyPlanDto(spId=39, userId=1, spTitle=算法： 硬币, spContext=硬币。给定数量不限的硬币，币值为25分、10分、5分和1分，编写代码计算n分有几种表示法。(结果可能会很大，你需要将结果模上1000000007), spTime=2020-06-28 17:42:10, spLink=https://leetcode-cn.com/problems/coin-lcci/), StudyPlanDto(spId=38, userId=1, spTitle=算法：长度最小的子数组, spContext=长度最小的子数组, spTime=2020-06-28 01:36:53, spLink=https://leetcode-cn.com/problems/minimum-size-subarray-sum/), StudyPlanDto(spId=37, userId=1, spTitle=算法：最长不含重复字符的子字符串, spContext=请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。, spTime=2020-06-27 20:14:47, spLink=https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/solution/mian-shi-ti-48-zui-chang-bu-han-zhong-fu-zi-fu-d-9/), StudyPlanDto(spId=36, userId=1, spTitle=算法：缺失的第一个正数, spContext=给你一个未排序的整数数组，请你找出其中没有出现的最小的正整数。, spTime=2020-06-27 08:38:52, spLink=https://leetcode-cn.com/problems/first-missing-positive/), StudyPlanDto(spId=35, userId=1, spTitle=用Angular编写个人在线简历, spContext=在线简历制作, spTime=2020-06-27 05:57:17, spLink=http://www.baidu.com), StudyPlanDto(spId=34, userId=1, spTitle=完善组队系统的注册功能, spContext=完善组队系统的注册功能, spTime=2020-06-27 03:58:39, spLink=http://120.79.191.236/#/passport/register), StudyPlanDto(spId=33, userId=1, spTitle=机器人的运动范围, spContext=地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-26 03:06:26, spLink=https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof), StudyPlanDto(spId=32, userId=1, spTitle=修改组队系统时间不对问题, spContext=serverTimezone=Asia/Shanghai, spTime=2020-06-26 02:51:56, spLink=https://www.cnblogs.com/july-sunny/p/11888270.html), StudyPlanDto(spId=31, userId=1, spTitle=redis面试题, spContext=缓存雪崩、缓存穿透、缓存预热、缓存更新、缓存降级等问题, spTime=2020-06-25 17:38:30, spLink=https://blog.csdn.net/Butterfly_resting/article/details/89668661), StudyPlanDto(spId=30, userId=1, spTitle=算法： 矩阵中的路径, spContext=请设计一个函数，用来判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。例如，在下面的3×4的矩阵中包含一条字符串“bfce”的路径（路径中的字母用加粗标出）。

[["a","b","c","e"],
["s","f","c","s"],
["a","d","e","e"]]

但矩阵中不包含字符串“abfb”的路径，因为字符串的第一个字符b占据了矩阵中的第一行第二个格子之后，路径不能再次进入这个格子。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:18:26, spLink=https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/), StudyPlanDto(spId=29, userId=1, spTitle=算法：礼物的最大价值, spContext=在一个 m*n 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。你可以从棋盘的左上角开始拿格子里的礼物，并每次向右或者向下移动一格、直到到达棋盘的右下角。给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:05:10, spLink=https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/), StudyPlanDto(spId=28, userId=1, spTitle=深圳创酷互动信息技术有限公司, spContext=一、公司名称：深圳创酷互动信息技术有限公司
二、招聘岗位：java工程师
三、岗位职责：
1、负责平台系统业务的服务端开发工作。
2、根据开发规范独立完成编码，测试。按预定目标完成任务，保证代码质量。
3、主动跟进开发过程中的各项事务，例如开发联调、处理Bug、线上部署等。
四、任职要求：
1、本科以上学历，计算机相关专业，1年以上Java服务端开发经验。
2、掌握常用的设计模式，有良好编程习惯。掌握并发、分布式等技术。
3、熟悉Spring全家桶、Mybatis等技术框架。熟练使用Git、Maven、Jenkins等工具。
4、了解RESTful架构，熟悉HTTP等互联网基础知识。
5、熟练MySQL数据库，熟悉Redis，RabbitMQ等中间件。
6、熟练Linux系统常用命令。
7、良好的学习能力、沟通能力和团队协作精神，能独立完成功能模块开发工作。, spTime=2020-06-25 09:01:36, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=74069), StudyPlanDto(spId=27, userId=1, spTitle=广州众盟信息科技有限公司, spContext=Java工程师(5k - 7k), spTime=2020-06-25 08:58:32, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=66368)]
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[StudyPlanDto(spId=152, userId=1, spTitle=K8S学习, spContext=K8S, spTime=2020-09-12 02:23:50, spLink=http://www.baidu.com), StudyPlanDto(spId=151, userId=1, spTitle=sql语句熟悉, spContext=sql, spTime=2020-09-09 02:17:29, spLink=http://www.baidu.com), StudyPlanDto(spId=149, userId=1, spTitle=nginx集群高可用配置, spContext=nginx, spTime=2020-09-08 02:01:33, spLink=https://www.bilibili.com/video/BV1zJ411w7SV?p=15), StudyPlanDto(spId=150, userId=1, spTitle=Java视频, spContext=每天任务, spTime=2020-09-08 02:00:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=148, userId=1, spTitle=Nginx学习, spContext=nginx, spTime=2020-09-07 09:06:46, spLink=http://www.baidu.com), StudyPlanDto(spId=147, userId=1, spTitle=HDFS分布式文件系统, spContext=HDFS, spTime=2020-09-07 09:06:30, spLink=http://www.baidu.com), StudyPlanDto(spId=146, userId=1, spTitle=redis集群, spContext=redis, spTime=2020-09-06 23:25:54, spLink=https://www.bilibili.com/video/BV1FZ4y1u7ny?p=24), StudyPlanDto(spId=145, userId=1, spTitle=研究源码, spContext=源码, spTime=2020-09-03 23:53:46, spLink=http://www.baidu.com), StudyPlanDto(spId=144, userId=1, spTitle=mongodb连接和整合spring boot, spContext=mongodb, spTime=2020-09-03 23:08:04, spLink=http://www.baidu.com), StudyPlanDto(spId=143, userId=1, spTitle=狂神说elasticsearch, spContext=elasticsearch, spTime=2020-09-03 01:48:14, spLink=https://blog.csdn.net/admin741admin/article/details/107816451), StudyPlanDto(spId=142, userId=1, spTitle=Hadoop 15-21, spContext=Hadoop, spTime=2020-09-02 00:27:09, spLink=https://www.bilibili.com/video/BV1cW411r7c5?p=15), StudyPlanDto(spId=141, userId=1, spTitle=用ElasticSreach写组队系统的搜索功能实现, spContext=ElasticSreach, spTime=2020-08-31 22:48:11, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?p=20), StudyPlanDto(spId=140, userId=1, spTitle=MongoDB, spContext=MongoDB, spTime=2020-08-31 01:22:03, spLink=http://www.baidu.com), StudyPlanDto(spId=139, userId=1, spTitle=Shiro安全框架, spContext=Shiro, spTime=2020-08-31 01:19:12, spLink=http://www.baidu.com), StudyPlanDto(spId=138, userId=1, spTitle=JVM调优, spContext=JVM, spTime=2020-08-31 00:49:24, spLink=https://www.baidu.com), StudyPlanDto(spId=137, userId=1, spTitle=Hadoop大数据, spContext=hadoop, spTime=2020-08-31 00:18:22, spLink=https://www.bilibili.com/video/BV1cW411r7c5?from=search&seid=14522186892049429676), StudyPlanDto(spId=136, userId=1, spTitle=elasticsearch学习, spContext=elasticsearch, spTime=2020-08-31 00:03:31, spLink=https://www.bilibili.com/video/BV17a4y1x7zq?from=search&seid=12571544612246652602), StudyPlanDto(spId=135, userId=1, spTitle=集群, spContext=集群, spTime=2020-08-30 23:31:03, spLink=http://www.baidu.com), StudyPlanDto(spId=134, userId=1, spTitle=rabbitMQ消息队列学习, spContext=rabbitMQ, spTime=2020-08-28 21:00:22, spLink=https://www.bilibili.com/video/BV1dE411K7MG?from=search&seid=3960229584189343275), StudyPlanDto(spId=133, userId=1, spTitle=中大的一表通国际处的功能模块理解和BUG, spContext=每天任务, spTime=2020-08-28 20:57:46, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=132, userId=1, spTitle=springcloud整合配置中心config, spContext=config, spTime=2020-08-27 22:56:25, spLink=http://www.baidu.com), StudyPlanDto(spId=131, userId=1, spTitle=一表通项目功能实现流程, spContext=每天任务, spTime=2020-08-27 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=130, userId=1, spTitle=Hystrix熔断整合springcloud, spContext=每天任务, spTime=2020-08-27 02:31:23, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=129, userId=1, spTitle=springcloud整合Zuul2、Gateway服务网关, spContext=zuul2,gateway, spTime=2020-08-27 02:29:45, spLink=https://www.cnblogs.com/cloudxlr/p/11768468.html), StudyPlanDto(spId=128, userId=1, spTitle=git代码回滚操作学习, spContext=git, spTime=2020-08-26 10:28:22, spLink=http://www.baidu.com), StudyPlanDto(spId=127, userId=1, spTitle=如何拦截路由器请求获取用户信息, spContext=路由器, spTime=2020-08-26 10:26:02, spLink=http://www.baidu.com), StudyPlanDto(spId=126, userId=1, spTitle=Hystrix, spContext=Hystrix, spTime=2020-08-25 22:52:29, spLink=https://blog.csdn.net/loushuiyifan/article/details/82702522), StudyPlanDto(spId=125, userId=1, spTitle=consul整合springcloud, spContext=consul, spTime=2020-08-25 22:48:47, spLink=https://www.cnblogs.com/wf614/p/12919799.html#_12), StudyPlanDto(spId=124, userId=1, spTitle=Hystrix熔断的学习和配置整合springcloud, spContext=Hystrix, spTime=2020-08-25 00:56:13, spLink=http://www.baidu.com), StudyPlanDto(spId=120, userId=1, spTitle=Consul 服务注册与发现的学习和配置整合springcloud, spContext=Consul, spTime=2020-08-25 00:53:27, spLink=http://www.baidu.com), StudyPlanDto(spId=123, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-25 00:53:13, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=119, userId=1, spTitle=OpenFeign的学习和配置整合springcloud, spContext=OpenFeign, spTime=2020-08-25 00:52:54, spLink=https://www.cnblogs.com/wf614/p/12919798.html), StudyPlanDto(spId=122, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-25 00:52:41, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=121, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-25 00:52:21, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=118, userId=1, spTitle=portainer学习和配置, spContext=portainer, spTime=2020-08-24 16:20:02, spLink=https://www.cnblogs.com/ExMan/p/11657069.html), StudyPlanDto(spId=117, userId=1, spTitle=每天任务打卡时间BUG, spContext=组队系统, spTime=2020-08-23 17:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=116, userId=1, spTitle=spring security学习, spContext=spring security, spTime=2020-08-23 17:16:19, spLink=http://www.baidu.com), StudyPlanDto(spId=115, userId=1, spTitle=组队系统的功能开发, spContext=每天任务, spTime=2020-08-23 17:14:27, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=114, userId=1, spTitle=深入对session底层的理解, spContext=session, spTime=2020-08-22 17:11:29, spLink=http://www.baidu.com), StudyPlanDto(spId=113, userId=1, spTitle=websocket通信, spContext=websocket, spTime=2020-08-22 16:43:58, spLink=http://www.baidu.com), StudyPlanDto(spId=112, userId=1, spTitle=时间调度器的cron表达式, spContext=quartz, spTime=2020-08-22 14:26:46, spLink=https://www.cnblogs.com/yanghj010/p/10875151.html), StudyPlanDto(spId=111, userId=1, spTitle=war包和jar包的区别, spContext=springboot, spTime=2020-08-22 00:55:59, spLink=http://www.baidu.com), StudyPlanDto(spId=110, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:13, spLink=http://www.baidu.com), StudyPlanDto(spId=109, userId=1, spTitle=写一个基于session认证的实现类, spContext=session, spTime=2020-08-22 00:53:03, spLink=http://www.baidu.com), StudyPlanDto(spId=108, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-22 00:20:28, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=107, userId=1, spTitle=每天总结（组队系统功能）, spContext=每天任务, spTime=2020-08-21 01:11:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=106, userId=1, spTitle=docker, spContext=每天任务, spTime=2020-08-21 01:11:49, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=105, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-21 01:11:47, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=104, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-21 01:11:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=103, userId=1, spTitle=springboot 注册三大组件servlet,filter,litener, spContext=springboot, spTime=2020-08-20 19:21:31, spLink=http://www.baidu.com), StudyPlanDto(spId=102, userId=1, spTitle=react 类和方法两种方式建立组件的使用, spContext=react, spTime=2020-08-20 02:48:32, spLink=http://www.baidu.com), StudyPlanDto(spId=101, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-20 02:32:05, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=100, userId=1, spTitle=11：00 - 12：00 看时事，做一天的总结, spContext=每天任务, spTime=2020-08-20 02:31:33, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=99, userId=1, spTitle=完成每天学习时间点功能设计, spContext=组队系统, spTime=2020-08-20 02:31:24, spLink=http://www.baidu.com), StudyPlanDto(spId=98, userId=1, spTitle=权限管理平台数据库设计, spContext=权限管理平台, spTime=2020-08-20 02:25:43, spLink=http://www.baidu.com), StudyPlanDto(spId=97, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:08, spLink=http://www.baidu.com), StudyPlanDto(spId=96, userId=1, spTitle=同一权限管理平台的react前端框架搭建, spContext=react, spTime=2020-08-20 02:24:01, spLink=http://www.baidu.com), StudyPlanDto(spId=95, userId=1, spTitle=思考如何提高工作效率, spContext=每天任务, spTime=2020-08-20 01:16:53, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=94, userId=1, spTitle=中大系统个人中心查询任务的sql分析, spContext=sql, spTime=2020-08-19 17:35:37, spLink=http://localhost:8070/#/personalUser), StudyPlanDto(spId=93, userId=1, spTitle=优化组队系统登录缓慢和首次登录报错的问题, spContext=每天任务, spTime=2020-08-19 01:25:35, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=92, userId=1, spTitle=Dockerfile p26, spContext=Docker, spTime=2020-08-16 13:11:06, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=26), StudyPlanDto(spId=91, userId=1, spTitle=springcloud环境搭建, spContext=springcloud, spTime=2020-08-15 03:09:12, spLink=https://note.youdao.com/web/#/file/WEB3c5c7b9601a754586ebce711dfedbf5a/note/WEB3a6ae7f7653499f7c3fe0c70eed036af/), StudyPlanDto(spId=90, userId=1, spTitle=Docker学习p31~p34, spContext=Docker, spTime=2020-08-15 02:54:09, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=34), StudyPlanDto(spId=89, userId=1, spTitle=Docker学习p18~p24, spContext=Docker, spTime=2020-08-15 01:20:27, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=24), StudyPlanDto(spId=88, userId=1, spTitle=完成组队系统每天任务总结功能, spContext=组队系统, spTime=2020-08-11 00:26:16, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=87, userId=1, spTitle=springboot基础环境搭建（学习专用）, spContext=springboot, spTime=2020-08-10 17:08:49, spLink=http://www.baidu.com), StudyPlanDto(spId=86, userId=1, spTitle=组队系统修改密码功能实现, spContext=组队系统, spTime=2020-08-07 22:38:41, spLink=http://www.baidu.com), StudyPlanDto(spId=85, userId=1, spTitle=完成每天任务的开发, spContext=组队系统, spTime=2020-08-07 00:24:43, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=84, userId=1, spTitle=Docker p14 ~ 18, spContext=docker, spTime=2020-08-04 23:58:30, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=18), StudyPlanDto(spId=83, userId=1, spTitle=Docker学习p14~p25, spContext=Docker, spTime=2020-08-04 20:29:36, spLink=https://www.bilibili.com/video/BV1Vs411E7AR?p=14), StudyPlanDto(spId=82, userId=1, spTitle=Docker 安装，基本命令, spContext=Docker, spTime=2020-08-03 23:50:22, spLink=http://www.baidu.com), StudyPlanDto(spId=81, userId=1, spTitle=表单数据校验，Docket, spContext=react，docket, spTime=2020-07-26 05:31:10, spLink=https://ant.design/components/form-cn/#API), StudyPlanDto(spId=80, userId=1, spTitle=用react做每天任务打卡功能, spContext=react, spTime=2020-07-24 18:55:02, spLink=baidu.com), StudyPlanDto(spId=79, userId=1, spTitle=完成前端学生表的增加，修改，删除功能, spContext=ly, spTime=2020-07-21 20:27:46, spLink=baidu.com), StudyPlanDto(spId=78, userId=1, spTitle=BUG： mybatis + oracle 逆向功能报错：驱动的版本有问题, spContext=bug, spTime=2020-07-21 20:27:07, spLink=baidu.com), StudyPlanDto(spId=77, userId=1, spTitle=阿里巴巴代码编程规范, spContext=编程, spTime=2020-07-21 19:48:10, spLink=baidu.com), StudyPlanDto(spId=76, userId=1, spTitle=dom对象的api, spContext=dom, spTime=2020-07-21 00:28:43, spLink=baidu.com), StudyPlanDto(spId=75, userId=1, spTitle=算法：两数之和, spContext=算法, spTime=2020-07-20 13:15:13, spLink=https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/submissions/), StudyPlanDto(spId=74, userId=1, spTitle=深入了解CAP, spContext=cap, spTime=2020-07-16 16:46:34, spLink=baidu.com), StudyPlanDto(spId=73, userId=1, spTitle=深入了解angular缓存, spContext=angular, spTime=2020-07-15 10:56:45, spLink=http://baidu.com), StudyPlanDto(spId=72, userId=1, spTitle=算法：三角形最小路径和, spContext=leetcode, spTime=2020-07-14 21:41:03, spLink=https://leetcode-cn.com/problems/triangle/), StudyPlanDto(spId=71, userId=1, spTitle=解决websocket在项目中的聊天通信问题, spContext=websocket, spTime=2020-07-14 21:37:43, spLink=http://www.baidu.com), StudyPlanDto(spId=70, userId=1, spTitle=session在分布式中如何实现共享, spContext=分布式, spTime=2020-07-10 16:39:35, spLink=baidu.com), StudyPlanDto(spId=69, userId=1, spTitle=复习：JVM内存模型, spContext=JVM, spTime=2020-07-09 21:31:45, spLink=https://www.jianshu.com/p/76959115d486), StudyPlanDto(spId=68, userId=1, spTitle=解决websocket在nginx上的跨越问题, spContext=websocket部署, spTime=2020-07-07 03:31:08, spLink=http://www.baidu.com), StudyPlanDto(spId=67, userId=1, spTitle=java利用Socket实现客户端与客户端通信, spContext=socket, spTime=2020-07-06 05:52:15, spLink=https://www.jianshu.com/p/211720900e14), StudyPlanDto(spId=66, userId=1, spTitle=socket原理, spContext=socket, spTime=2020-07-06 02:59:00, spLink=https://www.cnblogs.com/wn1m/p/10983172.html), StudyPlanDto(spId=65, userId=1, spTitle=IO流，socket，web socket, spContext=IO流, spTime=2020-07-05 22:04:00, spLink=https://blog.csdn.net/qq_37875585/article/details/89385688), StudyPlanDto(spId=64, userId=1, spTitle=算法：连续子数组的最大和, spContext=算法, spTime=2020-07-05 11:37:13, spLink=https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/), StudyPlanDto(spId=63, userId=1, spTitle=算法：不同的二叉搜索树, spContext=算法, spTime=2020-07-05 02:04:41, spLink=https://leetcode-cn.com/problems/unique-binary-search-trees/), StudyPlanDto(spId=62, userId=1, spTitle=算法：链表中倒数第k个节点, spContext=算法, spTime=2020-07-05 02:03:17, spLink=https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/), StudyPlanDto(spId=61, userId=1, spTitle=顺时针打印矩阵, spContext=算法, spTime=2020-07-04 23:24:10, spLink=https://leetcode-cn.com/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/), StudyPlanDto(spId=60, userId=1, spTitle=算法：最长有效括号, spContext=算法, spTime=2020-07-04 07:05:00, spLink=https://leetcode-cn.com/problems/longest-valid-parentheses/), StudyPlanDto(spId=59, userId=1, spTitle=算法：将有序数组转换为二叉搜索树, spContext=算法, spTime=2020-07-03 03:20:41, spLink=https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/), StudyPlanDto(spId=58, userId=1, spTitle=redis集群详解, spContext=redis, spTime=2020-07-02 01:42:28, spLink=https://blog.csdn.net/miss1181248983/article/details/90056960), StudyPlanDto(spId=57, userId=1, spTitle=zookeeper-图灵学院, spContext=zookeeper, spTime=2020-07-02 01:36:37, spLink=https://ke.qq.com/course/list/%E5%9B%BE%E7%81%B5), StudyPlanDto(spId=56, userId=1, spTitle=ActiveMQ消息中间件, spContext=ActiveMQ, spTime=2020-07-01 05:31:27, spLink=http://activemq.apache.org/components/classic/documentation), StudyPlanDto(spId=55, userId=1, spTitle=redis发布/订阅模式, spContext=redis, spTime=2020-07-01 04:57:00, spLink=https://www.cnblogs.com/qlqwjy/p/9763754.html), StudyPlanDto(spId=54, userId=1, spTitle=算法：最长重复子数组, spContext=给两个数组A和B ,返回两个数组的公共最长子数组的长度；, spTime=2020-07-01 02:58:11, spLink=https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/), StudyPlanDto(spId=53, userId=1, spTitle=springboot+websocket实现在线聊天, spContext=websocket, spTime=2020-07-01 02:26:13, spLink=https://blog.csdn.net/qq_41603102/article/details/82492040), StudyPlanDto(spId=52, userId=1, spTitle=斗鱼开源首秀:基于Go的微服务框架Jupiter, spContext=时事, spTime=2020-06-30 11:40:34, spLink=https://www.oschina.net/question/4487475_2317201?from=20200621), StudyPlanDto(spId=51, userId=1, spTitle=AI学习资源(github), spContext=AI 学习资料包下载链接, spTime=2020-06-30 11:30:53, spLink=https://gitee.com/OSCYuanChuangHui/ai_learning), StudyPlanDto(spId=50, userId=1, spTitle=soket通信原理分析, spContext=了解soket即时通信, spTime=2020-06-30 10:57:44, spLink=http://www.baidu.com), StudyPlanDto(spId=49, userId=1, spTitle=修改组队项目的缓存刷新和添加项目缓存不更新问题, spContext=设置缓存过期时间。修改后端添加数据缓存更新问题, spTime=2020-06-30 10:50:22, spLink=www.baidu.com), StudyPlanDto(spId=48, userId=1, spTitle=分析近十年的行业发展情况, spContext=2020－06－30, spTime=2020-06-30 10:21:51, spLink=http://www.baidu.com), StudyPlanDto(spId=47, userId=1, spTitle=算法：用两个栈实现队列, spContext=两个栈实现队列, spTime=2020-06-30 10:18:39, spLink=https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/), StudyPlanDto(spId=46, userId=1, spTitle=2020-06-30感悟, spContext=找到最前沿的开发技术，并学习和掌握它；
少玩少看，多学习；
忆一晚上没睡所思所想，回到过去最希望做的事，让自己提升；
梦想：在互联网+教育行业发展；, spTime=2020-06-30 10:12:11, spLink=http://120.79.191.236/#/team), StudyPlanDto(spId=45, userId=1, spTitle=算法：零钱兑换, spContext=动态规划, spTime=2020-06-30 04:46:08, spLink=https://leetcode-cn.com/problems/coin-change/), StudyPlanDto(spId=44, userId=1, spTitle=redis配置文件, spContext=redis, spTime=2020-06-30 02:43:37, spLink=https://blog.csdn.net/suprezheng/article/details/90679790), StudyPlanDto(spId=43, userId=1, spTitle=redis面试题, spContext=redis, spTime=2020-06-29 03:03:39, spLink=https://blog.csdn.net/ThinkWon/article/details/103522351), StudyPlanDto(spId=42, userId=1, spTitle=算法：数组中的第k个最大元素, spContext=在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。, spTime=2020-06-29 02:30:58, spLink=https://leetcode-cn.com/problems/kth-largest-element-in-an-array/), StudyPlanDto(spId=41, userId=1, spTitle=算法：删除与获取点数, spContext=删除与获取点数, spTime=2020-06-29 00:22:21, spLink=https://leetcode-cn.com/problems/delete-and-earn/), StudyPlanDto(spId=40, userId=1, spTitle=算法：连续的子数组和, spContext=给定一个包含非负数的数组和一目标整数k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为2，且总和为 k 的倍数，即总和为n*k，其中n也是一个整数。, spTime=2020-06-28 20:26:12, spLink=https://leetcode-cn.com/problems/continuous-subarray-sum/), StudyPlanDto(spId=39, userId=1, spTitle=算法： 硬币, spContext=硬币。给定数量不限的硬币，币值为25分、10分、5分和1分，编写代码计算n分有几种表示法。(结果可能会很大，你需要将结果模上1000000007), spTime=2020-06-28 17:42:10, spLink=https://leetcode-cn.com/problems/coin-lcci/), StudyPlanDto(spId=38, userId=1, spTitle=算法：长度最小的子数组, spContext=长度最小的子数组, spTime=2020-06-28 01:36:53, spLink=https://leetcode-cn.com/problems/minimum-size-subarray-sum/), StudyPlanDto(spId=37, userId=1, spTitle=算法：最长不含重复字符的子字符串, spContext=请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。, spTime=2020-06-27 20:14:47, spLink=https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/solution/mian-shi-ti-48-zui-chang-bu-han-zhong-fu-zi-fu-d-9/), StudyPlanDto(spId=36, userId=1, spTitle=算法：缺失的第一个正数, spContext=给你一个未排序的整数数组，请你找出其中没有出现的最小的正整数。, spTime=2020-06-27 08:38:52, spLink=https://leetcode-cn.com/problems/first-missing-positive/), StudyPlanDto(spId=35, userId=1, spTitle=用Angular编写个人在线简历, spContext=在线简历制作, spTime=2020-06-27 05:57:17, spLink=http://www.baidu.com), StudyPlanDto(spId=34, userId=1, spTitle=完善组队系统的注册功能, spContext=完善组队系统的注册功能, spTime=2020-06-27 03:58:39, spLink=http://120.79.191.236/#/passport/register), StudyPlanDto(spId=33, userId=1, spTitle=机器人的运动范围, spContext=地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-26 03:06:26, spLink=https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof), StudyPlanDto(spId=32, userId=1, spTitle=修改组队系统时间不对问题, spContext=serverTimezone=Asia/Shanghai, spTime=2020-06-26 02:51:56, spLink=https://www.cnblogs.com/july-sunny/p/11888270.html), StudyPlanDto(spId=31, userId=1, spTitle=redis面试题, spContext=缓存雪崩、缓存穿透、缓存预热、缓存更新、缓存降级等问题, spTime=2020-06-25 17:38:30, spLink=https://blog.csdn.net/Butterfly_resting/article/details/89668661), StudyPlanDto(spId=30, userId=1, spTitle=算法： 矩阵中的路径, spContext=请设计一个函数，用来判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。例如，在下面的3×4的矩阵中包含一条字符串“bfce”的路径（路径中的字母用加粗标出）。

[["a","b","c","e"],
["s","f","c","s"],
["a","d","e","e"]]

但矩阵中不包含字符串“abfb”的路径，因为字符串的第一个字符b占据了矩阵中的第一行第二个格子之后，路径不能再次进入这个格子。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:18:26, spLink=https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/), StudyPlanDto(spId=29, userId=1, spTitle=算法：礼物的最大价值, spContext=在一个 m*n 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。你可以从棋盘的左上角开始拿格子里的礼物，并每次向右或者向下移动一格、直到到达棋盘的右下角。给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。, spTime=2020-06-25 09:05:10, spLink=https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/), StudyPlanDto(spId=28, userId=1, spTitle=深圳创酷互动信息技术有限公司, spContext=一、公司名称：深圳创酷互动信息技术有限公司
二、招聘岗位：java工程师
三、岗位职责：
1、负责平台系统业务的服务端开发工作。
2、根据开发规范独立完成编码，测试。按预定目标完成任务，保证代码质量。
3、主动跟进开发过程中的各项事务，例如开发联调、处理Bug、线上部署等。
四、任职要求：
1、本科以上学历，计算机相关专业，1年以上Java服务端开发经验。
2、掌握常用的设计模式，有良好编程习惯。掌握并发、分布式等技术。
3、熟悉Spring全家桶、Mybatis等技术框架。熟练使用Git、Maven、Jenkins等工具。
4、了解RESTful架构，熟悉HTTP等互联网基础知识。
5、熟练MySQL数据库，熟悉Redis，RabbitMQ等中间件。
6、熟练Linux系统常用命令。
7、良好的学习能力、沟通能力和团队协作精神，能独立完成功能模块开发工作。, spTime=2020-06-25 09:01:36, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=74069), StudyPlanDto(spId=27, userId=1, spTitle=广州众盟信息科技有限公司, spContext=Java工程师(5k - 7k), spTime=2020-06-25 08:58:32, spLink=https://job.gdedu.gov.cn/student/#/position/positionDetail?positionid=66368)]),[]>
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : --->目标方法名为:generate
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.service.TeamServiceImplgetTeams
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@ed17ef61, teamId=124, teamName=废铁团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=无, teamType=其他, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=无, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=1, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@793b9fbe, proId=86, proName=每天一学, leaderName=曹荣武, proDescribe=每天一学, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@8c951b17, proId=87, proName=悟, leaderName=曹荣武, proDescribe=记录一生中领悟的道理, proDate=2020-06-30, proStartTime=2020-06-30, proEndTime=2020-06-30, proStatus=0, teamId=124, proType=其他, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@494e9495, teamId=125, teamName=Java招聘, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=整理Java招聘信息, teamType=技术类, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=Java开发人员, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f8f59573, proId=85, proName=Java, leaderName=曹荣武, proDescribe=Java开发, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=125, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getJoinTeamProByUserId
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2021-02-22 20:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2021-02-22 20:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@b1b8c3f3, teamId=124, teamName=废铁团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=无, teamType=其他, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=无, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=1, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@793b9fbe, proId=86, proName=每天一学, leaderName=曹荣武, proDescribe=每天一学, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@8c951b17, proId=87, proName=悟, leaderName=曹荣武, proDescribe=记录一生中领悟的道理, proDate=2020-06-30, proStartTime=2020-06-30, proEndTime=2020-06-30, proStatus=0, teamId=124, proType=其他, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@def6927, teamId=125, teamName=Java招聘, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=整理Java招聘信息, teamType=技术类, teamNumber=1, sumNumber=10, teamDate=2020-05-30, status=1, staff=Java开发人员, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f8f59573, proId=85, proName=Java, leaderName=曹荣武, proDescribe=Java开发, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=125, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2021-02-22 20:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=其他, y=1}, {x=技术类, y=1}]
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=其他, y=1}, {x=技术类, y=1}]
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=其他, y=1}, {x=技术类, y=1}]),[]>
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9c0f666e, taskId=88, proId=85, taskCreateTime=2020-05-30, taskStartTime=2020-05-30, taskEndTime=2020-05-30, taskContent=广州皇上皇集团, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=国企；
3k - 5k；广东大学生就业创业平台；, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6fb4e922, taskId=89, proId=86, taskCreateTime=2020-05-29, taskStartTime=null, taskEndTime=2020-05-29, taskContent=WebSocket, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=https://mp.weixin.qq.com/s/jkI8V7TwnYwl02uGi7_x9w, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[])]
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9c0f666e, taskId=88, proId=85, taskCreateTime=2020-05-30, taskStartTime=2020-05-30, taskEndTime=2020-05-30, taskContent=广州皇上皇集团, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=国企；
3k - 5k；广东大学生就业创业平台；, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6fb4e922, taskId=89, proId=86, taskCreateTime=2020-05-29, taskStartTime=null, taskEndTime=2020-05-29, taskContent=WebSocket, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=https://mp.weixin.qq.com/s/jkI8V7TwnYwl02uGi7_x9w, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[])]
2021-02-22 20:40 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9c0f666e, taskId=88, proId=85, taskCreateTime=2020-05-30, taskStartTime=2020-05-30, taskEndTime=2020-05-30, taskContent=广州皇上皇集团, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=国企；
3k - 5k；广东大学生就业创业平台；, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6fb4e922, taskId=89, proId=86, taskCreateTime=2020-05-29, taskStartTime=null, taskEndTime=2020-05-29, taskContent=WebSocket, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=https://mp.weixin.qq.com/s/jkI8V7TwnYwl02uGi7_x9w, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[])]),[]>
2021-02-22 20:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=26, teamId=124, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2020-02-02, decribe=test, phone=18814231208, status=0)]),[]>
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getLeaderIdByProId
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getLeaderIdByProId
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getLeaderIdByProId
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=true),[]>
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:40 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]),[]>
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]
2021-02-22 20:40 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@8ae3a7b8, taskId=85, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-30, taskContent=spring源码分析, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=spring源码, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fa825805, taskId=86, proId=84, taskCreateTime=2020-05-30, taskStartTime=2020-05-31, taskEndTime=2020-06-01, taskContent=编辑器和pdf转换代码实现, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现格式转换, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@91d26dd2, taskId=87, proId=84, taskCreateTime=2020-05-29, taskStartTime=2020-05-29, taskEndTime=2020-05-29, taskContent=服务器快照, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=阿里云服务器快照需要收费, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46942a23, taskId=91, proId=84, taskCreateTime=2020-06-01, taskStartTime=2020-06-01, taskEndTime=2020-06-01, taskContent=实现项目文件下载, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=实现文件下载功能, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8c11967, taskId=92, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=看基础知识一小时, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=待增加, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3b8ceeae, taskId=93, proId=84, taskCreateTime=2020-06-09, taskStartTime=2020-06-09, taskEndTime=2020-06-09, taskContent=深入理解AQS, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=https://segmentfault.com/a/1190000017372067, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@3e80b8a1, taskId=94, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=java线程池, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@a2ccd0f8, taskId=95, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=乐观锁和悲观锁, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b0eab38a, taskId=96, proId=84, taskCreateTime=2020-06-10, taskStartTime=2020-06-10, taskEndTime=2020-06-10, taskContent=两道算法, userId=1, userName=曹荣武, subTaskId=null, taskStatus=4, taskMark=无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@fc71f860, taskId=97, proId=84, taskCreateTime=2020-06-12, taskStartTime=2020-06-12, taskEndTime=2020-06-12, taskContent=springboot自动化配置原理, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=https://blog.csdn.net/u014745069/article/details/83820511, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@46772481, taskId=98, proId=84, taskCreateTime=2020-06-18, taskStartTime=2020-06-18, taskEndTime=2020-06-18, taskContent=乐观锁和悲观锁, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=暂无, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@61e1a5f6, taskId=102, proId=84, taskCreateTime=2020-07-09, taskStartTime=2020-07-09, taskEndTime=2020-07-09, taskContent=刷两道SQL, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=SQL, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@84fd9507, taskId=106, proId=84, taskCreateTime=2020-08-04, taskStartTime=2020-08-04, taskEndTime=2021-05-01, taskContent=将组队系统后端springboot 改为springcloud, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=项目改造, taskLink=null, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@6689ad3d, taskId=109, proId=84, taskCreateTime=2020-08-20, taskStartTime=2020-08-20, taskEndTime=2020-09-30, taskContent=权限管理系统, userId=0, userName=无, subTaskId=null, taskStatus=1, taskMark=react 开发, taskLink=null, subTaskDtos=[])]),[]>
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2021-02-22 20:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@76e6b074, proId=84, proName=任务, leaderName=曹荣武, proDescribe=任务, proDate=2020-05-30, proStartTime=2020-05-30, proEndTime=2020-06-29, proStatus=0, teamId=124, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=19, fileName=1.txt, userId=1, userName=曹荣武, fileLink=D:/upload/1.txt, proId=84, proName=任务, uploadTime=2021-02-19), FilesDto(fileId=20, fileName=微信图片_20200408152754.jpg, userId=1, userName=曹荣武, fileLink=D:/upload/微信图片_20200408152754.jpg, proId=84, proName=任务, uploadTime=2021-02-21)]
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=19, fileName=1.txt, userId=1, userName=曹荣武, fileLink=D:/upload/1.txt, proId=84, proName=任务, uploadTime=2021-02-19), FilesDto(fileId=20, fileName=微信图片_20200408152754.jpg, userId=1, userName=曹荣武, fileLink=D:/upload/微信图片_20200408152754.jpg, proId=84, proName=任务, uploadTime=2021-02-21)]
2021-02-22 20:40 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=19, fileName=1.txt, userId=1, userName=曹荣武, fileLink=D:/upload/1.txt, proId=84, proName=任务, uploadTime=2021-02-19), FilesDto(fileId=20, fileName=微信图片_20200408152754.jpg, userId=1, userName=曹荣武, fileLink=D:/upload/微信图片_20200408152754.jpg, proId=84, proName=任务, uploadTime=2021-02-21)]),[]>
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:download
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:downloadFile
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : success
2021-02-22 20:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:download
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:downloadFile
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : success
2021-02-22 20:40 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
