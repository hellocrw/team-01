2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 9944 (started by crw in D:\project\毕业设计项目\team-01)
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41ms. Found 0 JDBC repository interfaces.
2020-03-30 03:17 [restartedMain] [DEBUG]  org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105)ev  el org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@346f67e7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-03-30 03:17 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-03-30 03:17 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-30 03:17 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-03-30 03:17 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2860 ms
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-03-30 03:17:24",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-03-30 03:17 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 25
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@4356b6ab
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@1468b828
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:configure
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/static/**'], []
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1ce5ccef, org.springframework.security.web.context.SecurityContextPersistenceFilter@38406b2b, org.springframework.security.web.header.HeaderWriterFilter@74892519, org.springframework.security.web.authentication.logout.LogoutFilter@1c64e64a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@40acfa7f, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5ed825b5, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@3b3db20e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@372ba965, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@55064668, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a62d72a, org.springframework.security.web.session.SessionManagementFilter@354f8c30, org.springframework.security.web.access.ExceptionTranslationFilter@2b381919, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2aa0c820]
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@33d3f81f
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@3862b3f5
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$539/487172654@1db5c0a7
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@2c3a4150
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@5ba83786
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@39099896
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-03-30 03:17 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-03-30 03:17 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-30 03:17 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-30 03:17 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-30 03:17 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingPOST_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-03-30 03:17 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-03-30 03:17 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-03-30 03:17 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 8.617 seconds (JVM running for 11.285)
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-03-30 03:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 73 ms
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-03-30 03:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-03-30 03:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-03-30 03:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-03-30 03:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-03-30 03:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-03-30 03:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(id=0, key=0, value=技术类), TeamTypeDto(id=1, key=1, value=业余类), TeamTypeDto(id=2, key=2, value=金融类), TeamTypeDto(id=3, key=3, value=兴趣类), TeamTypeDto(id=4, key=4, value=社团类)]
2020-03-30 03:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(id=0, key=0, value=技术类), TeamTypeDto(id=1, key=1, value=业余类), TeamTypeDto(id=2, key=2, value=金融类), TeamTypeDto(id=3, key=3, value=兴趣类), TeamTypeDto(id=4, key=4, value=社团类)]
2020-03-30 03:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(id=0, key=0, value=技术类), TeamTypeDto(id=1, key=1, value=业余类), TeamTypeDto(id=2, key=2, value=金融类), TeamTypeDto(id=3, key=3, value=兴趣类), TeamTypeDto(id=4, key=4, value=社团类)]),[]>
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@257a05b6, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@cebdb7, proId=1, proName=组队系统设计, leaderName=曹荣武, proDescribe=毕业设计，组队系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=50, number=13, seeNum=25, staff=staff, staffList=1, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@26b8e7aa, proId=4, proName=京东商城, leaderName=马云, proDescribe=强哥, proDate=2020-03-24, proStartTime=2020-03-24, proEndTime=2020-03-24, proStatus=未完成, teamId=1, proType=销售类, proCurrentNum=22, proLimiedNum=50, number=12, seeNum=23, staff=staff, staffList=销售能力, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@62214e9d, proId=5, proName=fa, leaderName=马云, proDescribe=faga, proDate=2020-03-28, proStartTime=2020-03-28, proEndTime=2020-03-28, proStatus=未完成, teamId=1, proType=fa, proCurrentNum=22, proLimiedNum=22, number=12, seeNum=22, staff=fagrg, staffList=fag, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10d5, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c4f, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@1560bffa, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@d167e867, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@3977fcb7, proId=2, proName=毕业就业管理系统设计, leaderName=豪宗超, proDescribe=毕业设计，毕业就业管理系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=2, proType=技术类, proCurrentNum=21, proLimiedNum=50, number=21, seeNum=22, staff=staff, staffList=1, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c07d417, teamId=7, teamName=京东, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57426bb4, teamId=8, teamName=京东2, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2234743, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=所有学校, teamLabel=java, seeNum=43, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@2ba26688, proId=3, proName=淘宝系统设计, leaderName=马云, proDescribe=网上商城购物系统, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=已完成, teamId=3, proType=技术类, proCurrentNum=22, proLimiedNum=50, number=23, seeNum=22, staff=staff, staffList=1, taskDtos=null)])]
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@257a05b6, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@cebdb7, proId=1, proName=组队系统设计, leaderName=曹荣武, proDescribe=毕业设计，组队系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=50, number=13, seeNum=25, staff=staff, staffList=1, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@26b8e7aa, proId=4, proName=京东商城, leaderName=马云, proDescribe=强哥, proDate=2020-03-24, proStartTime=2020-03-24, proEndTime=2020-03-24, proStatus=未完成, teamId=1, proType=销售类, proCurrentNum=22, proLimiedNum=50, number=12, seeNum=23, staff=staff, staffList=销售能力, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@62214e9d, proId=5, proName=fa, leaderName=马云, proDescribe=faga, proDate=2020-03-28, proStartTime=2020-03-28, proEndTime=2020-03-28, proStatus=未完成, teamId=1, proType=fa, proCurrentNum=22, proLimiedNum=22, number=12, seeNum=22, staff=fagrg, staffList=fag, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10d5, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c4f, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@1560bffa, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@d167e867, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@3977fcb7, proId=2, proName=毕业就业管理系统设计, leaderName=豪宗超, proDescribe=毕业设计，毕业就业管理系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=2, proType=技术类, proCurrentNum=21, proLimiedNum=50, number=21, seeNum=22, staff=staff, staffList=1, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c07d417, teamId=7, teamName=京东, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57426bb4, teamId=8, teamName=京东2, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2234743, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=所有学校, teamLabel=java, seeNum=43, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@2ba26688, proId=3, proName=淘宝系统设计, leaderName=马云, proDescribe=网上商城购物系统, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=已完成, teamId=3, proType=技术类, proCurrentNum=22, proLimiedNum=50, number=23, seeNum=22, staff=staff, staffList=1, taskDtos=null)])]
2020-03-30 03:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@257a05b6, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@cebdb7, proId=1, proName=组队系统设计, leaderName=曹荣武, proDescribe=毕业设计，组队系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=50, number=13, seeNum=25, staff=staff, staffList=1, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@26b8e7aa, proId=4, proName=京东商城, leaderName=马云, proDescribe=强哥, proDate=2020-03-24, proStartTime=2020-03-24, proEndTime=2020-03-24, proStatus=未完成, teamId=1, proType=销售类, proCurrentNum=22, proLimiedNum=50, number=12, seeNum=23, staff=staff, staffList=销售能力, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@62214e9d, proId=5, proName=fa, leaderName=马云, proDescribe=faga, proDate=2020-03-28, proStartTime=2020-03-28, proEndTime=2020-03-28, proStatus=未完成, teamId=1, proType=fa, proCurrentNum=22, proLimiedNum=22, number=12, seeNum=22, staff=fagrg, staffList=fag, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10d5, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c4f, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@1560bffa, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@d167e867, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@3977fcb7, proId=2, proName=毕业就业管理系统设计, leaderName=豪宗超, proDescribe=毕业设计，毕业就业管理系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=2, proType=技术类, proCurrentNum=21, proLimiedNum=50, number=21, seeNum=22, staff=staff, staffList=1, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c07d417, teamId=7, teamName=京东, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57426bb4, teamId=8, teamName=京东2, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2234743, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=所有学校, teamLabel=java, seeNum=43, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@2ba26688, proId=3, proName=淘宝系统设计, leaderName=马云, proDescribe=网上商城购物系统, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=已完成, teamId=3, proType=技术类, proCurrentNum=22, proLimiedNum=50, number=23, seeNum=22, staff=staff, staffList=1, taskDtos=null)])]),[]>
2020-03-30 03:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-03-30 03:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-03-30 03:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByTeamName
2020-03-30 03:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByTeamName
2020-03-30 03:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByTeamName
2020-03-30 03:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@ade0958, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@97efebbc, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@d680e0c7, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=所有学校, teamLabel=java, seeNum=43, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10ff, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c79, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@1560c024, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=null)]
2020-03-30 03:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@ade0958, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@97efebbc, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@d680e0c7, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=所有学校, teamLabel=java, seeNum=43, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10ff, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c79, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@1560c024, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=null)]
2020-03-30 03:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@ade0958, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@97efebbc, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@d680e0c7, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=所有学校, teamLabel=java, seeNum=43, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10ff, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c79, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@1560c024, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=null)]),[]>
