2020-05-04 03:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 03:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 03:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 03:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 03:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 03:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 03:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 03:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 03:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 03:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 03:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 03:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-04 03:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-04 03:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-04 03:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 03:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 03:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 03:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 03:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 03:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 03:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 03:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 03:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 03:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-04 03:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-04 03:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-04 03:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 03:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 03:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 03:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 03:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 03:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 03:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 03:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 03:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 03:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-04 03:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-04 03:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-04 03:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 03:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 03:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 03:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 03:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 03:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 03:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 03:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 03:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 03:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 03:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 03:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-04 03:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-04 03:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:saveTeam
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:saveTeam
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AdminMapper--->目标方法名为:findAdminId
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 3
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toEntity
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Team(teamId=null, teamName=测试团队, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=我, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=2020-05-04, status=0, staff=无
, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null)
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:saveTeam
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : InsertMapper--->目标方法名为:insert
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:agree
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 03:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=保存成功, data=1),[]>
2020-05-04 03:56 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:56 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:56 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 03:56 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 03:56 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 03:56 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 03:56 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 03:56 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 03:56 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:56 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:56 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 03:56 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 03:56 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 03:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 03:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 03:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 03:56 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:56 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 03:56 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:56 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 03:56 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 03:56 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 03:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=2}]
2020-05-04 03:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=2}]
2020-05-04 03:56 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 03:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=2}]),[]>
2020-05-04 03:56 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 03:56 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:56 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:56 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 03:56 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:56 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:56 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 03:56 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 03:56 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 03:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 03:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 03:56 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 03:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 03:56 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 03:56 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 03:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 03:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 03:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 03:57 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:57 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:57 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:57 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 03:57 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:57 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 03:57 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 03:57 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 03:57 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 03:57 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 03:57 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 03:57 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 03:57 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 03:57 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 03:57 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 03:57 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 03:57 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:57 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:57 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 03:57 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 03:57 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 03:57 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:57 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:57 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 03:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 03:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 03:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 03:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 03:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 03:57 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 03:57 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 03:57 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 03:57 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 03:57 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 03:57 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 03:57 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 03:57 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:02 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:02 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:02 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:02 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:02 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:02 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:02 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:02 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:02 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:02 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:02 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:02 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:02 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:02 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:02 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:02 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:03 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:03 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:03 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:03 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:03 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:03 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:03 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:03 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:03 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:03 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:03 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:03 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:03 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:03 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:03 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:03 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:03 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:03 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:03 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:03 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:03 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:03 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:03 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:03 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:03 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:03 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:03 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:03 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:03 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:03 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:03 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:03 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:04 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:04 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:04 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:04 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:04 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:04 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:04 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:04 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:04 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:04 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:04 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:04 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:04 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:04 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:04 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:04 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:04 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:04 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:04 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:04 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:04 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:04 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:04 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:04 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:04 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:04 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:04 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:04 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:04 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:04 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:04 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:04 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=2}]
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=2}]
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=2}]),[]>
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:05 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:05 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:05 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:05 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:05 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 04:05 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 04:05 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:05 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=2, startRow=0, endRow=2, total=2, pages=1, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])])
2020-05-04 04:05 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])])),[]>
2020-05-04 04:05 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:05 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:05 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:05 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:05 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:05 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:05 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:05 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:05 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:05 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=2}]
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=2}]
2020-05-04 04:05 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:05 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=2}]),[]>
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:05 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:05 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:09 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:09 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:09 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:09 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:09 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:09 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:09 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:09 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:09 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:09 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:09 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:09 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:09 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:09 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:09 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:09 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:09 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:09 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:09 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:09 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:09 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:09 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:09 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:09 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:09 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:09 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:09 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:09 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:09 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:09 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:09 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:09 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:09 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:09 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:09 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:09 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:09 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:09 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:09 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:09 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:16 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:16 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:16 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:16 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:16 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:16 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:16 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:16 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:16 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:16 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:16 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:16 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:16 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:16 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:16 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:16 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:16 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:16 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:16 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:16 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:16 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:16 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:16 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:16 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:16 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:16 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:16 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:16 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:16 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:16 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:16 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:16 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:16 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:16 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:16 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:16 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:16 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:16 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:16 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:16 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:22 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:22 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:22 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:22 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:22 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:22 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:22 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:22 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:22 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:22 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:22 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:22 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:22 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:22 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:22 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:22 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:22 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:22 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:22 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:22 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:22 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:22 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:22 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:22 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:22 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:22 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:22 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:22 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:22 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:22 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:22 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:22 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:22 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:22 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:22 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:22 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:22 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:22 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:22 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:22 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]),[]>
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:saveTeam
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:saveTeam
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AdminMapper--->目标方法名为:findAdminId
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 3
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toEntity
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Team(teamId=null, teamName=crw的团队1, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=2020-05-04, status=0, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null)
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:saveTeam
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : InsertMapper--->目标方法名为:insert
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:agree
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=保存成功, data=1),[]>
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=2}, {x=1, y=1}]
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=2}, {x=1, y=1}]
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=2}, {x=1, y=1}]),[]>
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:saveTeam
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:saveTeam
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AdminMapper--->目标方法名为:findAdminId
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 3
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toEntity
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Team(teamId=null, teamName=crw的团队2, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=2020-05-04, status=0, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null)
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:saveTeam
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : InsertMapper--->目标方法名为:insert
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:agree
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=保存成功, data=1),[]>
2020-05-04 04:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByTeamType
2020-05-04 04:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByTeamType
2020-05-04 04:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByTeamType
2020-05-04 04:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)]
2020-05-04 04:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)]
2020-05-04 04:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)]),[]>
2020-05-04 04:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByTeamType
2020-05-04 04:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByTeamType
2020-05-04 04:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByTeamType
2020-05-04 04:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)]
2020-05-04 04:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)]
2020-05-04 04:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)]),[]>
2020-05-04 04:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=2}, {x=1, y=2}]
2020-05-04 04:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=2}, {x=1, y=2}]
2020-05-04 04:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=2}, {x=1, y=2}]),[]>
2020-05-04 04:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:27 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:27 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:27 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:27 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:27 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:27 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:27 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:27 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 04:27 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 04:27 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:27 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:27 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:27 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:27 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=2, startRow=0, endRow=2, total=4, pages=2, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 04:27 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])])
2020-05-04 04:27 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])])),[]>
2020-05-04 04:27 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:27 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:27 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:27 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:27 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:27 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:27 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:27 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:27 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:27 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:27 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:27 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:27 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:27 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:27 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:27 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 04:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]),[]>
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:saveTeam
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:saveTeam
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AdminMapper--->目标方法名为:findAdminId
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 3
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toEntity
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Team(teamId=null, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=广东金融学院, teamNumber=4, teamDate=2020-05-04, status=0, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:saveTeam
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : InsertMapper--->目标方法名为:insert
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:agree
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=保存成功, data=1),[]>
2020-05-04 04:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:32 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:32 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:32 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:32 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=3}, {x=1, y=2}]
2020-05-04 04:32 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=3}, {x=1, y=2}]
2020-05-04 04:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:32 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=3}, {x=1, y=2}]),[]>
2020-05-04 04:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:saveTeam
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:saveTeam
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AdminMapper--->目标方法名为:findAdminId
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 3
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toEntity
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Team(teamId=null, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=校外, teamNumber=4, teamDate=2020-05-04, status=0, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:saveTeam
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : InsertMapper--->目标方法名为:insert
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:agree
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 04:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=保存成功, data=1),[]>
2020-05-04 04:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByteamScope
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]),[]>
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getProTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getProTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getProTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=测试, y=1}]
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=测试, y=1}]
2020-05-04 04:34 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=测试, y=1}]),[]>
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTaskTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTaskTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTaskTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=1, y=1}]
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=1, y=1}]
2020-05-04 04:34 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=1, y=1}]),[]>
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getProTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getProTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getProTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=测试, y=1}]
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=测试, y=1}]
2020-05-04 04:34 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=测试, y=1}]),[]>
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:34 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getJoinTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getJoinTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getJoinTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:34 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:34 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:34 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:34 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getJoinTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getJoinTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getJoinTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]),[]>
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getJoinTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getJoinTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getJoinTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]),[]>
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:35 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:35 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:35 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:35 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]),[]>
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=42, userId=1, userName=crw, teamId=85, teamName=测试团队, isLeader=1)]
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=42, userId=1, userName=crw, teamId=85, teamName=测试团队, isLeader=1)]
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=42, userId=1, userName=crw, teamId=85, teamName=测试团队, isLeader=1)]),[]>
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])),[]>
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-04 04:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]),[]>
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:36 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]),[]>
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-04 04:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-04 04:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-04 04:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-04 04:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-04 04:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-04 04:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]
2020-05-04 04:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 04:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=41, userId=1, userName=crw, teamId=84, teamName=crw的团队3, isLeader=1)]),[]>
2020-05-04 04:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-04 04:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:39 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:39 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:39 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:39 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:39 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:39 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:40 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:40 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:41 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:41 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:41 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:41 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:41 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:41 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:41 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:41 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:41 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:41 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:41 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:41 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:41 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:41 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:41 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:41 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:41 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:41 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:41 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:41 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:41 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:41 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:41 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:41 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 04:41 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 04:41 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 04:41 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:41 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:41 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:41 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:41 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:41 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:41 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:41 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:41 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:41 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:41 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 04:41 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:41 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:41 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 1896 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 99ms. Found 0 JDBC repository interfaces.
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@50504405' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 04:42 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 04:42 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 04:42 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 04:42 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6385 ms
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 04:42:50",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 04:42 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@3689176b
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@5c751d2e
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@59e70ccc
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:configure
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/static/**'], []
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f0caf9d, org.springframework.security.web.context.SecurityContextPersistenceFilter@7dccf5e8, org.springframework.security.web.header.HeaderWriterFilter@5406a828, org.springframework.security.web.authentication.logout.LogoutFilter@7cae6580, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7e35e7e5, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@44cf2cd1, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4e576956, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35c4e9e8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b4c2d7e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@d11c99f, org.springframework.security.web.session.SessionManagementFilter@121e3e6f, org.springframework.security.web.access.ExceptionTranslationFilter@45e23e09, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d635bf2]
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@6ab99a93
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@1f646c70
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$540/1124988132@2cd7bc44
2020-05-04 04:42 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@78e1715a
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@281881b4
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 04:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@1056811b
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 04:42 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 04:42 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 04:42 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 04:42 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 04:42 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 04:42 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 04:43 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 04:43 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 04:43 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 20.993 seconds (JVM running for 25.969)
2020-05-04 04:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 04:43 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 04:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 04:43 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 04:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 37 ms
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 04:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 04:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 04:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 04:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 04:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 04:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 04:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 04:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 04:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 04:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 04:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 04:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 04:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 04:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 04:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 04:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 04:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 04:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 04:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 04:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 04:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 04:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 04:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 27680 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 133ms. Found 0 JDBC repository interfaces.
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4d9f1ed8' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 04:50 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 04:50 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 04:50 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 04:50 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6557 ms
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 04:50:12",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 04:50 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@c139e10
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@693cfae1
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@2cd8967
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:configure
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/static/**'], []
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5fcadb5f, org.springframework.security.web.context.SecurityContextPersistenceFilter@65413e60, org.springframework.security.web.header.HeaderWriterFilter@649b8263, org.springframework.security.web.authentication.logout.LogoutFilter@43c1d81f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4e74d258, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4c13a1f0, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@374424ec, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a2d0b68, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7eaf44e3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13da571, org.springframework.security.web.session.SessionManagementFilter@151a9654, org.springframework.security.web.access.ExceptionTranslationFilter@24b6d19c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4a70484a]
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@1ac124fa
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@40ebac3c
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$540/248132656@401a14f0
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@b6499fd
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@5c5f2927
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@47e36ec
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 04:50 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 04:50 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 04:50 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 04:50 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 04:50 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 04:50 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 04:50 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 20.602 seconds (JVM running for 25.494)
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 04:50 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:52 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 04:52 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 04:52 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 37 ms
2020-05-04 04:52 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 04:52 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 04:52 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@7dfae4ca
2020-05-04 04:52 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 04:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 04:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 04:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:TeamStatusContinue
2020-05-04 04:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:TeamStatusContinue
2020-05-04 04:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:TeamStatusContinue
2020-05-04 04:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 04:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=null),[]>
2020-05-04 05:44 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 17960 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 05:44 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 05:44 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 05:44 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 05:44 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 05:44 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96ms. Found 0 JDBC repository interfaces.
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2c765fed' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 05:45 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 05:45 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 05:45 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 05:45 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6340 ms
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 05:45:04",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 05:45 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@4d7c0b52
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@5d4fe3d2
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@12d6b2ee
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20508c2c, org.springframework.security.web.context.SecurityContextPersistenceFilter@1098aea0, org.springframework.security.web.header.HeaderWriterFilter@5eb8eef0, org.springframework.security.web.authentication.logout.LogoutFilter@25c92cd9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@39ef12ab, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@44809b8c, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7bd8190a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3bfd9e50, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@224122fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70120e40, org.springframework.security.web.session.SessionManagementFilter@45f1afc3, org.springframework.security.web.access.ExceptionTranslationFilter@76ab13a7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e590592]
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@1ef37924
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@3c130f5c
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$540/1662132328@4cb65090
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@3c04d7b9
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@3e5d3e4
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@45251bbb
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 05:45 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 05:45 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 05:45 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 05:45 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 05:45 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 05:45 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 05:45 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.782 seconds (JVM running for 24.594)
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 05:45 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 05:45 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 05:45 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 05:45 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 36 ms
2020-05-04 05:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 05:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 05:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@3a446a70
2020-05-04 05:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 05:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AuthTestController--->目标方法名为:needAdmin
2020-05-04 05:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 需要管理员权限
2020-05-04 05:45 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:45 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AuthTestController--->目标方法名为:needLogin
2020-05-04 05:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 需要登录
2020-05-04 05:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AuthTestController--->目标方法名为:needAdmin
2020-05-04 05:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 需要管理员权限
2020-05-04 05:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AdminController--->目标方法名为:Login
2020-05-04 05:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 管理员
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 29148 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 97ms. Found 0 JDBC repository interfaces.
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@54af93c4' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 05:51 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 05:51 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 05:51 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 05:51 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5874 ms
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 05:51:30",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 05:51 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@75ac1745
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@1b773d13
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@1bc53c7
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c33af20, org.springframework.security.web.context.SecurityContextPersistenceFilter@38b6604d, org.springframework.security.web.header.HeaderWriterFilter@5a442f53, org.springframework.security.web.authentication.logout.LogoutFilter@78be385f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6482b292, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@46d28c6e, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@a47e610, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@40ec06f8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@db6ae70, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58023d2, org.springframework.security.web.session.SessionManagementFilter@664aeea9, org.springframework.security.web.access.ExceptionTranslationFilter@1d25d483, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a09e3a2]
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@1dd9e0d6
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@9a86241
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$540/530500453@489aab56
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@1c8417f0
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@58cda833
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@39d3ae10
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 05:51 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 05:51 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 05:51 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 05:51 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 05:51 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 05:51 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 05:51 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.266 seconds (JVM running for 24.32)
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 05:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 05:52 [http-nio-8888-exec-2] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 05:52 [http-nio-8888-exec-2] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 05:52 [http-nio-8888-exec-2] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 37 ms
2020-05-04 05:53 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 05:53 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 05:53 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@68a78af0
2020-05-04 05:53 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@7c75b2f9
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDI4MzUsImV4cCI6MTU4ODU0NjQzNX0.tFcruD3aaPmUkaenZFaRla_66Uy2BBg10qq3lhCaq5DSxu8w9yHO_s22QqS5fBWFfBU1lx4-RLpFalSDrymYTw
2020-05-04 05:53 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 05:53:57, auth=USER, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDI4MzUsImV4cCI6MTU4ODU0NjQzNX0.tFcruD3aaPmUkaenZFaRla_66Uy2BBg10qq3lhCaq5DSxu8w9yHO_s22QqS5fBWFfBU1lx4-RLpFalSDrymYTw}),[]>
2020-05-04 05:53 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:53 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:53 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 05:53 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 05:53 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 05:53 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 05:53 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 05:53 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 05:53 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:53 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:53 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 05:53 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 05:53 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 05:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:53 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:53 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:53 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 05:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 05:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 05:53 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:53 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:53 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:53 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:53 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 05:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 05:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 05:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 05:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:53 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 05:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:53 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 05:53 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:53 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:53 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@301b2a06
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU0Mjg1NSwiZXhwIjoxNTg4NTQ2NDU1fQ.VEdpmrpSrt8mHqOHdCTSo20cJTt4mBIOM0xVIU0TcNQ_JtHbZN_OtTL7MlKwAeMY2Mpt3KbDXDzAq82-WzqnxA
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 05:54:15, auth=ADMIN, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU0Mjg1NSwiZXhwIjoxNTg4NTQ2NDU1fQ.VEdpmrpSrt8mHqOHdCTSo20cJTt4mBIOM0xVIU0TcNQ_JtHbZN_OtTL7MlKwAeMY2Mpt3KbDXDzAq82-WzqnxA}),[]>
2020-05-04 05:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 05:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 05:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 05:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 05:54 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 05:54 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 05:54 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 05:54 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 05:54 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 05:54 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:54 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 05:54 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:54 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:54 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:54 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:54 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 05:54 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:54 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:54 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:54 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:54 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 05:54 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@4f7a48ce
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDI4NjMsImV4cCI6MTU4ODU0NjQ2M30.yoFGnIZ7c8LUNllrufKkmQk5AdBPjVMNBkYy4lng92XNK6-Dl_v5csOt08Pe0mmsIL1QNba95gUTB8Og6TgN-g
2020-05-04 05:54 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 05:54:23, auth=USER, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDI4NjMsImV4cCI6MTU4ODU0NjQ2M30.yoFGnIZ7c8LUNllrufKkmQk5AdBPjVMNBkYy4lng92XNK6-Dl_v5csOt08Pe0mmsIL1QNba95gUTB8Og6TgN-g}),[]>
2020-05-04 05:54 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 05:54 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 05:54 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 05:54 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 05:54 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 05:54 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 05:54 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 05:54 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 05:54 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 05:54 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:54 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:54 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 05:54 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 05:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 05:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 05:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 05:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 05:54 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 05:54 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:54 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:54 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 05:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:54 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 05:55 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 05:55 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 05:55 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 05:55 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 05:55 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:55 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 05:55 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:55 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 05:55 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 05:55 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 05:55 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 05:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 05:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 05:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 05:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 05:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 05:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 05:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 05:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 05:55 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 05:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:55 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@b7cb5e2
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDI5NTMsImV4cCI6MTU4ODU0NjU1M30.RLl1alKcgylHGlwn3mugGSbNHxEdjmcmlH_fyiY4kYjL6vCxJGZZ2MCUiJurb-3rtk6dtiT_WmhKOxzXsgfKOw
2020-05-04 05:55 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 05:55:53, auth=USER, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDI5NTMsImV4cCI6MTU4ODU0NjU1M30.RLl1alKcgylHGlwn3mugGSbNHxEdjmcmlH_fyiY4kYjL6vCxJGZZ2MCUiJurb-3rtk6dtiT_WmhKOxzXsgfKOw}),[]>
2020-05-04 05:55 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 05:55 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 05:55 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 05:55 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 05:55 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 05:55 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:55 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 05:55 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 05:55 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:55 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 05:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 05:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 05:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@29e2deaf
2020-05-04 05:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 05:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 05:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 05:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTestController--->目标方法名为:getTeams
2020-05-04 05:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 05:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 05:57 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 17784 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 110ms. Found 0 JDBC repository interfaces.
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@78c15bd0' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:01 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:01 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:01 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:01 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6441 ms
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:01:52",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 06:01 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@371eb784
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@69b52140
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@4387af0
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c2941d2, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a949fbf, org.springframework.security.web.header.HeaderWriterFilter@5a932e08, org.springframework.security.web.authentication.logout.LogoutFilter@3a188af4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@46115e16, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fb661d4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2932e037, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6eddb8ec, org.springframework.security.web.session.SessionManagementFilter@2ad5f58e, org.springframework.security.web.access.ExceptionTranslationFilter@10828b67, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6c8c1086]
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@59340c2d
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@2b1e443
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$540/851485537@93ba6fa
2020-05-04 06:01 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@6a99ce3a
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@361ca8ad
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:01 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@57edf3ac
2020-05-04 06:01 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:02 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:02 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:02 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:02 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:02 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:02 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.992 seconds (JVM running for 25.046)
2020-05-04 06:02 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:02 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:02 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:02 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:02 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:02 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:02 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:02 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:02 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 46 ms
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 24004 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126ms. Found 0 JDBC repository interfaces.
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@fc0f1a0' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:02 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:03 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:03 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:03 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:03 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:03 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:03 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6307 ms
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:03:01",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 06:03 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@2e1ce2d8
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@32797a33
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@462078dd
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:03 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@128f9185, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c7da8b7, org.springframework.security.web.header.HeaderWriterFilter@4a73283c, org.springframework.security.web.authentication.logout.LogoutFilter@409bf30b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@741be28e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@24b1389c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@58384a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2022a328, org.springframework.security.web.session.SessionManagementFilter@786ffc86, org.springframework.security.web.access.ExceptionTranslationFilter@4b212c52, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f9a0955]
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@6dca3d7f
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@623f7b01
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$540/2053721004@2df12f9e
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@3efe7d1
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@4af39665
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@75306188
2020-05-04 06:03 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:03 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:03 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:03 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:03 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:03 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:03 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:03 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:03 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:03 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:03 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.03 seconds (JVM running for 24.411)
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:03 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:03 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:03 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:03 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 42 ms
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 26356 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 105ms. Found 0 JDBC repository interfaces.
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@287bd62d' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:04 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:04 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:04 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:04 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6109 ms
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:04:09",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 06:04 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@47a08ed7
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@2bb4d536
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@96ebc18
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2a8270f9, org.springframework.security.web.context.SecurityContextPersistenceFilter@7ebf1bf1, org.springframework.security.web.header.HeaderWriterFilter@338f6d1, org.springframework.security.web.authentication.logout.LogoutFilter@632ff1bc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@229b483b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c1a09f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5eb111e0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4406c392, org.springframework.security.web.session.SessionManagementFilter@531e6efe, org.springframework.security.web.access.ExceptionTranslationFilter@20dfcc60, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a1ecda5]
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@42a766c9
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@63570e66
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$540/1850241066@2d9ff4cc
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@72231ed7
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@73099756
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@14ed10c7
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:04 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:04 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:04 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:04 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:04 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:04 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:04 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 20.558 seconds (JVM running for 25.718)
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:05 [http-nio-8888-exec-2] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:05 [http-nio-8888-exec-2] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:05 [http-nio-8888-exec-2] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 37 ms
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 14944 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 99ms. Found 0 JDBC repository interfaces.
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@550229bf' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:05 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:05 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:05 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:05 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:05 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5934 ms
2020-05-04 06:05 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:05 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:05 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:05 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:05 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:05 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:05:58",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:05 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 06:05 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 06:06 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@4a493894
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@515b7a58
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@2a296e95
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@549237ad, org.springframework.security.web.context.SecurityContextPersistenceFilter@55ebe43d, org.springframework.security.web.header.HeaderWriterFilter@4dec55, org.springframework.security.web.authentication.logout.LogoutFilter@6d4e9558, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@a9af1d2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@331121fc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78508386, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5709206e, org.springframework.security.web.session.SessionManagementFilter@73316b32, org.springframework.security.web.access.ExceptionTranslationFilter@504bb64b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7531758e]
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@6a682753
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@291313c9
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$540/47396701@748f725f
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@7d950ca8
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@60cc403
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@32ad1775
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:06 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:06 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:06 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:06 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:06 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:06 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 18.485 seconds (JVM running for 22.692)
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:06 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:06 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:06 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 42 ms
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 31140 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117ms. Found 0 JDBC repository interfaces.
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7801e846' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:06 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:06 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:06 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:06 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:06 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6146 ms
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:06 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:06:59",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 06:07 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@52d30420
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@56564a49
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@2d61516b
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:07 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fe3f7f5, org.springframework.security.web.context.SecurityContextPersistenceFilter@1c67cece, org.springframework.security.web.header.HeaderWriterFilter@5cfb01d6, org.springframework.security.web.authentication.logout.LogoutFilter@1477a690, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6a24e316, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30bef60d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4bba3667, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17d5831a, org.springframework.security.web.session.SessionManagementFilter@4f22fc44, org.springframework.security.web.access.ExceptionTranslationFilter@270c76ad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a77a4aa]
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@10ce04f
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@457a16d5
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$540/64186691@40592789
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@40277ad1
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@70c571a2
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@64001e54
2020-05-04 06:07 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:07 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:07 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:07 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:07 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:07 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:07 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:07 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:07 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:07 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:07 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 18.905 seconds (JVM running for 24.042)
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:07 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:07 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:07 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:07 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 41 ms
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 25080 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 104ms. Found 0 JDBC repository interfaces.
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3cc940d8' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:08 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:08 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:08 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:08 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6520 ms
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:08:23",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 06:08 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@477cc966
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@6d60c54f
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@496eeca5
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@434ada37, org.springframework.security.web.context.SecurityContextPersistenceFilter@5707902c, org.springframework.security.web.header.HeaderWriterFilter@339e4b1d, org.springframework.security.web.authentication.logout.LogoutFilter@2f74d466, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@43bcfbe7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57293b5e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1de695a6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c24bd6f, org.springframework.security.web.session.SessionManagementFilter@85b57e2, org.springframework.security.web.access.ExceptionTranslationFilter@327bb53c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f3d0874]
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@4d8a5fd7
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@21be22ee
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$541/528376752@7bc1980a
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@11e2aee0
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@2f741470
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@ab95997
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:08 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:08 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:08 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:08 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:08 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:08 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:08 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.175 seconds (JVM running for 22.899)
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:08 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:08 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:08 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:08 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 34 ms
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 28256 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113ms. Found 0 JDBC repository interfaces.
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3ee105cd' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:09 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:10 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:10 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:10 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:10 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:10 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:10 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6139 ms
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:10:01",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 06:10 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@de74ab4
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@34b5934e
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@141be66f
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:10 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@250e928f, org.springframework.security.web.context.SecurityContextPersistenceFilter@3dee7ce6, org.springframework.security.web.header.HeaderWriterFilter@5a557e7, org.springframework.security.web.authentication.logout.LogoutFilter@327503e3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@67e33c54, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@259006bb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f305b33, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b1c7baf, org.springframework.security.web.session.SessionManagementFilter@450decf8, org.springframework.security.web.access.ExceptionTranslationFilter@69db22da, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6285ac7f]
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@7cb53bb5
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@12b6c1d0
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$541/747094008@5d59edc5
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@4cfe6e2e
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@74528fd4
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@51368054
2020-05-04 06:10 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:10 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:10 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:10 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:10 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:10 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:10 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:10 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:10 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:10 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:10 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.282 seconds (JVM running for 23.884)
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:10 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:10 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:10 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:10 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 40 ms
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 7296 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 107ms. Found 0 JDBC repository interfaces.
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2963ef64' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:11 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:11 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:11 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:11 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:11 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6069 ms
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:11:54",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 06:11 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@768efa7d
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@213c745a
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@75682f9a
2020-05-04 06:11 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:12 [restartedMain] [WARN]  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558)ev  el org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
2020-05-04 06:12 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1385)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2020-05-04 06:12 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextDestroyed
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:updateWebNum
2020-05-04 06:12 [restartedMain] [ERROR]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Exception sending context destroyed event to listener instance of class [crw.bishe.team.listener.VisitorContextListener$$EnhancerBySpringCGLIB$$e364dfe2]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:00 CST 2020
### The error may exist in crw/bishe/team/mapper/ProjectMapper.java (best guess)
### The error may involve crw.bishe.team.mapper.ProjectMapper.updateWebNum
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:00 CST 2020
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy121.selectOne(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy135.updateWebNum(Unknown Source) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.sun.proxy.$Proxy136.updateWebNum(Unknown Source) ~[?:?]
	at crw.bishe.team.listener.VisitorContextListener.contextDestroyed(VisitorContextListener.java:43) ~[classes/:?]
	at crw.bishe.team.listener.VisitorContextListener$$FastClassBySpringCGLIB$$6afbb7c9.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.listener.VisitorContextListener$$EnhancerBySpringCGLIB$$e364dfe2.contextDestroyed(<generated>) ~[classes/:?]
	at org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:4730) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5396) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:257) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StopChild.call(ContainerBase.java:1400) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StopChild.call(ContainerBase.java:1389) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) [?:1.8.0_121]
	at org.apache.catalina.core.ContainerBase.stopInternal(ContainerBase.java:976) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:257) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StopChild.call(ContainerBase.java:1400) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StopChild.call(ContainerBase.java:1389) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) [?:1.8.0_121]
	at org.apache.catalina.core.ContainerBase.stopInternal(ContainerBase.java:976) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:257) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardService.stopInternal(StandardService.java:473) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:257) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardServer.stopInternal(StandardServer.java:992) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:257) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.startup.Tomcat.stop(Tomcat.java:469) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stopTomcat(TomcatWebServer.java:269) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:324) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:306) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at crw.bishe.team.TeamApplication.main(TeamApplication.java:19) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.1.RELEASE.jar:2.2.1.RELEASE]
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:00 CST 2020
### The error may exist in crw/bishe/team/mapper/ProjectMapper.java (best guess)
### The error may involve crw.bishe.team.mapper.ProjectMapper.updateWebNum
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:00 CST 2020
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	... 74 more
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:00 CST 2020
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82) ~[spring-jdbc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	... 74 more
Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:00 CST 2020
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1057) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:960) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4544) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.logging.LogFilter.dataSource_getConnection(LogFilter.java:827) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4540) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.FilterAdapter.dataSource_getConnection(FilterAdapter.java:2723) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4540) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:661) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4540) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:938) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:930) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:102) ~[druid-1.0.12.jar:1.0.12]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158) ~[spring-jdbc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116) ~[spring-jdbc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79) ~[spring-jdbc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	... 74 more
2020-05-04 06:12 [restartedMain] [WARN]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43)
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)ev  el org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-05-04 06:12 [restartedMain] [ERROR]  org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826)ev  el org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at crw.bishe.team.TeamApplication.main(TeamApplication.java:19) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.1.RELEASE.jar:2.2.1.RELEASE]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 26 more
Caused by: java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.util.Assert.isTrue(Assert.java:136) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setDefaultFailureUrl(SimpleUrlAuthenticationFailureHandler.java:126) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.<init>(SimpleUrlAuthenticationFailureHandler.java:61) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.failureUrl(AbstractAuthenticationFilterConfigurer.java:216) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.updateAuthenticationDefaults(AbstractAuthenticationFilterConfigurer.java:405) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.loginPage(AbstractAuthenticationFilterConfigurer.java:327) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer.loginPage(FormLoginConfigurer.java:183) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at crw.bishe.team.config.SecurityConfig.configure(SecurityConfig.java:68) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at crw.bishe.team.config.SecurityConfig$$EnhancerBySpringCGLIB$$d135091d.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$$FastClassBySpringCGLIB$$432a6c3b.invoke(<generated>) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.config.SecurityConfig$$EnhancerBySpringCGLIB$$e452ed1a.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 26 more
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 14028 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 104ms. Found 0 JDBC repository interfaces.
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2905bf68' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:12 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:12 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:12 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:12 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6152 ms
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:12:42",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-05-04 06:12 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@2b9d22b3
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@1897b80a
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@4070db11
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:12 [restartedMain] [WARN]  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558)ev  el org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
2020-05-04 06:12 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1385)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2020-05-04 06:12 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextDestroyed
2020-05-04 06:12 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:updateWebNum
2020-05-04 06:12 [restartedMain] [ERROR]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Exception sending context destroyed event to listener instance of class [crw.bishe.team.listener.VisitorContextListener$$EnhancerBySpringCGLIB$$a7d144a9]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:48 CST 2020
### The error may exist in crw/bishe/team/mapper/ProjectMapper.java (best guess)
### The error may involve crw.bishe.team.mapper.ProjectMapper.updateWebNum
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:48 CST 2020
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy121.selectOne(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy135.updateWebNum(Unknown Source) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.sun.proxy.$Proxy136.updateWebNum(Unknown Source) ~[?:?]
	at crw.bishe.team.listener.VisitorContextListener.contextDestroyed(VisitorContextListener.java:43) ~[classes/:?]
	at crw.bishe.team.listener.VisitorContextListener$$FastClassBySpringCGLIB$$6afbb7c9.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.listener.VisitorContextListener$$EnhancerBySpringCGLIB$$a7d144a9.contextDestroyed(<generated>) ~[classes/:?]
	at org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:4730) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5396) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:257) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StopChild.call(ContainerBase.java:1400) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StopChild.call(ContainerBase.java:1389) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) [?:1.8.0_121]
	at org.apache.catalina.core.ContainerBase.stopInternal(ContainerBase.java:976) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:257) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StopChild.call(ContainerBase.java:1400) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StopChild.call(ContainerBase.java:1389) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) [?:1.8.0_121]
	at org.apache.catalina.core.ContainerBase.stopInternal(ContainerBase.java:976) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:257) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardService.stopInternal(StandardService.java:473) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:257) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardServer.stopInternal(StandardServer.java:992) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:257) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.startup.Tomcat.stop(Tomcat.java:469) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stopTomcat(TomcatWebServer.java:269) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:324) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:306) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at crw.bishe.team.TeamApplication.main(TeamApplication.java:19) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.1.RELEASE.jar:2.2.1.RELEASE]
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:48 CST 2020
### The error may exist in crw/bishe/team/mapper/ProjectMapper.java (best guess)
### The error may involve crw.bishe.team.mapper.ProjectMapper.updateWebNum
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:48 CST 2020
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	... 74 more
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:48 CST 2020
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82) ~[spring-jdbc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	... 74 more
Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Mon May 04 06:12:48 CST 2020
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1057) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:960) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4544) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.logging.LogFilter.dataSource_getConnection(LogFilter.java:827) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4540) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.FilterAdapter.dataSource_getConnection(FilterAdapter.java:2723) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4540) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:661) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4540) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:938) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:930) ~[druid-1.0.12.jar:1.0.12]
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:102) ~[druid-1.0.12.jar:1.0.12]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158) ~[spring-jdbc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116) ~[spring-jdbc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79) ~[spring-jdbc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	... 74 more
2020-05-04 06:12 [restartedMain] [WARN]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43)
2020-05-04 06:12 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)ev  el org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-05-04 06:12 [restartedMain] [ERROR]  org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826)ev  el org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at crw.bishe.team.TeamApplication.main(TeamApplication.java:19) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.1.RELEASE.jar:2.2.1.RELEASE]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 26 more
Caused by: java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.util.Assert.isTrue(Assert.java:136) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setDefaultFailureUrl(SimpleUrlAuthenticationFailureHandler.java:126) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.<init>(SimpleUrlAuthenticationFailureHandler.java:61) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.failureUrl(AbstractAuthenticationFilterConfigurer.java:216) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.updateAuthenticationDefaults(AbstractAuthenticationFilterConfigurer.java:405) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.loginPage(AbstractAuthenticationFilterConfigurer.java:327) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer.loginPage(FormLoginConfigurer.java:183) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at crw.bishe.team.config.SecurityConfig.configure(SecurityConfig.java:68) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at crw.bishe.team.config.SecurityConfig$$EnhancerBySpringCGLIB$$1de34fa0.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$$FastClassBySpringCGLIB$$432a6c3b.invoke(<generated>) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.config.SecurityConfig$$EnhancerBySpringCGLIB$$a8bf51e1.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 26 more
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 17048 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113ms. Found 0 JDBC repository interfaces.
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7630f9e4' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:16 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:16 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:16 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:16 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:16 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5990 ms
2020-05-04 06:16 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:16 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:16 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:16 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:16 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:16 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:16:57",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@568d2e10
2020-05-04 06:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@6df215d9
2020-05-04 06:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@5c4cd6f8
2020-05-04 06:17 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:17 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:17 [restartedMain] [WARN]  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558)ev  el org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
2020-05-04 06:17 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-05-04 06:17 [restartedMain] [WARN]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43)
2020-05-04 06:17 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)ev  el org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-05-04 06:17 [restartedMain] [ERROR]  org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826)ev  el org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at crw.bishe.team.TeamApplication.main(TeamApplication.java:19) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.1.RELEASE.jar:2.2.1.RELEASE]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 26 more
Caused by: java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.util.Assert.isTrue(Assert.java:136) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setDefaultFailureUrl(SimpleUrlAuthenticationFailureHandler.java:126) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.<init>(SimpleUrlAuthenticationFailureHandler.java:61) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.failureUrl(AbstractAuthenticationFilterConfigurer.java:216) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.updateAuthenticationDefaults(AbstractAuthenticationFilterConfigurer.java:405) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.loginPage(AbstractAuthenticationFilterConfigurer.java:327) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer.loginPage(FormLoginConfigurer.java:183) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at crw.bishe.team.config.SecurityConfig.configure(SecurityConfig.java:68) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at crw.bishe.team.config.SecurityConfig$$EnhancerBySpringCGLIB$$14a1e64c.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$$FastClassBySpringCGLIB$$432a6c3b.invoke(<generated>) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.config.SecurityConfig$$EnhancerBySpringCGLIB$$e29cede9.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 26 more
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 22868 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 110ms. Found 0 JDBC repository interfaces.
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@14ce6b56' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:19 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:19 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:19 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:19 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6458 ms
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:19:48",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@794a3f0c
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@5f260490
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@7b7cc366
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:19 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:19 [restartedMain] [WARN]  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558)ev  el org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
2020-05-04 06:19 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-05-04 06:19 [restartedMain] [WARN]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43)
2020-05-04 06:19 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)ev  el org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-05-04 06:19 [restartedMain] [ERROR]  org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826)ev  el org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at crw.bishe.team.TeamApplication.main(TeamApplication.java:19) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.1.RELEASE.jar:2.2.1.RELEASE]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 26 more
Caused by: java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.util.Assert.isTrue(Assert.java:136) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setDefaultFailureUrl(SimpleUrlAuthenticationFailureHandler.java:126) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.<init>(SimpleUrlAuthenticationFailureHandler.java:61) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.failureUrl(AbstractAuthenticationFilterConfigurer.java:216) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.updateAuthenticationDefaults(AbstractAuthenticationFilterConfigurer.java:405) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.loginPage(AbstractAuthenticationFilterConfigurer.java:327) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer.loginPage(FormLoginConfigurer.java:183) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at crw.bishe.team.config.SecurityConfig.configure(SecurityConfig.java:68) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at crw.bishe.team.config.SecurityConfig$$EnhancerBySpringCGLIB$$5e77a9ea.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$$FastClassBySpringCGLIB$$432a6c3b.invoke(<generated>) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.config.SecurityConfig$$EnhancerBySpringCGLIB$$b8ca1fdb.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 26 more
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 29876 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 105ms. Found 0 JDBC repository interfaces.
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5b8aaec9' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:22 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:22 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:22 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:22 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6116 ms
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:22:27",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@96830aa
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@3e60bffa
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@2f02a88e
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:22 [restartedMain] [WARN]  org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:558)ev  el org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
2020-05-04 06:22 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2020-05-04 06:22 [restartedMain] [WARN]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)ev  el org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-05-04 06:22 [restartedMain] [ERROR]  org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:826)ev  el org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at crw.bishe.team.TeamApplication.main(TeamApplication.java:19) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.1.RELEASE.jar:2.2.1.RELEASE]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 26 more
Caused by: java.lang.IllegalArgumentException: 'localhost:4200/#/passport/login?error' is not a valid redirect URL
	at org.springframework.util.Assert.isTrue(Assert.java:136) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setDefaultFailureUrl(SimpleUrlAuthenticationFailureHandler.java:126) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.<init>(SimpleUrlAuthenticationFailureHandler.java:61) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.failureUrl(AbstractAuthenticationFilterConfigurer.java:216) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.updateAuthenticationDefaults(AbstractAuthenticationFilterConfigurer.java:405) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer.loginPage(AbstractAuthenticationFilterConfigurer.java:327) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer.loginPage(FormLoginConfigurer.java:183) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at crw.bishe.team.config.SecurityConfig.configure(SecurityConfig.java:68) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.getHttp(WebSecurityConfigurerAdapter.java:231) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:322) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter.init(WebSecurityConfigurerAdapter.java:92) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at crw.bishe.team.config.SecurityConfig$$EnhancerBySpringCGLIB$$ba7794f.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$$FastClassBySpringCGLIB$$432a6c3b.invoke(<generated>) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.config.SecurityConfig$$EnhancerBySpringCGLIB$$4dc849d4.init(<generated>) ~[classes/:?]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:370) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:324) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104) ~[spring-security-config-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 26 more
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 30896 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113ms. Found 0 JDBC repository interfaces.
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@e03bda4' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:22 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:22 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:22 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:22 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:22 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6125 ms
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:22 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:22:57",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@7095376b
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@396c1bfc
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@2395b530
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:23 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@357c3027, org.springframework.security.web.context.SecurityContextPersistenceFilter@4af2992b, org.springframework.security.web.header.HeaderWriterFilter@6b3761d0, org.springframework.security.web.authentication.logout.LogoutFilter@4a94c18b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@27a5efe2, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@3588157, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@34164abe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72b84af3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@483ee429, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7dfbe7fa, org.springframework.security.web.session.SessionManagementFilter@315b7aea, org.springframework.security.web.access.ExceptionTranslationFilter@6e7c90e4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d98b013]
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@350fd49d
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@26e22b75
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1977309245@3f9b88dd
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@fbb47ed
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@316189a1
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@6ab71785
2020-05-04 06:23 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:23 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:23 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:23 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:23 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:23 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:23 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:23 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:23 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:23 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:23 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 18.255 seconds (JVM running for 23.219)
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:23 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:23 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:23 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:23 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 36 ms
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 15620 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 104ms. Found 0 JDBC repository interfaces.
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@13e1da52' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:24 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:24 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:24 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:24 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6129 ms
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:24:27",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@792f9ab8
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@7df63e61
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@43dd33bd
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f1a44f3, org.springframework.security.web.context.SecurityContextPersistenceFilter@57860c20, org.springframework.security.web.header.HeaderWriterFilter@7786fbc1, org.springframework.security.web.authentication.logout.LogoutFilter@22516eb1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6007bb2f, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@370ec39b, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@16840d49, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@16610b11, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e9245e0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d49288b, org.springframework.security.web.session.SessionManagementFilter@edc9afe, org.springframework.security.web.access.ExceptionTranslationFilter@41831381, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d04ccd5]
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@6feaf3f2
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@7187470a
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1105679977@3e907b85
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@546b3892
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@5079fb05
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@115e3906
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:24 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:24 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:24 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:24 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:24 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:24 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:24 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 18.443 seconds (JVM running for 23.24)
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:24 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:25 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:25 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:25 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 39 ms
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@490cc463
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTestController--->目标方法名为:getTeams
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:findAll
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:findAll
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [Team(teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=gaw, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Sun May 03 00:00:00 CST 2020, status=1, staff=gwa, teamNature=faeg , teamLabel=aeg, seeNum=0, projects=null), Team(teamId=85, teamName=测试团队, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=我, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无
, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=广东金融学院, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null), Team(teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=校外, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)]
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null)
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null)
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)]
2020-05-04 06:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=处理成功, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)]),[]>
2020-05-04 06:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TestController--->目标方法名为:fail
2020-05-04 06:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 登录测试，需要登录才能访问
2020-05-04 06:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:26 [http-nio-8888-exec-3] [WARN]  org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:199)ev  el org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation]
2020-05-04 06:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AuthTestController--->目标方法名为:needLogin
2020-05-04 06:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 需要登录
2020-05-04 06:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AuthTestController--->目标方法名为:needUser
2020-05-04 06:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 需要用户权限
2020-05-04 06:33 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 30160 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:33 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:33 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:33 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:33 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:33 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:33 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:33 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114ms. Found 0 JDBC repository interfaces.
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5c0245d8' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:34 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:34 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:34 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:34 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5767 ms
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:34:03",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@15267c9d
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@4f47be53
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@4a31ff4d
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@305e69b3, org.springframework.security.web.context.SecurityContextPersistenceFilter@2ff2b20c, org.springframework.security.web.header.HeaderWriterFilter@7cb45a70, org.springframework.security.web.authentication.logout.LogoutFilter@1563d0b2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@621af7dd, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@797cc777, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@3c8fc0b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58aaee, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2793baff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d41b445, org.springframework.security.web.session.SessionManagementFilter@5d9eb5a3, org.springframework.security.web.access.ExceptionTranslationFilter@3a3b8d5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@43eb7bb6]
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@bfcd1a5
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@222bad17
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1064461971@7ab56ace
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@ce58945
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@485ce2b8
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@1de97808
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:34 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:34 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:34 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:34 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:34 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:34 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:34 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 18.231 seconds (JVM running for 22.419)
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:34 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 9796 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 90ms. Found 0 JDBC repository interfaces.
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@207ffb61' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:37 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:37 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:37 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:37 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6063 ms
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:37:17",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@24a356bc
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@4d6b46f8
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@7cf75eb7
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c9e0d7, org.springframework.security.web.context.SecurityContextPersistenceFilter@36568246, org.springframework.security.web.header.HeaderWriterFilter@7a78e0c9, org.springframework.security.web.authentication.logout.LogoutFilter@65debe44, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3383779b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41daa51f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d841b18, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a3429da, org.springframework.security.web.session.SessionManagementFilter@4a0f447a, org.springframework.security.web.access.ExceptionTranslationFilter@395f2fe4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1dfff5ea]
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@2fae1537
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@b999632
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1427863794@3d1569e2
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@71572a13
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@607427c7
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@1a7601ad
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:37 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:37 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:37 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:37 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:37 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:37 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:37 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 18.283 seconds (JVM running for 23.253)
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:37 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:37 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:37 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:37 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 45 ms
2020-05-04 06:37 [http-nio-8888-exec-2] [WARN]  org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:199)ev  el org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2020-05-04 06:38 [http-nio-8888-exec-5] [WARN]  org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:199)ev  el org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2020-05-04 06:39 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 31000 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:39 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:39 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:39 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:39 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:39 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 100ms. Found 0 JDBC repository interfaces.
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6dcd02db' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:40 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:40 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:40 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:40 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6604 ms
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:40:06",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@64779196
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@1f0b619f
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@45faae8a
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@418ebcae, org.springframework.security.web.context.SecurityContextPersistenceFilter@9044d45, org.springframework.security.web.header.HeaderWriterFilter@f817045, org.springframework.security.web.authentication.logout.LogoutFilter@325616ad, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5baeeae7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d65b3ed, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ad981f3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38420b43, org.springframework.security.web.session.SessionManagementFilter@2726451f, org.springframework.security.web.access.ExceptionTranslationFilter@341aacd5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5919b8f0]
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@227c94e0
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@6f22413e
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1737708681@3bb85a1f
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@30c1eca1
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@2ca57cdf
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@535059f2
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:40 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:40 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:40 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:40 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:40 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:40 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:40 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 18.832 seconds (JVM running for 23.474)
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:41 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:41 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:41 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 80 ms
2020-05-04 06:41 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:41 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:41 [http-nio-8888-exec-2] [WARN]  org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:199)ev  el org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<crw.bishe.team.vo.Result> crw.bishe.team.controller.token.TokenController.getToken(crw.bishe.team.dto.UserRolesDto,javax.servlet.http.HttpServletRequest)]
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 26188 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117ms. Found 0 JDBC repository interfaces.
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@58b5123f' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:42 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:42 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:42 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:42 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6403 ms
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:42:41",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@5fccdb57
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@196a56f2
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@81285d3
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12a5f008, org.springframework.security.web.context.SecurityContextPersistenceFilter@39af3090, org.springframework.security.web.header.HeaderWriterFilter@2001f8f0, org.springframework.security.web.authentication.logout.LogoutFilter@45c6c30, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@762ce595, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e316d95, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@475dbf83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78e84b34, org.springframework.security.web.session.SessionManagementFilter@518af3d4, org.springframework.security.web.access.ExceptionTranslationFilter@6957fadc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f2df023]
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@395179e3
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@23ab5fcc
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1179615270@71444f6d
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@22fe0c77
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@7757855a
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@4f06d8ef
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:42 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:42 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:42 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:42 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:42 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:42 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:42 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 18.175 seconds (JVM running for 23.297)
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:42 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:43 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:43 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:43 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 39 ms
2020-05-04 06:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:43 [http-nio-8888-exec-2] [WARN]  org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:199)ev  el org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required UserRolesDto parameter 'userRolesDto' is not present]
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 24416 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 153ms. Found 0 JDBC repository interfaces.
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@647a46fe' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:43 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:43 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:43 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:43 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6617 ms
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:43:41",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@3d34dee5
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@466bcf6b
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@1cce3d85
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3cb9683a, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a1fc35b, org.springframework.security.web.header.HeaderWriterFilter@32f6f6e5, org.springframework.security.web.authentication.logout.LogoutFilter@47c697cd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6c8de98d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@89a9d07, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e318d05, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55e53a76, org.springframework.security.web.session.SessionManagementFilter@57a67f31, org.springframework.security.web.access.ExceptionTranslationFilter@57c0136e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@14b0a2ee]
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@552f0034
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@18e58548
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1394348812@731b806c
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@18c76ecb
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@1cb4bcd4
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@52d22416
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:43 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:43 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:43 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:43 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:43 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:43 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:43 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.109 seconds (JVM running for 24.184)
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:43 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:44 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:44 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:44 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 36 ms
2020-05-04 06:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 06:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 06:44 [http-nio-8888-exec-1] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:44 [http-nio-8888-exec-1] [ERROR]  org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)ev  el org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter - An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: UserDetailsService returned null, which is an interface contract violation
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:110) ~[spring-security-core-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144) ~[spring-security-core-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175) ~[spring-security-core-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:195) ~[spring-security-core-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:95) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2020-05-04 06:44 [http-nio-8888-exec-2] [WARN]  org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:199)ev  el org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 17212 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 128ms. Found 0 JDBC repository interfaces.
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@ba53ed0' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:49 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:49 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:49 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:49 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6405 ms
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:49:42",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@244e998a
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@1a2464d4
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@2293f751
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c28cc30, org.springframework.security.web.context.SecurityContextPersistenceFilter@13e54803, org.springframework.security.web.header.HeaderWriterFilter@57fe4e0f, org.springframework.security.web.authentication.logout.LogoutFilter@6f8b992d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@105c4178, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@617284f4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@194f3843, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61612ea5, org.springframework.security.web.session.SessionManagementFilter@4ce4e28b, org.springframework.security.web.access.ExceptionTranslationFilter@1f2ebc32, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3a9af812]
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@78b87259
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@4fce1a9a
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/762126274@79f814db
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@2b79dea7
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@5292ac4a
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@855fa22
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:49 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:49 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:49 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:49 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:49 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:49 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:49 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.478 seconds (JVM running for 24.584)
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:49 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:50 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:50 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:50 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 39 ms
2020-05-04 06:50 [http-nio-8888-exec-1] [WARN]  org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:199)ev  el org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@1d80cb43
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDYyMjksImV4cCI6MTU4ODU0OTgyOX0.RfYjQH66u59vDXuxkqpYGwdwJBCERWZBXcbDR-9k_Hf-qp62C65UpV4vPJvzUIv9TjayjlWq5mKvoX2eKaARhw
2020-05-04 06:50 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 06:50:30, auth=USER, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDYyMjksImV4cCI6MTU4ODU0OTgyOX0.RfYjQH66u59vDXuxkqpYGwdwJBCERWZBXcbDR-9k_Hf-qp62C65UpV4vPJvzUIv9TjayjlWq5mKvoX2eKaARhw}),[]>
2020-05-04 06:50 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:50 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:50 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:50 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:50 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 06:50 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 06:50 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 06:50 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 06:50 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 06:50 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 06:50 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 06:50 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 06:50 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 06:50 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:50 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:50 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 06:50 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:50 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:50 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:50 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:50 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 06:50 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 06:50 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:50 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:50 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 06:50 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 06:50 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 06:50 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 06:50 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 06:50 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 06:50 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 06:50 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 06:50 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 06:50 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 06:50 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 06:50 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 06:50 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 06:50 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:50 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:50 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 20164 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 100ms. Found 0 JDBC repository interfaces.
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7fb0dfdf' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:51 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:51 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:51 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:51 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6167 ms
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:51:12",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@732ab809
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@1c6cb003
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@544544cf
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e75002e, org.springframework.security.web.context.SecurityContextPersistenceFilter@6e9f3aca, org.springframework.security.web.header.HeaderWriterFilter@24f8a4b3, org.springframework.security.web.authentication.logout.LogoutFilter@eac8504, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@75cd6122, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3176f64d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37e4772, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ceb425c, org.springframework.security.web.session.SessionManagementFilter@2365ae82, org.springframework.security.web.access.ExceptionTranslationFilter@4770f198, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5e148b15]
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@3e49b304
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@7239a64
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1510050679@2dd01398
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@1bb314fd
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@671a2fba
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@5379363
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:51 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:51 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:51 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:51 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:51 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:51 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:51 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.023 seconds (JVM running for 23.173)
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:51 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 36 ms
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@65907ba9
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU0NjI4OSwiZXhwIjoxNTg4NTQ5ODg5fQ.wM5a6K6Ky5POSxJmP9OMLEYYaIhADSlTYZ4ajiDdhWDHmHXSYYDVkonMcYMsI0itlsi1VOZ8MJFMDSb3ooJ_iA
2020-05-04 06:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 06:51:30, auth=ADMIN, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU0NjI4OSwiZXhwIjoxNTg4NTQ5ODg5fQ.wM5a6K6Ky5POSxJmP9OMLEYYaIhADSlTYZ4ajiDdhWDHmHXSYYDVkonMcYMsI0itlsi1VOZ8MJFMDSb3ooJ_iA}),[]>
2020-05-04 06:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 06:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 06:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 06:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 06:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 06:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 06:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 06:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 06:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 06:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 06:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 06:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 06:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 06:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 06:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 06:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 06:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 06:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 06:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 06:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamAnalysis
2020-05-04 06:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamAnalysis
2020-05-04 06:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamAnalysis
2020-05-04 06:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 06:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 06:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 06:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 06:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamAnalysis
2020-05-04 06:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamAnalysis
2020-05-04 06:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamAnalysis
2020-05-04 06:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 06:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 06:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 06:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 06:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 06:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 06:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamAnalysis
2020-05-04 06:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamAnalysis
2020-05-04 06:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamAnalysis
2020-05-04 06:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 06:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 06:56 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 06:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 06:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 06:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 06:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:56 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 06:56 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:56 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:56 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamAnalysis
2020-05-04 06:56 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamAnalysis
2020-05-04 06:56 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamAnalysis
2020-05-04 06:56 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 06:56 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 06:56 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 06:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 06:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 06:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 06:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 06:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 06:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 06:56 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 7044 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 104ms. Found 0 JDBC repository interfaces.
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@17c7b93d' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:58 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:58 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:58 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:58 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:58 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:58 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6382 ms
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:58:01",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@118f3451
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@1d6fdea1
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@4c312a9f
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:58 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f5fb8b5, org.springframework.security.web.context.SecurityContextPersistenceFilter@dad8e72, org.springframework.security.web.header.HeaderWriterFilter@37a7b76a, org.springframework.security.web.authentication.logout.LogoutFilter@513e6bba, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2cb59973, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1fa0ffcc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@191d7794, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20c82d0e, org.springframework.security.web.session.SessionManagementFilter@677f96a2, org.springframework.security.web.access.ExceptionTranslationFilter@2180fca1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@51ca0166]
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@59f76759
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@22ed6b5b
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1904261203@5feda8e
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@846ce43
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@11ddc758
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@61c86a83
2020-05-04 06:58 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:58 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:58 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:58 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:58 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:58 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:58 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:58 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:58 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:58 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:58 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 18.084 seconds (JVM running for 22.581)
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:58 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:58 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 06:58 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 06:58 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 40 ms
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 21388 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115ms. Found 0 JDBC repository interfaces.
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2d8b50f' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:59 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:59 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:59 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:59 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6352 ms
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:59:22",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@afd0ec7
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@36d7071f
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@76a65d33
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15abb275, org.springframework.security.web.context.SecurityContextPersistenceFilter@77c25d22, org.springframework.security.web.header.HeaderWriterFilter@638c3e1f, org.springframework.security.web.authentication.logout.LogoutFilter@4f7c0160, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@208228e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c78f58f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6dff7571, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24da1166, org.springframework.security.web.session.SessionManagementFilter@63324712, org.springframework.security.web.access.ExceptionTranslationFilter@543d0af9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1a2bac7c]
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@131ba16a
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@7800e1f2
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1380519322@24f6ee9a
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@a87e26e
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@5d3e71c
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@35488d28
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 06:59 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 06:59 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 06:59 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 06:59 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 06:59 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 06:59 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 20.023 seconds (JVM running for 24.613)
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 10924 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124ms. Found 0 JDBC repository interfaces.
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@538f020c' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 06:59 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 06:59 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 06:59 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 06:59 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 06:59 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6022 ms
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 06:59 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 06:59:59",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@77d62518
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@2d1d3b90
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@552ba23c
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 07:00 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@641e9f27, org.springframework.security.web.context.SecurityContextPersistenceFilter@53ac9a59, org.springframework.security.web.header.HeaderWriterFilter@37e0c904, org.springframework.security.web.authentication.logout.LogoutFilter@47ac794d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2da603a2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76bd4151, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@470fa8fd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@235a9594, org.springframework.security.web.session.SessionManagementFilter@3c425fcd, org.springframework.security.web.access.ExceptionTranslationFilter@6d358fbd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@65c4a19e]
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@3ed53d21
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@2c33c5de
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1510594450@5a3990d3
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@38e1875f
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@54bcdb3d
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@552977ad
2020-05-04 07:00 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 07:00 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 07:00 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 07:00 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 07:00 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 07:00 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 07:00 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 07:00 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 07:00 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 07:00 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 07:00 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 17.718 seconds (JVM running for 22.709)
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 07:00 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 38 ms
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@66ee2970
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU0OTQ0MywiZXhwIjoxNTg4NTUzMDQzfQ.GIPuXhQ2sHlkCf-xo3wD-IrsWqizhqpLRfbJijoUrqr5TVRKIBNjgOO2o58dO2JVA4piP0Qpindrv3nJE9mwNg
2020-05-04 07:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 07:44:04, auth=ADMIN, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU0OTQ0MywiZXhwIjoxNTg4NTUzMDQzfQ.GIPuXhQ2sHlkCf-xo3wD-IrsWqizhqpLRfbJijoUrqr5TVRKIBNjgOO2o58dO2JVA4piP0Qpindrv3nJE9mwNg}),[]>
2020-05-04 07:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 07:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 07:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 07:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 07:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 07:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 07:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 07:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 07:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 07:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 07:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 07:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 07:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 07:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@5b2f6e6a
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU0OTUyNCwiZXhwIjoxNTg4NTUzMTI0fQ.qpkfCWTUwQfJHz8lZVcoRdjG0gdwvm20aEIUGEbLRhZBeU4uRacNs8sDIX3oYYsJEf3c9B0k9VJbPF6jNhaQHA
2020-05-04 07:45 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 07:45:24, auth=ADMIN, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU0OTUyNCwiZXhwIjoxNTg4NTUzMTI0fQ.qpkfCWTUwQfJHz8lZVcoRdjG0gdwvm20aEIUGEbLRhZBeU4uRacNs8sDIX3oYYsJEf3c9B0k9VJbPF6jNhaQHA}),[]>
2020-05-04 07:45 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:45 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:45 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 07:45 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 07:45 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 07:45 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:45 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:45 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 07:45 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:45 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:45 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:45 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:45 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 07:45 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 07:45 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 07:45 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 07:45 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 07:45 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 07:45 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:45 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:45 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:45 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:45 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 07:45 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 07:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 07:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:45 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@5ac6211
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDk1MzQsImV4cCI6MTU4ODU1MzEzNH0.gYpgl7d-qu4p05VrNEjDkwK7vFmMihpFfdkNfo7GPRzbt2Dktzob0Q08Y2qhu1lJaz6dSxfOnDJomB5YNiNYUg
2020-05-04 07:45 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 07:45:34, auth=USER, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDk1MzQsImV4cCI6MTU4ODU1MzEzNH0.gYpgl7d-qu4p05VrNEjDkwK7vFmMihpFfdkNfo7GPRzbt2Dktzob0Q08Y2qhu1lJaz6dSxfOnDJomB5YNiNYUg}),[]>
2020-05-04 07:45 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:45 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:45 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:45 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:45 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:45 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:45 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:45 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:45 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:45 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:45 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:45 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:45 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 07:45 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 07:45 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 07:45 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 07:45 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 07:45 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 07:45 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:45 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:45 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:45 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:45 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:45 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:46 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:46 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:46 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:46 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:46 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:46 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:46 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:46 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:46 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:46 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:46 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:46 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:46 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:46 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:46 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:46 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:46 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:46 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:46 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:46 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:46 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:46 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:46 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:46 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:46 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:46 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:46 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:46 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:46 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:46 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:46 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:46 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 6484 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 118ms. Found 0 JDBC repository interfaces.
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@580f9ad2' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:47 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:48 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 07:48 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 07:48 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 07:48 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 07:48 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 07:48 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7075 ms
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 07:48:02",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@609b56eb
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@32adcd93
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@4fb6ffff
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 07:48 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@60935b9f, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c78355d, org.springframework.security.web.header.HeaderWriterFilter@6b16dbf2, org.springframework.security.web.authentication.logout.LogoutFilter@71d655a7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@31ff2c4e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e1224d6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1b8ecb54, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b84a8f9, org.springframework.security.web.session.SessionManagementFilter@15aa7425, org.springframework.security.web.access.ExceptionTranslationFilter@3e13b1b1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d6c2497]
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@3bee3c9f
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@34d5a268
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1608425230@47e836a7
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@54025054
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@6714fe5b
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@2559a1f
2020-05-04 07:48 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 07:48 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 07:48 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 07:48 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 07:48 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 07:48 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 07:48 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 07:48 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 07:48 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 07:48 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 07:48 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.472 seconds (JVM running for 23.212)
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 07:48 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 07:48 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 07:48 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 07:48 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 43 ms
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@27d63127
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDk3MTcsImV4cCI6MTU4ODU1MzMxN30.NJdiXevcEiwAE1d3MUpCPPgAoHXm4luVreCEyV6Ikbu3whCDt510G69lMRO3zUlUeNGctZPIGtRc9OrLy6JyIQ
2020-05-04 07:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 07:48:39, auth=USER, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NDk3MTcsImV4cCI6MTU4ODU1MzMxN30.NJdiXevcEiwAE1d3MUpCPPgAoHXm4luVreCEyV6Ikbu3whCDt510G69lMRO3zUlUeNGctZPIGtRc9OrLy6JyIQ}),[]>
2020-05-04 07:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 07:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 07:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 07:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 07:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 07:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 07:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : AdminController--->目标方法名为:Login
2020-05-04 07:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 管理员
2020-05-04 07:49 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:49 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:49 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:49 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:49 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:49 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:49 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:49 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 07:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 07:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 07:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 07:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 07:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 07:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:56 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 33192 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 07:56 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 07:56 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 07:56 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 07:56 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 07:56 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 07:56 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 07:56 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 110ms. Found 0 JDBC repository interfaces.
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@703f6bd9' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 07:57 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 07:57 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 07:57 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 07:57 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6850 ms
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 07:57:04",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@59e248d5
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@31a6374d
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@1659cf03
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a5fb8ce, org.springframework.security.web.context.SecurityContextPersistenceFilter@3a57df1c, org.springframework.security.web.header.HeaderWriterFilter@143a0e69, org.springframework.security.web.authentication.logout.LogoutFilter@2d00c203, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2001f8f0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8a27394, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@628427ce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e316d95, org.springframework.security.web.session.SessionManagementFilter@2248d1b0, org.springframework.security.web.access.ExceptionTranslationFilter@5e96db58, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6c060541]
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@46059868
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@12004b8e
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1645002268@5326c2ee
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@15b7bc3d
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@5f228e62
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@2102a5fb
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 07:57 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 07:57 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 07:57 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 07:57 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 07:57 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 07:57 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 07:57 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.659 seconds (JVM running for 24.661)
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 07:57 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 07:58 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 07:58 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 07:58 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 46 ms
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@564e439
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NTAzNDIsImV4cCI6MTU4ODU1Mzk0Mn0.VcYurCzPDKMxGVdVvD0UumyydNzW2u9xs2uM8R0Nd7gXA59s2YN8RWvqJU7kgKXCdzA-lIn0KD97AiTDajGRiw
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 07:59:03, auth=USER, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NTAzNDIsImV4cCI6MTU4ODU1Mzk0Mn0.VcYurCzPDKMxGVdVvD0UumyydNzW2u9xs2uM8R0Nd7gXA59s2YN8RWvqJU7kgKXCdzA-lIn0KD97AiTDajGRiw}),[]>
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 07:59 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-04 07:59 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-04 07:59 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-04 07:59 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 07:59 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]
2020-05-04 07:59 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@647730f4, taskId=54, proId=61, taskCreateTime=2020-05-03, taskStartTime=2020-05-10, taskEndTime=2020-06-15, taskContent=任务1, userId=1, subTaskId=null, taskStatus=1, taskMark=任务以1, subTaskDtos=[])]),[]>
2020-05-04 07:59 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-04 07:59 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 07:59 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-04 07:59 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-04 07:59 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 07:59 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 07:59 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-04 07:59 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:59 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 07:59 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-04 07:59 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 07:59 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-04 07:59 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 07:59 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=0, y=4}, {x=1, y=2}]
2020-05-04 07:59 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=0, y=4}, {x=1, y=2}]),[]>
2020-05-04 07:59 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:59 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=2, startRow=0, endRow=2, total=6, pages=3, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])])
2020-05-04 07:59 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])])),[]>
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 07:59 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 07:59 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@76e03139
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDU3OCwiZXhwIjoxNTg4NTU0MTc4fQ.bfxY4ziQWfqWyDeY4yj9_hj5JmWH3FAgrpeLQqLcRHcBhpKD1gRrykoGEkmVtlFGuZAv1vt6_v11Io-AwbG1_Q
2020-05-04 08:02 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:02:58, auth=ADMIN, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDU3OCwiZXhwIjoxNTg4NTU0MTc4fQ.bfxY4ziQWfqWyDeY4yj9_hj5JmWH3FAgrpeLQqLcRHcBhpKD1gRrykoGEkmVtlFGuZAv1vt6_v11Io-AwbG1_Q}),[]>
2020-05-04 08:02 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:02 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:02 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 08:02 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 08:02 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 08:02 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:02 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:02 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:02 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:02 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:02 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:02 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:02 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:02 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:02 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:02 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:02 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:02 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@6b51cbf4
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NTA1OTEsImV4cCI6MTU4ODU1NDE5MX0.yxJx7Tmq3UaY_szs-102Z1BUxhu5dgMY_Jrl3n0S5LF4r8CIShxReEQ0abpse4jyd71EaJlyzj1MREbSSjDLTg
2020-05-04 08:03 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:03:11, auth=USER, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NTA1OTEsImV4cCI6MTU4ODU1NDE5MX0.yxJx7Tmq3UaY_szs-102Z1BUxhu5dgMY_Jrl3n0S5LF4r8CIShxReEQ0abpse4jyd71EaJlyzj1MREbSSjDLTg}),[]>
2020-05-04 08:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:03 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:03 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:03 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:03 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:03 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 10424 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 106ms. Found 0 JDBC repository interfaces.
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@68c0ff5b' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 08:04 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 08:04 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 08:04 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 08:04 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6040 ms
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 08:04:19",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@2ddc398e
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@72b57823
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@22a1961d
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5cf2e404, org.springframework.security.web.context.SecurityContextPersistenceFilter@460adb07, org.springframework.security.web.header.HeaderWriterFilter@40bd567, org.springframework.security.web.authentication.logout.LogoutFilter@5fef833a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1b8fade3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b72b674, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25ed2607, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71af52d0, org.springframework.security.web.session.SessionManagementFilter@4eef49da, org.springframework.security.web.access.ExceptionTranslationFilter@159c2d19, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@199d2b87]
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@48978d68
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@5b48df42
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1452788627@549f3527
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@6a427b55
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@7e2252c5
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@68638c4e
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 08:04 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 08:04 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 08:04 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 08:04 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 08:04 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 08:04 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 08:04 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 17.655 seconds (JVM running for 22.544)
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 08:04 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 37 ms
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@2933ce6b
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDY4NiwiZXhwIjoxNTg4NTU0Mjg2fQ.CQBAOVkH3OCErxz9EzNmpDsrqorrzYAw6yaPkjgh56se7AlNvt2_XUQcMYVY1Ed1bhm6yRu-yxU4lBhYp9W5bA
2020-05-04 08:04 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:04:48, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDY4NiwiZXhwIjoxNTg4NTU0Mjg2fQ.CQBAOVkH3OCErxz9EzNmpDsrqorrzYAw6yaPkjgh56se7AlNvt2_XUQcMYVY1Ed1bhm6yRu-yxU4lBhYp9W5bA}),[]>
2020-05-04 08:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:04 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:04 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:04 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:04 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:04 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@5960a47d
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDc3NywiZXhwIjoxNTg4NTU0Mzc3fQ.1ISdZeLtxnRKTjHXPS_KWpaKls6sbSdBbPEIFLRuH9MA0vAduv5xikzZPzimr6Btttk48VmdHR7UtsuC4-lHnA
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:06:17, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDc3NywiZXhwIjoxNTg4NTU0Mzc3fQ.1ISdZeLtxnRKTjHXPS_KWpaKls6sbSdBbPEIFLRuH9MA0vAduv5xikzZPzimr6Btttk48VmdHR7UtsuC4-lHnA}),[]>
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@d4b20f0
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDgwMiwiZXhwIjoxNTg4NTU0NDAyfQ.BvgTKq8F7fkf3oG8fKozO6NkdLOPfkaZiaL98S091ftfv_Ga8JqaCpk_gIqvQPlQFWqKUna90PLJUfIFfI7uVw
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:06:42, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDgwMiwiZXhwIjoxNTg4NTU0NDAyfQ.BvgTKq8F7fkf3oG8fKozO6NkdLOPfkaZiaL98S091ftfv_Ga8JqaCpk_gIqvQPlQFWqKUna90PLJUfIFfI7uVw}),[]>
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@8e24a7
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NTA4MTAsImV4cCI6MTU4ODU1NDQxMH0._LEBY6eoR_4Cz9Inq6AyNxpW_BDhuJdkVgw1l-ZC8jNPY3-vh3O2LzH6oGFIv2Y6y65zuS7hnZU_GyiqHWP4Bw
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:06:50, auth=[USER], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NTA4MTAsImV4cCI6MTU4ODU1NDQxMH0._LEBY6eoR_4Cz9Inq6AyNxpW_BDhuJdkVgw1l-ZC8jNPY3-vh3O2LzH6oGFIv2Y6y65zuS7hnZU_GyiqHWP4Bw}),[]>
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@663bc024
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDgxOSwiZXhwIjoxNTg4NTU0NDE5fQ.zwHcH-4CfW6fMeyAIxk7s80ru_BWwu5mtxcvOBh-MROgAhd94OWkYarY2TVYYL3HmqjYwpnjbcFbwj7bHrO9WA
2020-05-04 08:06 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:06:59, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDgxOSwiZXhwIjoxNTg4NTU0NDE5fQ.zwHcH-4CfW6fMeyAIxk7s80ru_BWwu5mtxcvOBh-MROgAhd94OWkYarY2TVYYL3HmqjYwpnjbcFbwj7bHrO9WA}),[]>
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:06 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:08 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:08 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:08 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:08 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:08 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:08 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:08 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:08 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:08 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:08 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:08 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:08 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:08 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:08 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:08 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:08 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:08 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:08 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:08 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:08 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:08 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:08 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:08 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:08 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:08 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:08 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:08 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:08 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:08 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:08 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:08 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:08 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:08 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:08 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:08 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:08 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:08 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:08 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:08 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:08 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@46dca815
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDk0OCwiZXhwIjoxNTg4NTU0NTQ4fQ.Lbw92bUOZi7dW7YB1x5jrrKjsdrzoW7OkqZJ7JvmrdfY6EQy2uNiZnLMUhBCzSknsScSlVb0rRqMhhTrXm7TFw
2020-05-04 08:09 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:09:08, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MDk0OCwiZXhwIjoxNTg4NTU0NTQ4fQ.Lbw92bUOZi7dW7YB1x5jrrKjsdrzoW7OkqZJ7JvmrdfY6EQy2uNiZnLMUhBCzSknsScSlVb0rRqMhhTrXm7TFw}),[]>
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@52dbfc09
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NTEwMTUsImV4cCI6MTU4ODU1NDYxNX0.S_6vsrQnIxuygbG25imiic0Z4mIHZyVqnFKsmHsPPBY-NB1jUlyH9uOl906tcy-xM9erKevszdYZ45Y2_oQFbg
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:10:15, auth=[USER], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NTEwMTUsImV4cCI6MTU4ODU1NDYxNX0.S_6vsrQnIxuygbG25imiic0Z4mIHZyVqnFKsmHsPPBY-NB1jUlyH9uOl906tcy-xM9erKevszdYZ45Y2_oQFbg}),[]>
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@247db6aa
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MTAyNSwiZXhwIjoxNTg4NTU0NjI1fQ.UHXJ-YFQ7xUm5UnJSdiLYCaCwj9_H1jxhLqGH32pfvEooSZYEMfzZHChL_YUHxzJCHKtwR2jt3q7yj-Af50Qog
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:10:25, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MTAyNSwiZXhwIjoxNTg4NTU0NjI1fQ.UHXJ-YFQ7xUm5UnJSdiLYCaCwj9_H1jxhLqGH32pfvEooSZYEMfzZHChL_YUHxzJCHKtwR2jt3q7yj-Af50Qog}),[]>
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:10 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@6689f2ec
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MTA1NCwiZXhwIjoxNTg4NTU0NjU0fQ.rW29HRcre8-1f04Y4_6VnU0PilJTqv9qCRlbAeOoXtKtal8JCXKkw0SFF_ZX_Y2mGSu2oi9cLJZmUkmWJnwRyg
2020-05-04 08:10 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:10:54, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MTA1NCwiZXhwIjoxNTg4NTU0NjU0fQ.rW29HRcre8-1f04Y4_6VnU0PilJTqv9qCRlbAeOoXtKtal8JCXKkw0SFF_ZX_Y2mGSu2oi9cLJZmUkmWJnwRyg}),[]>
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:10 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:10 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:11 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:11 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:11 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:save
2020-05-04 08:11 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:save
2020-05-04 08:11 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMappingImpl--->目标方法名为:toEntity
2020-05-04 08:11 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Notice(noticeId=null, userId=3, userName=admin, proId=61, proName=null, noticeContent=吃的是, createTime=2020-05-04, status=0)
2020-05-04 08:11 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : InsertMapper--->目标方法名为:insert
2020-05-04 08:11 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 08:11 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-04 08:11 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=1),[]>
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@17e882c1
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NTExMTMsImV4cCI6MTU4ODU1NDcxM30.YLCdyJBKxQ-5AdVEXZpAAvW2wPohEhe4KAMIGfL7Pg_U701-onazQQrV5h1jaQsqCnEMYpMStBnPWpg2rEJ2CA
2020-05-04 08:11 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:11:53, auth=[USER], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODg1NTExMTMsImV4cCI6MTU4ODU1NDcxM30.YLCdyJBKxQ-5AdVEXZpAAvW2wPohEhe4KAMIGfL7Pg_U701-onazQQrV5h1jaQsqCnEMYpMStBnPWpg2rEJ2CA}),[]>
2020-05-04 08:11 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:11 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:11 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:11 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:11 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:11 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:11 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:11 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:11 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:11 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:11 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:11 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:11 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:11 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:11 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:11 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:11 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:11 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:11 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:11 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:11 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:11 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:11 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:11 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:11 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:11 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:11 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:11 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:11 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:11 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:11 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:11 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:11 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:11 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:11 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:11 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:11 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:11 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:11 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:11 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:12 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:12 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:12 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:12 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:12 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:12 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:12 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:12 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:12 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:12 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:12 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:12 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:12 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:12 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=2, startRow=0, endRow=2, total=6, pages=3, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 08:12 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])])
2020-05-04 08:12 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])])),[]>
2020-05-04 08:12 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:12 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:12 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:12 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:12 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:12 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:12 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:12 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:12 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:12 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:12 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:12 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:12 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:12 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:12 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:12 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:13 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:13 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:13 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:13 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:13 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:13 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:13 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=5, totalSize=5, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[])])
2020-05-04 08:13 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=5, totalSize=5, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[])])),[]>
2020-05-04 08:14 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:14 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:14 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:14 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:14 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:14 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=4, startRow=0, endRow=4, total=6, pages=2, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 08:14 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=4, totalSize=4, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])])
2020-05-04 08:14 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=4, totalSize=4, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])])),[]>
2020-05-04 08:16 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:16 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:16 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:16 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:16 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:16 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=2, pageSize=4, startRow=4, endRow=8, total=6, pages=2, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:16 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])])
2020-05-04 08:16 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])])),[]>
2020-05-04 08:16 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:16 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:16 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:16 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:16 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:16 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=2, pageSize=4, startRow=4, endRow=8, total=6, pages=2, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:16 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])])
2020-05-04 08:16 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])])),[]>
2020-05-04 08:17 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:17 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:17 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:17 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:17 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:17 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=2, pageSize=4, startRow=4, endRow=8, total=6, pages=2, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:17 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])])
2020-05-04 08:17 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])])),[]>
2020-05-04 08:17 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:17 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:17 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:17 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:17 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:17 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=4, startRow=0, endRow=4, total=6, pages=2, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 08:17 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=4, totalSize=4, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])])
2020-05-04 08:17 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=4, totalSize=4, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])])),[]>
2020-05-04 08:17 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:17 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:17 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:17 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:17 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:17 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:17 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:17 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:17 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:17 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:17 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=2, startRow=0, endRow=2, total=6, pages=3, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])]
2020-05-04 08:17 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])])
2020-05-04 08:17 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=2, totalSize=2, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[])])),[]>
2020-05-04 08:17 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:17 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:17 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:18 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:18 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:18 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:18 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:18 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:18 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:18 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:18 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=4, startRow=0, endRow=4, total=6, pages=2, reasonable=true, pageSizeZero=false}[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])]
2020-05-04 08:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=4, totalSize=4, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])])
2020-05-04 08:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=4, totalSize=4, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[])])),[]>
2020-05-04 08:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 20580 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 109ms. Found 0 JDBC repository interfaces.
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6066cbfe' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 08:27 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 08:27 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 08:27 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 08:27 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6632 ms
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 08:27:49",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@45489be3
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@405b5bc5
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@5f7b5aa6
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ae8e4b2, org.springframework.security.web.context.SecurityContextPersistenceFilter@1ea07c92, org.springframework.security.web.header.HeaderWriterFilter@179477ad, org.springframework.security.web.authentication.logout.LogoutFilter@77da4793, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6b44ed34, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@590e2868, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23ff75db, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@396f5df5, org.springframework.security.web.session.SessionManagementFilter@71e8ef14, org.springframework.security.web.access.ExceptionTranslationFilter@5a009503, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b7672ee]
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@5f832d29
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@146d6e04
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/860253098@57320045
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@238295ea
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@7fcedbf1
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 08:27 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@21153825
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 08:27 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 08:27 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 08:27 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 08:27 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 08:27 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 08:27 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 08:27 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 08:28 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 08:28 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 08:28 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.288 seconds (JVM running for 24.633)
2020-05-04 08:28 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 08:28 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 08:28 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:28 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 08:28 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 08:28 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:29 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 08:29 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 08:29 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 36 ms
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 488 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 102ms. Found 0 JDBC repository interfaces.
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1d48bce9' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 08:30 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 08:30 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 08:30 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 08:30 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6183 ms
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 08:30:36",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@104d5cc1
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@342e64ac
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@508deb8a
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55c62bfc, org.springframework.security.web.context.SecurityContextPersistenceFilter@22577286, org.springframework.security.web.header.HeaderWriterFilter@78d07472, org.springframework.security.web.authentication.logout.LogoutFilter@486f9a10, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6262f7bc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e68877b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f4e4256, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b8079e9, org.springframework.security.web.session.SessionManagementFilter@34d4b54, org.springframework.security.web.access.ExceptionTranslationFilter@49c5f1a6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17e76105]
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@73a61791
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@4bee5b4
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/29103638@4bf4b031
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@69b24e16
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@6d7d2525
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@6123899c
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 08:30 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 08:30 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 08:30 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 08:30 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 08:30 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 08:30 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 08:30 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 18.757 seconds (JVM running for 23.273)
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 08:30 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:30 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 08:30 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 08:30 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 51 ms
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@352c7e35
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MjI4NCwiZXhwIjoxNTg4NTU1ODg0fQ.X_Cgky_0Rh6NpPc4-79RK5RezMDd8Oqrm7XDOAhrDvmoYw_-iBhhmeOJFC_CX8MLw5KB0ObOcdM4yFZe7N_ozA
2020-05-04 08:31 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@f7280a43, userId=3, userName=admin, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=金融, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-04 08:31:26, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbjEyMzQ1NiIsImlhdCI6MTU4ODU1MjI4NCwiZXhwIjoxNTg4NTU1ODg0fQ.X_Cgky_0Rh6NpPc4-79RK5RezMDd8Oqrm7XDOAhrDvmoYw_-iBhhmeOJFC_CX8MLw5KB0ObOcdM4yFZe7N_ozA}),[]>
2020-05-04 08:31 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:31 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:31 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-04 08:31 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-04 08:31 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-04 08:31 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:31 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:31 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:31 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:31 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:31 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:31 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:31 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:31 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-04 08:31 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:31 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-04 08:31 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:31 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:31 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-04 08:31 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-04 08:31 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-04 08:31 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-04 08:31 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:31 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-04 08:31 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:31 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:31 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:31 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:31 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:31 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:31 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-04 08:31 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-04 08:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:findAll
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:findAll
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [Team(teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=gaw, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Sun May 03 00:00:00 CST 2020, status=1, staff=gwa, teamNature=faeg , teamLabel=aeg, seeNum=0, projects=null), Team(teamId=85, teamName=测试团队, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=我, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无
, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=广东金融学院, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null), Team(teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=校外, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)]
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null)
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)]
2020-05-04 08:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=处理成功, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)]),[]>
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 21400 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 239ms. Found 0 JDBC repository interfaces.
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7ebbca0d' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 08:35 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 08:35 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 08:35 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 08:35 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5917 ms
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 08:35:26",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@5f1b672c
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@7748c98f
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@14148d30
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7dbaa9f8, org.springframework.security.web.context.SecurityContextPersistenceFilter@121611d1, org.springframework.security.web.header.HeaderWriterFilter@332d837d, org.springframework.security.web.authentication.logout.LogoutFilter@3de9b300, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1a587cfa, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@7ff9f987, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@617e4b0a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@27ad0af, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ad6ad1b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2389fcda, org.springframework.security.web.session.SessionManagementFilter@25396ad, org.springframework.security.web.access.ExceptionTranslationFilter@b328350, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@702bd6e2]
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@dd360e5
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@6f4c3332
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/796963034@7beaa7f5
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@5c18597c
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@2a575982
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@34492e01
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 08:35 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 08:35 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 08:35 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 08:35 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 08:35 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 08:35 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 08:35 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 17.207 seconds (JVM running for 21.645)
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 08:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:35 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 08:35 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 08:35 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 43 ms
2020-05-04 08:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:35 [http-nio-8888-exec-3] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 08:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@45a61b20
2020-05-04 08:35 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@181e8: Username: crw; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: USER
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [Team(teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=gaw, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Sun May 03 00:00:00 CST 2020, status=1, staff=gwa, teamNature=faeg , teamLabel=aeg, seeNum=0, projects=null), Team(teamId=85, teamName=测试团队, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=我, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无
, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=广东金融学院, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null), Team(teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=校外, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)]
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null)
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=6, totalSize=6, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)])
2020-05-04 08:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=6, totalSize=6, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)])),[]>
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 2896 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115ms. Found 0 JDBC repository interfaces.
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@252c23cb' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 08:36 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 08:36 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 08:36 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 08:36 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6135 ms
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 08:36:47",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@2f6c7dd1
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@6db7278d
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@53af8064
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5771f8bb, org.springframework.security.web.context.SecurityContextPersistenceFilter@44fdef5d, org.springframework.security.web.header.HeaderWriterFilter@1f544105, org.springframework.security.web.authentication.logout.LogoutFilter@1e542d58, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@21e057e7, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4d8445cd, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@32a92c41, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b08140f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5978c0fe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6c2605a6, org.springframework.security.web.session.SessionManagementFilter@59389bef, org.springframework.security.web.access.ExceptionTranslationFilter@5635d204, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@798607f2]
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@662c8172
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@72d4f2a8
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1038641034@ddb62e5
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@138e5bb
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@5b2a26ab
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@73ce266b
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 08:36 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 08:36 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 08:36 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 08:36 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 08:36 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 08:36 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 08:36 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 17.828 seconds (JVM running for 22.394)
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 08:36 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 40 ms
2020-05-04 08:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:37 [http-nio-8888-exec-3] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 08:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@21b3ac46
2020-05-04 08:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [Team(teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=gaw, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Sun May 03 00:00:00 CST 2020, status=1, staff=gwa, teamNature=faeg , teamLabel=aeg, seeNum=0, projects=null), Team(teamId=85, teamName=测试团队, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=我, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无
, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=广东金融学院, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null), Team(teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=校外, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)]
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=6, totalSize=6, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)])
2020-05-04 08:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=6, totalSize=6, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)])),[]>
2020-05-04 08:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-04 08:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-04 08:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-04 08:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-04 08:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-04 08:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [Team(teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=gaw, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Sun May 03 00:00:00 CST 2020, status=1, staff=gwa, teamNature=faeg , teamLabel=aeg, seeNum=0, projects=null), Team(teamId=85, teamName=测试团队, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=我, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无
, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=广东金融学院, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null), Team(teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=校外, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)]
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=6, totalSize=6, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)])
2020-05-04 08:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=6, totalSize=6, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)])),[]>
2020-05-04 08:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [Team(teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=gaw, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Sun May 03 00:00:00 CST 2020, status=1, staff=gwa, teamNature=faeg , teamLabel=aeg, seeNum=0, projects=null), Team(teamId=85, teamName=测试团队, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=我, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无
, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=广东金融学院, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null), Team(teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=校外, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)]
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=6, totalSize=6, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)])
2020-05-04 08:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=6, totalSize=6, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)])),[]>
2020-05-04 08:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-04 08:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-04 08:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-04 08:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]
2020-05-04 08:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@a85a2669, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@87f82cbc, proId=61, proName=项目1, leaderName=2020-05-03, proDescribe=测试, proDate=2020-05-03, proStartTime=2020-05-10, proEndTime=2020-06-16, proStatus=0, teamId=84, proType=测试, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b42, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aa0, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d33c, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cb4, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff67, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=[])]),[]>
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [Team(teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=gaw, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Sun May 03 00:00:00 CST 2020, status=1, staff=gwa, teamNature=faeg , teamLabel=aeg, seeNum=0, projects=null), Team(teamId=85, teamName=测试团队, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=我, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无
, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=广东金融学院, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null), Team(teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=校外, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)]
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=6, totalSize=6, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)])
2020-05-04 08:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=6, totalSize=6, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4bd4ff91, teamId=89, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=校外, teamLabel=java, seeNum=0, projects=null)])),[]>
2020-05-04 08:38 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 2956 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-04 08:38 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-04 08:38 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-04 08:38 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-04 08:38 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-04 08:38 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-04 08:38 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-04 08:38 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130ms. Found 0 JDBC repository interfaces.
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1359a7e8' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-04 08:39 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-04 08:39 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-04 08:39 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-04 08:39 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6580 ms
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-04 08:39:04",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@39c501ac
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@4f563653
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@318fac81
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@551b78f2, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f0e21ef, org.springframework.security.web.header.HeaderWriterFilter@3424dcb3, org.springframework.security.web.authentication.logout.LogoutFilter@1d24a961, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6422e361, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5556ade9, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@3d1569e2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39eaad98, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a45abd1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b17c455, org.springframework.security.web.session.SessionManagementFilter@4ef70fb, org.springframework.security.web.access.ExceptionTranslationFilter@3c9c0826, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6b63ca1c]
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@568770b7
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@386c0cc4
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1934685257@5ecc936f
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@36dd45f4
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@661f94ef
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@1edea65d
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-04 08:39 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-04 08:39 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-04 08:39 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-04 08:39 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-04 08:39 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-04 08:39 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-04 08:39 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 19.461 seconds (JVM running for 24.122)
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-04 08:39 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-04 08:39 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-04 08:39 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-04 08:39 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 39 ms
2020-05-04 08:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-04 08:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-04 08:39 [http-nio-8888-exec-3] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-04 08:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@4577e805
2020-05-04 08:39 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=6, pages=2, reasonable=true, pageSizeZero=false}[Team(teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=gaw, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Sun May 03 00:00:00 CST 2020, status=1, staff=gwa, teamNature=faeg , teamLabel=aeg, seeNum=0, projects=null), Team(teamId=85, teamName=测试团队, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=我, teamType=0, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无
, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=1, teamScope=广东金融学院, teamNumber=1, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=无, teamNature=个人团队, teamLabel=无, seeNum=0, projects=null), Team(teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, LeaderName=crw, teamDescribe=无, teamType=0, teamScope=广东金融学院, teamNumber=4, teamDate=Mon May 04 00:00:00 CST 2020, status=1, staff=null, teamNature=个人团队, teamLabel=java, seeNum=0, projects=null)]
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null)
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null)
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null)
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMappingImpl--->目标方法名为:toDto
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null)
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=5, totalSize=5, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null)])
2020-05-04 08:40 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=5, totalSize=5, totalPages=1, content=[TeamDto(super=crw.bishe.team.dto.TeamDto@2061f9b9, teamId=84, teamName=crw的团队3, adminId=3, leaderId=1, leaderName=crw, teamDescribe=gaw, teamType=0, teamNumber=1, teamDate=2020-05-03, status=1, staff=gwa, teamNature=faeg , teamScope=广东金融学院, teamLabel=aeg, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@c0b0b6c, teamId=85, teamName=测试团队, adminId=3, leaderId=1, leaderName=crw, teamDescribe=我, teamType=0, teamNumber=1, teamDate=2020-05-04, status=1, staff=无
, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@4e6f5aca, teamId=86, teamName=crw的团队1, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3b7d366, teamId=87, teamName=crw的团队2, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=1, teamNumber=1, teamDate=2020-05-04, status=1, staff=无, teamNature=个人团队, teamScope=广东金融学院, teamLabel=无, seeNum=0, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@3eed4cde, teamId=88, teamName=crw的团队4, adminId=3, leaderId=1, leaderName=crw, teamDescribe=无, teamType=0, teamNumber=4, teamDate=2020-05-04, status=1, staff=null, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java, seeNum=0, projects=null)])),[]>
