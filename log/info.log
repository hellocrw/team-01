2020-05-06 00:30 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 2088 (started by crw in D:\project\毕业设计项目\team-01)
2020-05-06 00:30 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-05-06 00:30 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-05-06 00:30 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\crw\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/C:/Users/crw/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-05-06 00:30 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-05-06 00:30 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-05-06 00:30 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-05-06 00:30 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134ms. Found 0 JDBC repository interfaces.
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@f7a3498' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-05-06 00:31 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-05-06 00:31 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-05-06 00:31 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-06 00:31 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7171 ms
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-05-06 00:31:03",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@33745176
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@430d4e56
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationManagerBean
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator@38380fae
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b56e9de, org.springframework.security.web.context.SecurityContextPersistenceFilter@77a09102, org.springframework.security.web.header.HeaderWriterFilter@78d1460d, org.springframework.security.web.authentication.logout.LogoutFilter@6e8cf436, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4c7850c9, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2c6ef80, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@87a215d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ab89433, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1059cbec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@32799e48, org.springframework.security.web.session.SessionManagementFilter@461f3057, org.springframework.security.web.access.ExceptionTranslationFilter@40c9b0a4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@12303bf8]
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@67457aca
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@2ce96f46
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$531/1852232487@2ed6a8b
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@610ee556
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@6256d84b
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@12242ffc
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-05-06 00:31 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-05-06 00:31 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-05-06 00:31 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-05-06 00:31 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-05-06 00:31 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: saveUsingPOST_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: LoginUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needAdminUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needLoginUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: needUserUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getRecommandUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: delectTestUsingDELETE_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-05-06 00:31 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-05-06 00:31 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 20.26 seconds (JVM running for 27.361)
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-05-06 00:31 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 00:32 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-06 00:32 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-05-06 00:32 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 45 ms
2020-05-06 00:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-06 00:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-06 00:32 [http-nio-8888-exec-5] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-05-06 00:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@6ed5fac5
2020-05-06 00:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-06 00:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 00:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 00:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:uploadFiles
2020-05-06 00:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:uploadFiles
2020-05-06 00:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 综合评估.html
2020-05-06 00:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=综合评估.html),[]>
2020-05-06 00:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 00:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 00:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:download
2020-05-06 00:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:downloadFile
2020-05-06 00:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 下载成功
2020-05-06 00:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=下载成功),[]>
2020-05-06 00:37 [http-nio-8888-exec-9] [WARN]  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:235)ev  el org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:115) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:115) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:341) ~[druid-1.0.12.jar:1.0.12]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:550) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:440) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:210) [spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141) [spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) [spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300) [spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111) [spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) [druid-1.0.12.jar:1.0.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2020-05-06 00:37 [http-nio-8888-exec-9] [ERROR]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: No converter for [class crw.bishe.team.vo.Result] with preset Content-Type 'application/force-download'] with root cause
org.springframework.http.converter.HttpMessageNotWritableException: No converter for [class crw.bishe.team.vo.Result] with preset Content-Type 'application/force-download'
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:313) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:226) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.0.12.jar:1.0.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2020-05-06 00:37 [http-nio-8888-exec-9] [WARN]  org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:199)ev  el org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: No converter for [class java.util.LinkedHashMap] with preset Content-Type 'application/force-download']
2020-05-06 10:19 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 10:19 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 10:19 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]),[]>
2020-05-06 10:19 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:19 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:19 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:19 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:19 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:19 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:19 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@b710aa70, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:19 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@b710aa70, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:19 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@b710aa70, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 10:19 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 10:19 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 10:19 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 10:19 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 10:19 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 10:19 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 10:19 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 10:19 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 10:19 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 10:19 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 10:19 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 10:19 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=null),[]>
2020-05-06 10:19 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:19 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:19 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:19 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 10:19 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:19 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 10:19 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 10:19 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 10:19 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 10:19 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 10:19 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 10:19 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 10:19 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:19 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:19 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:19 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:19 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:19 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 10:19 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:19 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 10:19 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]),[]>
2020-05-06 10:19 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:19 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:19 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:19 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:19 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 10:19 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 10:19 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 10:19 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 10:19 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 10:19 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@f26fd5de, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 10:19 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 10:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 10:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 10:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 10:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])
2020-05-06 10:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])
2020-05-06 10:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])),[]>
2020-05-06 10:20 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:20 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:20 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 10:20 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 10:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 10:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 10:20 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 10:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 10:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 10:20 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:20 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 10:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=null),[]>
2020-05-06 10:20 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 10:20 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:20 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:20 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 10:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 10:20 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 10:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 10:20 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 10:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 10:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 10:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 10:20 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 10:20 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@f26fd5de, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 10:20 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 10:20 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 10:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 10:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 10:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 10:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 10:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:20 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:20 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:20 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:20 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 10:20 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 10:20 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 10:20 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 10:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 10:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 10:20 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 10:20 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 10:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:20 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 10:20 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 10:20 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 10:20 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 10:20 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 10:20 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 10:20 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 10:22 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:22 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:23 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@1213287b
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@1de7873: Username: 管理员; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@36ced249, userId=4, userName=管理员, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@36ced249, userId=4, userName=管理员, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiLnrqHnkIblkZgxMjM0NTYiLCJpYXQiOjE1ODg3MzE3OTksImV4cCI6MTU4ODczNTM5OX0.Bz5MfYgJgJY4haKgMjtBR0AESObCrHoKeFJKSznecWa1fJuWMK1UlJS_BrW5WK8qxE2CMjm_koqfPXA8nezD-Q
2020-05-06 10:23 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@36ced249, userId=4, userName=管理员, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-06 10:23:21, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiLnrqHnkIblkZgxMjM0NTYiLCJpYXQiOjE1ODg3MzE3OTksImV4cCI6MTU4ODczNTM5OX0.Bz5MfYgJgJY4haKgMjtBR0AESObCrHoKeFJKSznecWa1fJuWMK1UlJS_BrW5WK8qxE2CMjm_koqfPXA8nezD-Q}),[]>
2020-05-06 10:23 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:23 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 10:23 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 10:23 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 10:23 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@b710aa70, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:23 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@b710aa70, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:23 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@b710aa70, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 10:23 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:23 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:23 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 10:23 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 10:23 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 10:23 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 10:23 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 10:23 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:23 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:23 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 10:23 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:23 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:23 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:23 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:23 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:23 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:23 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:23 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:23 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:23 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:23 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:23 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:23 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamAnalysis
2020-05-06 10:23 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamAnalysis
2020-05-06 10:23 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamAnalysis
2020-05-06 10:23 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 10:23 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 10:23 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=15}, {x=业余类, y=1}]),[]>
2020-05-06 10:23 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:23 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 10:23 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 10:23 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 10:23 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@b710aa70, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:23 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@b710aa70, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:23 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@b710aa70, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=0, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 10:23 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:23 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:agree
2020-05-06 10:23 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:agree
2020-05-06 10:23 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:agree
2020-05-06 10:23 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 10:23 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 10:23 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=null),[]>
2020-05-06 10:23 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:23 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:23 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 10:23 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 10:23 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 10:23 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:23 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:23 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamAnalysis
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamAnalysis
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamAnalysis
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=15}, {x=业余类, y=1}]),[]>
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 10:24 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 10:24 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 10:24 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 10:24 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 10:24 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 10:24 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 10:24 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 10:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 10:24 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 10:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 10:24 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 10:24 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 10:24 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:24 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:24 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:24 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:24 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 10:24 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:24 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:24 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:24 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:24 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 10:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 10:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 10:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:24 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 10:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:isLeader
2020-05-06 10:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:isLeader
2020-05-06 10:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 10:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : false
2020-05-06 10:24 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=false),[]>
2020-05-06 10:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 10:24 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 10:24 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 10:24 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 10:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:24 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 10:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-06 10:24 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:24 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:24 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 10:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 10:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 10:24 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]),[]>
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:24 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 10:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 10:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 10:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 10:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 10:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:25 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:isLeader
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:isLeader
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : false
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=false),[]>
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]),[]>
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:25 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getLeaderIdByProId
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getLeaderIdByProId
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getLeaderIdByProId
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : false
2020-05-06 10:25 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=false),[]>
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:25 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:25 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:25 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:25 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:25 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:25 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:25 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]),[]>
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]),[]>
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getLeaderIdByProId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getLeaderIdByProId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getLeaderIdByProId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : false
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=false),[]>
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:isLeader
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:isLeader
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : false
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=false),[]>
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]),[]>
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getLeaderIdByProId
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getLeaderIdByProId
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getLeaderIdByProId
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : false
2020-05-06 10:26 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=false),[]>
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:26 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:26 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:26 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:26 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]),[]>
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 10:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 10:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 10:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]),[]>
2020-05-06 10:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]),[]>
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:42 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:42 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:42 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:42 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:42 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:42 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:42 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:42 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:42 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:42 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:42 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:42 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:42 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:42 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:42 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:42 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:42 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:42 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:42 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 10:42 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 10:42 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 10:42 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:42 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:42 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]),[]>
2020-05-06 10:42 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:42 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:42 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:42 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:42 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:42 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:42 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:42 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:42 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:42 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:42 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:42 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:42 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:42 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:42 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:42 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:42 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:42 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:42 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:42 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:42 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:42 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:42 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:42 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:42 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:42 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:42 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:42 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:42 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:42 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:42 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:42 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamAnalysis
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamAnalysis
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamAnalysis
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=15}, {x=业余类, y=1}]),[]>
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamAnalysis
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamAnalysis
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamAnalysis
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=15}, {x=业余类, y=1}]),[]>
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 10:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 10:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 10:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]),[]>
2020-05-06 10:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 10:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]),[]>
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 10:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 10:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 11:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 11:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 11:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 11:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 11:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 11:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 11:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 11:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 11:06 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 11:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 11:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 11:06 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 11:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@18fa30b1, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@1d482a9d, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5d11, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e2c, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd77, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e55f, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef5a1b, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b57, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee083a, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@91247702, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa394, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae90f, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e8a, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb7405, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb980, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe49b, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null)]
2020-05-06 11:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@18fa30b1, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@1d482a9d, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5d11, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e2c, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd77, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e55f, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef5a1b, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b57, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee083a, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@91247702, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa394, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae90f, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e8a, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb7405, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb980, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe49b, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null)]
2020-05-06 11:06 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@18fa30b1, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@1d482a9d, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5d11, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e2c, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd77, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e55f, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef5a1b, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b57, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee083a, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@91247702, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa394, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae90f, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e8a, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb7405, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb980, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe49b, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null)]),[]>
2020-05-06 11:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:06 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 11:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:06 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 11:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByTeamType
2020-05-06 11:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@18fa30b1, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@1d482a9d, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5d11, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e2c, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd77, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e55f, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef5a1b, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b57, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee083a, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@91247702, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa394, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae90f, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e8a, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb7405, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb980, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe49b, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null)]
2020-05-06 11:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@18fa30b1, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@1d482a9d, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5d11, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e2c, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd77, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e55f, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef5a1b, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b57, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee083a, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@91247702, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa394, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae90f, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e8a, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb7405, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb980, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe49b, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null)]
2020-05-06 11:06 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@18fa30b1, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@1d482a9d, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5d11, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e2c, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd77, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e55f, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef5a1b, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b57, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee083a, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@91247702, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa394, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae90f, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e8a, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb7405, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb980, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe49b, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=null)]),[]>
2020-05-06 11:07 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:07 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:07 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 11:07 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 11:07 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 11:07 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:07 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:07 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 11:07 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:07 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:07 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 11:07 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 11:07 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 11:07 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:07 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:07 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 11:07 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 11:07 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 11:07 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 11:07 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 11:07 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 11:07 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:07 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:07 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 11:07 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 11:07 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 11:07 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 11:07 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 11:07 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 11:07 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:07 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:07 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 11:07 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:07 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:07 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:07 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:07 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 11:07 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 11:07 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 11:07 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 11:07 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 11:07 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 11:07 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 11:07 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 11:07 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 11:07 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 11:07 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 11:07 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 11:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 11:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 11:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 11:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 11:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 11:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 11:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 11:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 11:20 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 11:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 11:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 11:20 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 11:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 11:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 11:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 11:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 11:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 11:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 11:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 11:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 11:20 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 11:20 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]),[]>
2020-05-06 11:20 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:20 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:20 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 11:20 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 11:20 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 11:20 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:20 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:20 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 11:21 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:21 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:21 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 11:21 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:21 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:21 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 11:21 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 11:21 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 11:21 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 11:21 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 11:21 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:21 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 11:21 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 11:21 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:21 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 11:21 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]),[]>
2020-05-06 11:21 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:21 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:21 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 11:21 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 11:21 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 11:21 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 11:21 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 11:21 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 11:21 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:21 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:21 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:21 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 11:21 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:21 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 11:21 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:21 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:21 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 11:21 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:21 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:21 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 11:21 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 11:21 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 11:21 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 11:21 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 11:21 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 11:21 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 11:21 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 11:21 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 11:21 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:21 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:21 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 11:21 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 11:21 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 11:21 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 11:21 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:21 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 11:21 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 11:21 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 11:21 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 11:21 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 11:21 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:21 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:21 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 11:21 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 11:21 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 11:21 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 11:21 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 11:21 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 11:21 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 11:21 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 11:21 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 11:21 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 11:21 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 11:21 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 11:21 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 11:21 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:30 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:30 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:30 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 14:30 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 14:30 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 14:30 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:30 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:30 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:30 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:30 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:30 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:30 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 14:30 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:30 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:30 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:30 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:30 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:30 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:30 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:30 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:30 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:30 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:30 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:30 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:30 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:30 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:30 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:30 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:30 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:30 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:30 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:30 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]),[]>
2020-05-06 14:30 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:30 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:30 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:30 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:30 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:30 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:30 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:30 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:30 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:30 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:30 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:30 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:30 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:30 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:30 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:30 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:30 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:30 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:30 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:30 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:30 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:30 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 14:30 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 14:30 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]),[]>
2020-05-06 14:30 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:30 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:30 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:30 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:30 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:30 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:30 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:30 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 14:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 14:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 14:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:32 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 14:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:32 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 14:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 14:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:32 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 14:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 14:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 14:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 14:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:32 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 14:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 14:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 14:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 14:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-05-06 14:32 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=null),[]>
2020-05-06 14:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 14:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 14:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 14:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 14:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 14:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 14:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 14:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 14:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 14:32 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 14:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:32 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 14:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 14:32 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=15}, {x=业余类, y=1}]),[]>
2020-05-06 14:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:32 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:isLeader
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:isLeader
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=true),[]>
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]),[]>
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:36 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getLeaderIdByProId
2020-05-06 14:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getLeaderIdByProId
2020-05-06 14:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getLeaderIdByProId
2020-05-06 14:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-06 14:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=true),[]>
2020-05-06 14:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 14:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 14:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 14:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:36 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:36 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 14:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 14:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 14:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 14:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:36 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 14:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 14:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 14:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 14:36 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:36 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]
2020-05-06 14:36 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0)]),[]>
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:36 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:save
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:save
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMappingImpl--->目标方法名为:toEntity
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Notice(noticeId=null, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=优秀者
, createTime=2020-05-06, status=0)
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : InsertMapper--->目标方法名为:insert
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=1),[]>
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0), NoticeDto(noticeId=22, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=优秀者
, createTime=2020-05-06, status=0)]
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0), NoticeDto(noticeId=22, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=优秀者
, createTime=2020-05-06, status=0)]
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0), NoticeDto(noticeId=22, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=优秀者
, createTime=2020-05-06, status=0)]),[]>
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0), NoticeDto(noticeId=22, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=优秀者
, createTime=2020-05-06, status=0)]
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0), NoticeDto(noticeId=22, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=优秀者
, createTime=2020-05-06, status=0)]
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0), NoticeDto(noticeId=22, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=优秀者
, createTime=2020-05-06, status=0)]),[]>
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesController--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesServiceImpl--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : FilesMapper--->目标方法名为:getFilesByProId
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[FilesDto(fileId=14, fileName=team.sql, userId=1, userName=曹荣武, fileLink=D:/upload/team.sql, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=15, fileName=相似片段.html, userId=1, userName=曹荣武, fileLink=D:/upload/相似片段.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=16, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05), FilesDto(fileId=17, fileName=全文对比.html, userId=1, userName=曹荣武, fileLink=D:/upload/全文对比.html, proId=80, proName=大学生组队系统, uploadTime=2020-05-05)]),[]>
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeController--->目标方法名为:getNoticesByProId
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeServiceImpl--->目标方法名为:getNoticesByProId
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : NoticeMapper--->目标方法名为:getNoticesByProId
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0), NoticeDto(noticeId=22, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=优秀者
, createTime=2020-05-06, status=0)]
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0), NoticeDto(noticeId=22, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=优秀者
, createTime=2020-05-06, status=0)]
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[NoticeDto(noticeId=19, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=整个系统计划在2020年5月5日完成主要的功能模块，以及论文撰写和演讲, createTime=2020-05-05, status=0), NoticeDto(noticeId=20, userId=4, userName=管理员1, proId=80, proName=大学生组队系统, noticeContent=完成系统设计阶段，并及时上交论文, createTime=2020-05-05, status=0), NoticeDto(noticeId=21, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=嘎嘎, createTime=2020-05-05, status=0), NoticeDto(noticeId=22, userId=1, userName=曹荣武, proId=80, proName=大学生组队系统, noticeContent=优秀者
, createTime=2020-05-06, status=0)]),[]>
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:create
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:create
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMappingImpl--->目标方法名为:toEntity
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Task(taskId=null, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, taskStatus=1, taskMark=222, subTasks=null)
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:create
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMappingImpl--->目标方法名为:toDto
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ee7, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ee7, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=null)
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=处理成功, data=TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ee7, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=null)),[]>
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=15}, {x=业余类, y=1}]),[]>
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=3, startRow=0, endRow=3, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=5, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamLabel=java、spring boot、angular, seeNum=0, projects=null), Team(teamId=103, teamName=阿里团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=104, teamName=京东团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null)]
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=1, pageSize=3, startRow=0, endRow=3, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=5, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamLabel=java、spring boot、angular, seeNum=0, projects=null), Team(teamId=103, teamName=阿里团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=104, teamName=京东团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null)])
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=1, pageSize=3, startRow=0, endRow=3, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=5, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamLabel=java、spring boot、angular, seeNum=0, projects=null), Team(teamId=103, teamName=阿里团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=104, teamName=京东团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null)])),[]>
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=2, pageSize=3, startRow=3, endRow=6, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=106, teamName=百度团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=107, teamName=广金团队1, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null)]
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=2, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=2, pageSize=3, startRow=3, endRow=6, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=106, teamName=百度团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=107, teamName=广金团队1, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null)])
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=2, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=2, pageSize=3, startRow=3, endRow=6, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=106, teamName=百度团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=107, teamName=广金团队1, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null)])),[]>
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=3, pageSize=3, startRow=6, endRow=9, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=108, teamName=广金团队2, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamScope=校外, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=109, teamName=广金团队3, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamScope=校外, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=110, teamName=广金团队4, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamScope=校外, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null)]
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=3, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=3, pageSize=3, startRow=6, endRow=9, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=108, teamName=广金团队2, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamScope=校外, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=109, teamName=广金团队3, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamScope=校外, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=110, teamName=广金团队4, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamScope=校外, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null)])
2020-05-06 14:37 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=3, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=3, pageSize=3, startRow=6, endRow=9, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=108, teamName=广金团队2, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamScope=校外, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=109, teamName=广金团队3, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamScope=校外, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null), Team(teamId=110, teamName=广金团队4, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamScope=校外, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=Java, seeNum=0, projects=null)])),[]>
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=4, pageSize=3, startRow=9, endRow=12, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=114, teamName=团队, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=115, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=116, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null)]
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=4, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=4, pageSize=3, startRow=9, endRow=12, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=114, teamName=团队, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=115, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=116, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null)])
2020-05-06 14:37 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=4, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=4, pageSize=3, startRow=9, endRow=12, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=114, teamName=团队, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=115, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=116, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null)])),[]>
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=5, pageSize=3, startRow=12, endRow=15, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=117, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=118, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=119, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null)]
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=5, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=5, pageSize=3, startRow=12, endRow=15, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=117, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=118, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=119, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null)])
2020-05-06 14:37 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=5, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=5, pageSize=3, startRow=12, endRow=15, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=117, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=118, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null), Team(teamId=119, teamName=团队1, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null)])),[]>
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=6, pageSize=3, startRow=15, endRow=18, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=120, teamName=团队1221, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null)]
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=6, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=6, pageSize=3, startRow=15, endRow=18, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=120, teamName=团队1221, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null)])
2020-05-06 14:37 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=6, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=6, pageSize=3, startRow=15, endRow=18, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=120, teamName=团队1221, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=1, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=xxx, teamNature=个人团队, teamLabel=java , seeNum=0, projects=null)])),[]>
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:37 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getPageInfo
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:pageTeams
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SelectAllMapper--->目标方法名为:selectAll
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : Page{count=true, pageNum=1, pageSize=3, startRow=0, endRow=3, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=5, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamLabel=java、spring boot、angular, seeNum=0, projects=null), Team(teamId=103, teamName=阿里团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=104, teamName=京东团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null)]
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : PageResult(pageNum=1, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=1, pageSize=3, startRow=0, endRow=3, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=5, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamLabel=java、spring boot、angular, seeNum=0, projects=null), Team(teamId=103, teamName=阿里团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=104, teamName=京东团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null)])
2020-05-06 14:37 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=PageResult(pageNum=1, pageSize=3, totalSize=16, totalPages=6, content=Page{count=true, pageNum=1, pageSize=3, startRow=0, endRow=3, total=16, pages=6, reasonable=true, pageSizeZero=false}[Team(teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, LeaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=5, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamLabel=java、spring boot、angular, seeNum=0, projects=null), Team(teamId=103, teamName=阿里团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamLabel=springboot, seeNum=0, projects=null), Team(teamId=104, teamName=京东团队, adminId=0, leaderId=1, LeaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamScope=广东金融学院, teamNumber=1, sumNumber=50, teamDate=Tue May 05 00:00:00 CST 2020, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamLabel=springboot, seeNum=0, projects=null)])),[]>
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getJoinTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getJoinTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getJoinTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:isLeader
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:isLeader
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : false
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=false),[]>
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]),[]>
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getLeaderIdByProId
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getLeaderIdByProId
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getLeaderIdByProId
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 1
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : false
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=false),[]>
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectController--->目标方法名为:getProjectByProId
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectServiceImpl--->目标方法名为:getProjectByProId
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getProjectByProId
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)),[]>
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]
2020-05-06 14:38 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]),[]>
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:geTaskByProId
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:geTaskByProId
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:geTaskByProId
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]
2020-05-06 14:38 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]),[]>
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:38 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:38 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]),[]>
2020-05-06 14:38 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:38 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:38 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:38 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:38 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 14:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 14:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 14:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 14:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(key=0, value=技术类), TeamTypeDto(key=1, value=业余类), TeamTypeDto(key=2, value=金融类), TeamTypeDto(key=3, value=兴趣类), TeamTypeDto(key=4, value=社团类), TeamTypeDto(key=5, value=其他)]),[]>
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]),[]>
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]),[]>
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:43 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@11a899e6
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@1de7873: Username: 管理员; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@36ced249, userId=4, userName=管理员, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@36ced249, userId=4, userName=管理员, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiLnrqHnkIblkZgxMjM0NTYiLCJpYXQiOjE1ODg3NDc0MjcsImV4cCI6MTU4ODc1MTAyN30.2YecRTv4SVQB-luJ6eXbZLfb6DM06dUs4v-eyE9qT1fC4nPDNxzp45SsywrrwEpYhkcm576h0GlcjSFr0JCJXA
2020-05-06 14:43 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@36ced249, userId=4, userName=管理员, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-06 14:43:47, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiLnrqHnkIblkZgxMjM0NTYiLCJpYXQiOjE1ODg3NDc0MjcsImV4cCI6MTU4ODc1MTAyN30.2YecRTv4SVQB-luJ6eXbZLfb6DM06dUs4v-eyE9qT1fC4nPDNxzp45SsywrrwEpYhkcm576h0GlcjSFr0JCJXA}),[]>
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:43 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:43 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 14:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 14:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 14:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 14:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 14:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 14:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 14:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 14:44 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 14:44 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:44 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:44 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 14:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 14:44 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:44 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=15}, {x=业余类, y=1}]),[]>
2020-05-06 14:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]
2020-05-06 14:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]
2020-05-06 14:44 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[TaskDto(super=crw.bishe.team.dto.TaskDto@85ec03, taskId=67, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-06-09, taskEndTime=2020-10-11, taskContent=系统规划11, userId=1, userName=曹荣武, subTaskId=null, taskStatus=2, taskMark=无, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@885d4547, taskId=78, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-16, taskEndTime=2020-06-16, taskContent=测试, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@68e5a7cd, taskId=79, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-09, taskContent=测试1, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试1, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@8ae89b32, taskId=80, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-07, taskEndTime=2020-06-09, taskContent=测试2, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=测试2, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@9cf4f997, taskId=81, proId=80, taskCreateTime=2020-05-05, taskStartTime=2020-05-08, taskEndTime=2020-06-16, taskContent=reces , userId=1, userName=曹荣武, subTaskId=null, taskStatus=3, taskMark=arga, subTaskDtos=[]), TaskDto(super=crw.bishe.team.dto.TaskDto@b1325ebd, taskId=82, proId=80, taskCreateTime=2020-05-06, taskStartTime=2020-05-09, taskEndTime=2020-06-09, taskContent=222, userId=1, userName=曹荣武, subTaskId=null, taskStatus=1, taskMark=222, subTaskDtos=[])]),[]>
2020-05-06 14:44 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:44 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:44 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]
2020-05-06 14:44 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@12195192, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@580d5ce7, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@7d326e02, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@269acd4d, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@9778e535, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@92ef59f1, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@995f5b2d, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@85ee0810, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@912476d8, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6abaa36a, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6ccae8e5, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6edb2e60, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@70eb73db, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@72fbb956, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@619fe471, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=广东金融学院, projects=[])]),[]>
2020-05-06 14:44 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:44 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:44 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:isLeader
2020-05-06 14:44 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:isLeader
2020-05-06 14:44 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:44 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:44 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:44 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=true),[]>
2020-05-06 14:44 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:44 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:44 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:44 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:44 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 14:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 14:44 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-06 14:44 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 14:44 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-06 14:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 14:44 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:44 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-06 14:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 14:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:44 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:44 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:44 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 14:44 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:44 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]),[]>
2020-05-06 14:44 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:44 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 14:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:44 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]),[]>
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]),[]>
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 14:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 14:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:47 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 14:47 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 14:47 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 14:47 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 14:47 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:47 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:47 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:47 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:47 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]),[]>
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:47 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:47 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]),[]>
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]),[]>
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]),[]>
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByTeamId
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByTeamId
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamController--->目标方法名为:getUserByTeamId
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamServiceImpl--->目标方法名为:getUserByTeamId
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByTeamId
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserTeamMapper--->目标方法名为:getUserByTeamId
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[UserTeamDto(utId=62, userId=1, userName=曹荣武, teamId=102, teamName=我的毕设团队, isLeader=1), UserTeamDto(utId=77, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=79, userId=2, userName=小小明, teamId=102, teamName=我的毕设团队, isLeader=0), UserTeamDto(utId=83, userId=1, userName=faib, teamId=102, teamName=我的毕设团队, isLeader=0)]),[]>
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoController--->目标方法名为:getLeaderByTeamId
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getLeaderByTeamId
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getLeaderByTeamId
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])),[]>
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=UserDto(super=crw.bishe.team.dto.UserDto@3029ffba, userId=1, userName=曹荣武, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)),[]>
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]
2020-05-06 14:48 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=22, teamId=102, teamName=我的毕设团队, userId=1, userName=faib, applyDate=2020-02-02, decribe=wag, phone=121212, status=1)]),[]>
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:48 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@d6ba2624, teamId=103, teamName=阿里团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=阿里团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@f4d12701, proId=81, proName=阿里项目1, leaderName=曹荣武, proDescribe=阿里项目描述, proDate=2020-05-05, proStartTime=2020-05-08, proEndTime=2020-06-16, proStatus=0, teamId=103, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@1cae3179, teamId=104, teamName=京东团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=京东团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@41d34294, teamId=105, teamName=酷狗团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=酷狗团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@eb3ba1df, teamId=106, teamName=百度团队, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=百度团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=企业团队, teamScope=广东金融学院, teamLabel=springboot, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c19b9c7, teamId=107, teamName=广金团队1, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=广东金融学院, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57902e83, teamId=108, teamName=广金团队2, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@5e002fbf, teamId=109, teamName=广金团队3, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=技术类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@4a8edca2, teamId=110, teamName=广金团队4, adminId=0, leaderId=1, leaderName=曹荣武, teamDescribe=广金团队描述信息, teamType=业余类, teamNumber=1, sumNumber=50, teamDate=2020-05-05, status=1, staff=需要人员类型详细描述, teamNature=个人团队, teamScope=校外, teamLabel=Java, seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:48 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:48 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]),[]>
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:48 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenServiceImpl--->目标方法名为:loadUserByUsername
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@309f33e1
2020-05-06 14:48 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@1de7873: Username: 管理员; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-05-06 14:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserName
2020-05-06 14:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserName
2020-05-06 14:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@36ced249, userId=4, userName=管理员, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@36ced249, userId=4, userName=管理员, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-05-06 14:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-05-06 14:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiLnrqHnkIblkZgxMjM0NTYiLCJpYXQiOjE1ODg3NDc3NDAsImV4cCI6MTU4ODc1MTM0MH0.RBDvvynhqQDz4kysyJ7kh5dTZvRXqQ7SBS0EKD2284cqotIynOtcx4TBOC23KHc52LzFuI5iJfwlqHl8cN5NJQ
2020-05-06 14:49 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@36ced249, userId=4, userName=管理员, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=1, university=广东工业大学, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-05-06 14:49:00, auth=[ADMIN], token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiLnrqHnkIblkZgxMjM0NTYiLCJpYXQiOjE1ODg3NDc3NDAsImV4cCI6MTU4ODc1MTM0MH0.RBDvvynhqQDz4kysyJ7kh5dTZvRXqQ7SBS0EKD2284cqotIynOtcx4TBOC23KHc52LzFuI5iJfwlqHl8cN5NJQ}),[]>
2020-05-06 14:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 14:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 14:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 14:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:49 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:49 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:49 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:49 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:49 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:49 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:49 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:49 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:49 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:49 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:49 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:49 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:49 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:49 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:49 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:49 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:49 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:49 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:49 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:49 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:49 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamAnalysis
2020-05-06 14:49 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamAnalysis
2020-05-06 14:49 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamAnalysis
2020-05-06 14:49 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 14:49 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=15}, {x=业余类, y=1}]
2020-05-06 14:49 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=15}, {x=业余类, y=1}]),[]>
2020-05-06 14:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 14:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 14:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 14:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:49 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 14:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 14:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 14:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 14:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 14:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 14:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 14:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 14:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 14:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 14:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 14:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 14:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:51 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 14:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 14:51 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 14:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 14:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 14:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 14:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 14:51 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]),[]>
2020-05-06 14:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 14:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 14:51 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamByAdminId
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamByAdminId
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamByAdminId
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@e1e18e7b, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=null, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@55c54b6a, teamId=114, teamName=团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2f5b77fc, teamId=115, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@316bbd77, teamId=116, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@337c02f2, teamId=117, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@358c486d, teamId=118, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@379c8de8, teamId=119, teamName=团队1, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@2640b903, teamId=120, teamName=团队1221, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=xxx, teamType=技术类, teamNumber=1, sumNumber=1, teamDate=2020-05-05, status=1, staff=xxx, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java , seeNum=0, university=null, projects=[])]),[]>
2020-05-06 15:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 15:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 15:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 15:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 15:33 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 15:33 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 15:33 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 15:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 15:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 15:33 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 15:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 15:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 15:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskController--->目标方法名为:getTaskByUserId
2020-05-06 15:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskServiceImpl--->目标方法名为:getTaskByUserId
2020-05-06 15:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TaskMapper--->目标方法名为:getTaskByUserId
2020-05-06 15:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=根据用户ID获取任务信息, data=[]),[]>
2020-05-06 15:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamProByUserId
2020-05-06 15:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeamProByUserId
2020-05-06 15:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeamProByUserId
2020-05-06 15:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 15:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]
2020-05-06 15:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@1d40b9e9, teamId=102, teamName=我的毕设团队, adminId=4, leaderId=1, leaderName=曹荣武, teamDescribe=大学生组队系统开发的目的在于，利用互联网的方便，快捷，即时的优势，让同学们能随时随地找到符合自己的团队，提高同学们的团队协作能力。通过组队系统，无论是校内组队，校外组队，或专业组队，跨专业组队，或自己的兴趣爱好组队等，能让同学们无校园边界组队，扩大学生的团队范围，这样便使得组队不受地域和时间的限制。, teamType=技术类, teamNumber=1, sumNumber=5, teamDate=2020-05-05, status=1, staff=懂得采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, teamNature=个人团队, teamScope=广东金融学院, teamLabel=java、spring boot、angular, seeNum=0, university=广东金融学院, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@7135189a, proId=80, proName=大学生组队系统, leaderName=曹荣武, proDescribe=大学生组队系统采用前后端分离技术，通过提供RESTful API的接口做前后端数据交互。前端采用Angular框架开发，后端用Spring Boot整合 swagger2 以提供 RESTful API，druid为数据库连接池，采用 Redis作为缓存机制，以Spring AOP即面向切面编程做系统的日志管理、事务管理和缓存管理等功能，并且用Spring Security做身份认证和用户授权功能。用户在登录系统采用JWT做做身份认证, proDate=2020-05-05, proStartTime=2019-11-01, proEndTime=2020-05-10, proStatus=0, teamId=102, proType=技术类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@4ed88afc, proId=82, proName=我的团队, leaderName=曹荣武, proDescribe=非哇嘎, proDate=2020-05-05, proStartTime=2020-05-09, proEndTime=2020-05-09, proStatus=0, teamId=102, proType=业余类, proCurrentNum=null, proLimiedNum=null, seeNum=0, staff=null, staffList=null, taskDtos=null)])]),[]>
2020-05-06 15:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeController--->目标方法名为:getTeamTypeNumber
2020-05-06 15:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeServiceImpl--->目标方法名为:getTeamTypeNumber
2020-05-06 15:33 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 15:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:getTeamTypeNumber
2020-05-06 15:33 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-05-06 15:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 15:33 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-05-06 15:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 15:33 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-05-06 15:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 15:33 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 15:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{x=技术类, y=1}]
2020-05-06 15:33 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]
2020-05-06 15:33 [http-nio-8888-exec-9] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 15:33 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{x=技术类, y=1}]),[]>
2020-05-06 15:33 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=17, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=懂得spring boot和angular开发，并熟悉数据库, phone=1234567889, status=1), ApplyDto(applyId=18, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=121, phone=11, status=2), ApplyDto(applyId=19, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1), ApplyDto(applyId=20, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=2), ApplyDto(applyId=21, teamId=102, teamName=我的毕设团队, userId=2, userName=小小明, applyDate=2020-02-02, decribe=11, phone=111, status=1)]),[]>
2020-05-06 15:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getMyTeamProByUserId
2020-05-06 15:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getMyTeamProByUserId
2020-05-06 15:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getMyTeamProByUserId
2020-05-06 15:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : []
2020-05-06 15:33 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[]),[]>
