2020-04-04 01:18 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-04-04 01:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-04-04 01:18 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-04-04 01:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-04-04 01:18 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-04-04 01:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-04-04 01:18 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-04-04 01:18 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-04-04 01:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-04-04 01:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-04-04 01:18 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(id=null, key=0, value=技术类), TeamTypeDto(id=null, key=1, value=业余类), TeamTypeDto(id=null, key=2, value=金融类), TeamTypeDto(id=null, key=3, value=兴趣类), TeamTypeDto(id=null, key=4, value=社团类)]
2020-04-04 01:18 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(id=null, key=0, value=技术类), TeamTypeDto(id=null, key=1, value=业余类), TeamTypeDto(id=null, key=2, value=金融类), TeamTypeDto(id=null, key=3, value=兴趣类), TeamTypeDto(id=null, key=4, value=社团类)]
2020-04-04 01:18 [http-nio-8888-exec-3] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(id=null, key=0, value=技术类), TeamTypeDto(id=null, key=1, value=业余类), TeamTypeDto(id=null, key=2, value=金融类), TeamTypeDto(id=null, key=3, value=兴趣类), TeamTypeDto(id=null, key=4, value=社团类)]),[]>
2020-04-04 01:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@6b05dbc5, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@383518e, proId=1, proName=组队系统设计, leaderName=曹荣武, proDescribe=毕业设计，组队系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=50, number=13, seeNum=99, staff=staff, staffList=1, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@26b8e7aa, proId=4, proName=京东商城, leaderName=马云, proDescribe=强哥, proDate=2020-03-24, proStartTime=2020-03-24, proEndTime=2020-03-24, proStatus=未完成, teamId=1, proType=销售类, proCurrentNum=22, proLimiedNum=50, number=12, seeNum=23, staff=staff, staffList=销售能力, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@62214e9d, proId=5, proName=fa, leaderName=马云, proDescribe=faga, proDate=2020-03-28, proStartTime=2020-03-28, proEndTime=2020-03-28, proStatus=未完成, teamId=1, proType=fa, proCurrentNum=22, proLimiedNum=22, number=12, seeNum=22, staff=fagrg, staffList=fag, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@5343f538, proId=6, proName=测试项目设计, leaderName=曹荣武, proDescribe=测试项目描述, proDate=2020-03-31, proStartTime=2020-03-31, proEndTime=2020-03-31, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=21, number=21, seeNum=21, staff=奥尔格, staffList=1312, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10d5, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c4f, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@1560bffa, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@cacfdff3, teamId=9, teamName=afa, leaderId=1, teamDescribe=faegege, teamType=个人团队, teamNumber=1, teamDate=2020-04-02, status=0, staff=null, teamNature=faf, teamScope=校内, teamLabel=null, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@e9273357, teamId=10, teamName=测试团队, leaderId=1, teamDescribe=小i呢, teamType=技术类, teamNumber=12, teamDate=2020-04-03, status=0, staff=校内, teamNature=校内, teamScope=校内, teamLabel=校内, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6af410ed, teamId=11, teamName=超级团队, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@dbf43d6c, teamId=12, teamName=超级团队2, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@bc8f6d41, teamId=13, teamName=超级团队3, leaderId=1, teamDescribe=sjfiwngi, teamType=技术类, teamNumber=121, teamDate=2020-04-03, status=0, staff=gsrnignwi, teamNature=faewongi, teamScope=校内, teamLabel=dakngi, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@d167e867, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@3977fcb7, proId=2, proName=毕业就业管理系统设计, leaderName=豪宗超, proDescribe=毕业设计，毕业就业管理系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=2, proType=技术类, proCurrentNum=21, proLimiedNum=50, number=21, seeNum=22, staff=staff, staffList=1, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c07d417, teamId=7, teamName=京东, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57426bb4, teamId=8, teamName=京东2, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@f64184b6, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=校外, teamLabel=java, seeNum=43, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@2ba26688, proId=3, proName=淘宝系统设计, leaderName=马云, proDescribe=网上商城购物系统, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=已完成, teamId=3, proType=技术类, proCurrentNum=22, proLimiedNum=50, number=23, seeNum=22, staff=staff, staffList=1, taskDtos=null)])]
2020-04-04 01:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@6b05dbc5, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@383518e, proId=1, proName=组队系统设计, leaderName=曹荣武, proDescribe=毕业设计，组队系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=50, number=13, seeNum=99, staff=staff, staffList=1, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@26b8e7aa, proId=4, proName=京东商城, leaderName=马云, proDescribe=强哥, proDate=2020-03-24, proStartTime=2020-03-24, proEndTime=2020-03-24, proStatus=未完成, teamId=1, proType=销售类, proCurrentNum=22, proLimiedNum=50, number=12, seeNum=23, staff=staff, staffList=销售能力, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@62214e9d, proId=5, proName=fa, leaderName=马云, proDescribe=faga, proDate=2020-03-28, proStartTime=2020-03-28, proEndTime=2020-03-28, proStatus=未完成, teamId=1, proType=fa, proCurrentNum=22, proLimiedNum=22, number=12, seeNum=22, staff=fagrg, staffList=fag, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@5343f538, proId=6, proName=测试项目设计, leaderName=曹荣武, proDescribe=测试项目描述, proDate=2020-03-31, proStartTime=2020-03-31, proEndTime=2020-03-31, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=21, number=21, seeNum=21, staff=奥尔格, staffList=1312, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10d5, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c4f, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@1560bffa, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@cacfdff3, teamId=9, teamName=afa, leaderId=1, teamDescribe=faegege, teamType=个人团队, teamNumber=1, teamDate=2020-04-02, status=0, staff=null, teamNature=faf, teamScope=校内, teamLabel=null, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@e9273357, teamId=10, teamName=测试团队, leaderId=1, teamDescribe=小i呢, teamType=技术类, teamNumber=12, teamDate=2020-04-03, status=0, staff=校内, teamNature=校内, teamScope=校内, teamLabel=校内, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6af410ed, teamId=11, teamName=超级团队, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@dbf43d6c, teamId=12, teamName=超级团队2, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@bc8f6d41, teamId=13, teamName=超级团队3, leaderId=1, teamDescribe=sjfiwngi, teamType=技术类, teamNumber=121, teamDate=2020-04-03, status=0, staff=gsrnignwi, teamNature=faewongi, teamScope=校内, teamLabel=dakngi, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@d167e867, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@3977fcb7, proId=2, proName=毕业就业管理系统设计, leaderName=豪宗超, proDescribe=毕业设计，毕业就业管理系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=2, proType=技术类, proCurrentNum=21, proLimiedNum=50, number=21, seeNum=22, staff=staff, staffList=1, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c07d417, teamId=7, teamName=京东, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57426bb4, teamId=8, teamName=京东2, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@f64184b6, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=校外, teamLabel=java, seeNum=43, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@2ba26688, proId=3, proName=淘宝系统设计, leaderName=马云, proDescribe=网上商城购物系统, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=已完成, teamId=3, proType=技术类, proCurrentNum=22, proLimiedNum=50, number=23, seeNum=22, staff=staff, staffList=1, taskDtos=null)])]
2020-04-04 01:18 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@6b05dbc5, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@383518e, proId=1, proName=组队系统设计, leaderName=曹荣武, proDescribe=毕业设计，组队系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=50, number=13, seeNum=99, staff=staff, staffList=1, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@26b8e7aa, proId=4, proName=京东商城, leaderName=马云, proDescribe=强哥, proDate=2020-03-24, proStartTime=2020-03-24, proEndTime=2020-03-24, proStatus=未完成, teamId=1, proType=销售类, proCurrentNum=22, proLimiedNum=50, number=12, seeNum=23, staff=staff, staffList=销售能力, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@62214e9d, proId=5, proName=fa, leaderName=马云, proDescribe=faga, proDate=2020-03-28, proStartTime=2020-03-28, proEndTime=2020-03-28, proStatus=未完成, teamId=1, proType=fa, proCurrentNum=22, proLimiedNum=22, number=12, seeNum=22, staff=fagrg, staffList=fag, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@5343f538, proId=6, proName=测试项目设计, leaderName=曹荣武, proDescribe=测试项目描述, proDate=2020-03-31, proStartTime=2020-03-31, proEndTime=2020-03-31, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=21, number=21, seeNum=21, staff=奥尔格, staffList=1312, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10d5, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c4f, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@1560bffa, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@cacfdff3, teamId=9, teamName=afa, leaderId=1, teamDescribe=faegege, teamType=个人团队, teamNumber=1, teamDate=2020-04-02, status=0, staff=null, teamNature=faf, teamScope=校内, teamLabel=null, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@e9273357, teamId=10, teamName=测试团队, leaderId=1, teamDescribe=小i呢, teamType=技术类, teamNumber=12, teamDate=2020-04-03, status=0, staff=校内, teamNature=校内, teamScope=校内, teamLabel=校内, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6af410ed, teamId=11, teamName=超级团队, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@dbf43d6c, teamId=12, teamName=超级团队2, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@bc8f6d41, teamId=13, teamName=超级团队3, leaderId=1, teamDescribe=sjfiwngi, teamType=技术类, teamNumber=121, teamDate=2020-04-03, status=0, staff=gsrnignwi, teamNature=faewongi, teamScope=校内, teamLabel=dakngi, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@d167e867, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@3977fcb7, proId=2, proName=毕业就业管理系统设计, leaderName=豪宗超, proDescribe=毕业设计，毕业就业管理系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=2, proType=技术类, proCurrentNum=21, proLimiedNum=50, number=21, seeNum=22, staff=staff, staffList=1, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c07d417, teamId=7, teamName=京东, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57426bb4, teamId=8, teamName=京东2, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@f64184b6, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=校外, teamLabel=java, seeNum=43, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@2ba26688, proId=3, proName=淘宝系统设计, leaderName=马云, proDescribe=网上商城购物系统, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=已完成, teamId=3, proType=技术类, proCurrentNum=22, proLimiedNum=50, number=23, seeNum=22, staff=staff, staffList=1, taskDtos=null)])]),[]>
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenController--->目标方法名为:getToken
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoServiceImpl--->目标方法名为:getUserInfoByUserId
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserInfoMapper--->目标方法名为:getUserInfoByUserId
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no)
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : JwtConfig--->目标方法名为:getToken
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODU5MzQzMTYsImV4cCI6MTU4NTkzNzkxNn0.FFfhFRw2AvKFFLqttnqayEOhyA27s5REPcDcvVmnyeyeHwrvTskPiMXKf7bMvtxJunDK4qKS1TwQ2tRQ0c1PpQ
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesServiceImpl--->目标方法名为:getAuth
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:getAuth
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : USER
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : USER
2020-04-04 01:18 [http-nio-8888-exec-6] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=ok, data={userInfo=UserDto(super=crw.bishe.team.dto.UserDto@4733709e, userId=1, userName=crw, userAvatar=https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png, gender=0, university=广东金融学院, college=互联网, profession=计科, grade=1, userClass=1, userNo=123456, userTel=123456789, email=22233, ability=no), loginTime=2020-04-04 01:18:36, auth=USER, token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjcncxMjM0NTYiLCJpYXQiOjE1ODU5MzQzMTYsImV4cCI6MTU4NTkzNzkxNn0.FFfhFRw2AvKFFLqttnqayEOhyA27s5REPcDcvVmnyeyeHwrvTskPiMXKf7bMvtxJunDK4qKS1TwQ2tRQ0c1PpQ}),[]>
2020-04-04 01:18 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-04-04 01:18 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-04-04 01:18 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryController--->目标方法名为:getProType
2020-04-04 01:18 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DictionaryServiceImpl--->目标方法名为:getTeamType
2020-04-04 01:18 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamTypeMapper--->目标方法名为:selectTeamType
2020-04-04 01:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-04-04 01:18 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(id=null, key=0, value=技术类), TeamTypeDto(id=null, key=1, value=业余类), TeamTypeDto(id=null, key=2, value=金融类), TeamTypeDto(id=null, key=3, value=兴趣类), TeamTypeDto(id=null, key=4, value=社团类)]
2020-04-04 01:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-04-04 01:18 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamTypeDto(id=null, key=0, value=技术类), TeamTypeDto(id=null, key=1, value=业余类), TeamTypeDto(id=null, key=2, value=金融类), TeamTypeDto(id=null, key=3, value=兴趣类), TeamTypeDto(id=null, key=4, value=社团类)]
2020-04-04 01:18 [http-nio-8888-exec-8] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamTypeDto(id=null, key=0, value=技术类), TeamTypeDto(id=null, key=1, value=业余类), TeamTypeDto(id=null, key=2, value=金融类), TeamTypeDto(id=null, key=3, value=兴趣类), TeamTypeDto(id=null, key=4, value=社团类)]),[]>
2020-04-04 01:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamController--->目标方法名为:getTeamList
2020-04-04 01:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamServiceImpl--->目标方法名为:getTeams
2020-04-04 01:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TeamMapper--->目标方法名为:getTeams
2020-04-04 01:18 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-04-04 01:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-04-04 01:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@6b05dbc5, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@383518e, proId=1, proName=组队系统设计, leaderName=曹荣武, proDescribe=毕业设计，组队系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=50, number=13, seeNum=99, staff=staff, staffList=1, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@26b8e7aa, proId=4, proName=京东商城, leaderName=马云, proDescribe=强哥, proDate=2020-03-24, proStartTime=2020-03-24, proEndTime=2020-03-24, proStatus=未完成, teamId=1, proType=销售类, proCurrentNum=22, proLimiedNum=50, number=12, seeNum=23, staff=staff, staffList=销售能力, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@62214e9d, proId=5, proName=fa, leaderName=马云, proDescribe=faga, proDate=2020-03-28, proStartTime=2020-03-28, proEndTime=2020-03-28, proStatus=未完成, teamId=1, proType=fa, proCurrentNum=22, proLimiedNum=22, number=12, seeNum=22, staff=fagrg, staffList=fag, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@5343f538, proId=6, proName=测试项目设计, leaderName=曹荣武, proDescribe=测试项目描述, proDate=2020-03-31, proStartTime=2020-03-31, proEndTime=2020-03-31, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=21, number=21, seeNum=21, staff=奥尔格, staffList=1312, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10d5, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c4f, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@1560bffa, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@cacfdff3, teamId=9, teamName=afa, leaderId=1, teamDescribe=faegege, teamType=个人团队, teamNumber=1, teamDate=2020-04-02, status=0, staff=null, teamNature=faf, teamScope=校内, teamLabel=null, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@e9273357, teamId=10, teamName=测试团队, leaderId=1, teamDescribe=小i呢, teamType=技术类, teamNumber=12, teamDate=2020-04-03, status=0, staff=校内, teamNature=校内, teamScope=校内, teamLabel=校内, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6af410ed, teamId=11, teamName=超级团队, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@dbf43d6c, teamId=12, teamName=超级团队2, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@bc8f6d41, teamId=13, teamName=超级团队3, leaderId=1, teamDescribe=sjfiwngi, teamType=技术类, teamNumber=121, teamDate=2020-04-03, status=0, staff=gsrnignwi, teamNature=faewongi, teamScope=校内, teamLabel=dakngi, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@d167e867, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@3977fcb7, proId=2, proName=毕业就业管理系统设计, leaderName=豪宗超, proDescribe=毕业设计，毕业就业管理系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=2, proType=技术类, proCurrentNum=21, proLimiedNum=50, number=21, seeNum=22, staff=staff, staffList=1, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c07d417, teamId=7, teamName=京东, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57426bb4, teamId=8, teamName=京东2, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@f64184b6, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=校外, teamLabel=java, seeNum=43, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@2ba26688, proId=3, proName=淘宝系统设计, leaderName=马云, proDescribe=网上商城购物系统, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=已完成, teamId=3, proType=技术类, proCurrentNum=22, proLimiedNum=50, number=23, seeNum=22, staff=staff, staffList=1, taskDtos=null)])]
2020-04-04 01:18 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-04-04 01:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-04-04 01:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [TeamDto(super=crw.bishe.team.dto.TeamDto@6b05dbc5, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@383518e, proId=1, proName=组队系统设计, leaderName=曹荣武, proDescribe=毕业设计，组队系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=50, number=13, seeNum=99, staff=staff, staffList=1, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@26b8e7aa, proId=4, proName=京东商城, leaderName=马云, proDescribe=强哥, proDate=2020-03-24, proStartTime=2020-03-24, proEndTime=2020-03-24, proStatus=未完成, teamId=1, proType=销售类, proCurrentNum=22, proLimiedNum=50, number=12, seeNum=23, staff=staff, staffList=销售能力, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@62214e9d, proId=5, proName=fa, leaderName=马云, proDescribe=faga, proDate=2020-03-28, proStartTime=2020-03-28, proEndTime=2020-03-28, proStatus=未完成, teamId=1, proType=fa, proCurrentNum=22, proLimiedNum=22, number=12, seeNum=22, staff=fagrg, staffList=fag, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@5343f538, proId=6, proName=测试项目设计, leaderName=曹荣武, proDescribe=测试项目描述, proDate=2020-03-31, proStartTime=2020-03-31, proEndTime=2020-03-31, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=21, number=21, seeNum=21, staff=奥尔格, staffList=1312, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10d5, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c4f, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@1560bffa, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@cacfdff3, teamId=9, teamName=afa, leaderId=1, teamDescribe=faegege, teamType=个人团队, teamNumber=1, teamDate=2020-04-02, status=0, staff=null, teamNature=faf, teamScope=校内, teamLabel=null, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@e9273357, teamId=10, teamName=测试团队, leaderId=1, teamDescribe=小i呢, teamType=技术类, teamNumber=12, teamDate=2020-04-03, status=0, staff=校内, teamNature=校内, teamScope=校内, teamLabel=校内, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6af410ed, teamId=11, teamName=超级团队, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@dbf43d6c, teamId=12, teamName=超级团队2, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@bc8f6d41, teamId=13, teamName=超级团队3, leaderId=1, teamDescribe=sjfiwngi, teamType=技术类, teamNumber=121, teamDate=2020-04-03, status=0, staff=gsrnignwi, teamNature=faewongi, teamScope=校内, teamLabel=dakngi, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@d167e867, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@3977fcb7, proId=2, proName=毕业就业管理系统设计, leaderName=豪宗超, proDescribe=毕业设计，毕业就业管理系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=2, proType=技术类, proCurrentNum=21, proLimiedNum=50, number=21, seeNum=22, staff=staff, staffList=1, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c07d417, teamId=7, teamName=京东, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57426bb4, teamId=8, teamName=京东2, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@f64184b6, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=校外, teamLabel=java, seeNum=43, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@2ba26688, proId=3, proName=淘宝系统设计, leaderName=马云, proDescribe=网上商城购物系统, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=已完成, teamId=3, proType=技术类, proCurrentNum=22, proLimiedNum=50, number=23, seeNum=22, staff=staff, staffList=1, taskDtos=null)])]
2020-04-04 01:18 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getApplyByUserId
2020-04-04 01:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyController--->目标方法名为:getEnqueueApply
2020-04-04 01:18 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getApplyByUserId
2020-04-04 01:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyServiceImpl--->目标方法名为:getEnqueueApply
2020-04-04 01:18 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getApplyByUserId
2020-04-04 01:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ApplyMapper--->目标方法名为:getEnqueueApply
2020-04-04 01:18 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[TeamDto(super=crw.bishe.team.dto.TeamDto@6b05dbc5, teamId=1, teamName=废铁团队, leaderId=1, teamDescribe=废铁团队的团队描述, teamType=技术类, teamNumber=33, teamDate=2020-01-20, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=angular,springboot, seeNum=21, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@383518e, proId=1, proName=组队系统设计, leaderName=曹荣武, proDescribe=毕业设计，组队系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=50, number=13, seeNum=99, staff=staff, staffList=1, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@26b8e7aa, proId=4, proName=京东商城, leaderName=马云, proDescribe=强哥, proDate=2020-03-24, proStartTime=2020-03-24, proEndTime=2020-03-24, proStatus=未完成, teamId=1, proType=销售类, proCurrentNum=22, proLimiedNum=50, number=12, seeNum=23, staff=staff, staffList=销售能力, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@62214e9d, proId=5, proName=fa, leaderName=马云, proDescribe=faga, proDate=2020-03-28, proStartTime=2020-03-28, proEndTime=2020-03-28, proStatus=未完成, teamId=1, proType=fa, proCurrentNum=22, proLimiedNum=22, number=12, seeNum=22, staff=fagrg, staffList=fag, taskDtos=null), ProjectDto(super=crw.bishe.team.dto.ProjectDto@5343f538, proId=6, proName=测试项目设计, leaderName=曹荣武, proDescribe=测试项目描述, proDate=2020-03-31, proStartTime=2020-03-31, proEndTime=2020-03-31, proStatus=未完成, teamId=1, proType=技术类, proCurrentNum=12, proLimiedNum=21, number=21, seeNum=21, staff=奥尔格, staffList=1312, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@58ef10d5, teamId=4, teamName=百度团队, leaderId=1, teamDescribe=百度团队描述, teamType=业余类, teamNumber=21, teamDate=2020-03-24, status=0, staff=需要员工类型, teamNature=班级项目, teamScope=广东工业大学, teamLabel=销售能力, seeNum=54, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@49af0c4f, teamId=5, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@1560bffa, teamId=6, teamName=京东团队, leaderId=1, teamDescribe=京东团队描述, teamType=销售类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要, teamNature=企业项目, teamScope=广东工业大学, teamLabel=Java, seeNum=2, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@cacfdff3, teamId=9, teamName=afa, leaderId=1, teamDescribe=faegege, teamType=个人团队, teamNumber=1, teamDate=2020-04-02, status=0, staff=null, teamNature=faf, teamScope=校内, teamLabel=null, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@e9273357, teamId=10, teamName=测试团队, leaderId=1, teamDescribe=小i呢, teamType=技术类, teamNumber=12, teamDate=2020-04-03, status=0, staff=校内, teamNature=校内, teamScope=校内, teamLabel=校内, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@6af410ed, teamId=11, teamName=超级团队, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@dbf43d6c, teamId=12, teamName=超级团队2, leaderId=1, teamDescribe=gewingagnij, teamType=技术类, teamNumber=3, teamDate=2020-04-03, status=0, staff=jingaignijijf, teamNature=fjegnewifjgiwng, teamScope=校内, teamLabel=feignei , seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@bc8f6d41, teamId=13, teamName=超级团队3, leaderId=1, teamDescribe=sjfiwngi, teamType=技术类, teamNumber=121, teamDate=2020-04-03, status=0, staff=gsrnignwi, teamNature=faewongi, teamScope=校内, teamLabel=dakngi, seeNum=0, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@d167e867, teamId=2, teamName=HOWE团队, leaderId=2, teamDescribe=HOWE团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=个人项目, teamScope=广东金融学院, teamLabel=VUE,java,springboot, seeNum=32, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@3977fcb7, proId=2, proName=毕业就业管理系统设计, leaderName=豪宗超, proDescribe=毕业设计，毕业就业管理系统设计, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=未完成, teamId=2, proType=技术类, proCurrentNum=21, proLimiedNum=50, number=21, seeNum=22, staff=staff, staffList=1, taskDtos=null)]), TeamDto(super=crw.bishe.team.dto.TeamDto@5c07d417, teamId=7, teamName=京东, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@57426bb4, teamId=8, teamName=京东2, leaderId=2, teamDescribe=描述, teamType=个人团队, teamNumber=122, teamDate=2020-10-10, status=1, staff=员工类型, teamNature=个人, teamScope=广东工业大学, teamLabel=Java, seeNum=33, projects=[]), TeamDto(super=crw.bishe.team.dto.TeamDto@f64184b6, teamId=3, teamName=阿里团队, leaderId=3, teamDescribe=阿里团队描述, teamType=技术类, teamNumber=33, teamDate=2020-02-02, status=1, staff=需要员工类型, teamNature=企业项目, teamScope=校外, teamLabel=java, seeNum=43, projects=[ProjectDto(super=crw.bishe.team.dto.ProjectDto@2ba26688, proId=3, proName=淘宝系统设计, leaderName=马云, proDescribe=网上商城购物系统, proDate=2020-01-20, proStartTime=2020-01-20, proEndTime=2020-01-20, proStatus=已完成, teamId=3, proType=技术类, proCurrentNum=22, proLimiedNum=50, number=23, seeNum=22, staff=staff, staffList=1, taskDtos=null)])]),[]>
2020-04-04 01:18 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=1, teamId=1, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2019-12-26, decribe=申请信息, phone=12345678, status=1), ApplyDto(applyId=2, teamId=2, teamName=HOWE团队, userId=1, userName=小明, applyDate=2019-12-26, decribe=申请信息, phone=12345678, status=0), ApplyDto(applyId=3, teamId=1, teamName=废铁团队, userId=1, userName=crw, applyDate=2020-02-02, decribe=描述, phone=188814231208, status=0)]
2020-04-04 01:18 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=1, teamId=1, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2019-12-26, decribe=申请信息, phone=12345678, status=1), ApplyDto(applyId=2, teamId=2, teamName=HOWE团队, userId=1, userName=小明, applyDate=2019-12-26, decribe=申请信息, phone=12345678, status=0), ApplyDto(applyId=3, teamId=1, teamName=废铁团队, userId=1, userName=crw, applyDate=2020-02-02, decribe=描述, phone=188814231208, status=0)]
2020-04-04 01:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=1, teamId=1, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2019-12-26, decribe=申请信息, phone=12345678, status=1), ApplyDto(applyId=3, teamId=1, teamName=废铁团队, userId=1, userName=crw, applyDate=2020-02-02, decribe=描述, phone=188814231208, status=0)]
2020-04-04 01:18 [http-nio-8888-exec-2] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=1, teamId=1, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2019-12-26, decribe=申请信息, phone=12345678, status=1), ApplyDto(applyId=2, teamId=2, teamName=HOWE团队, userId=1, userName=小明, applyDate=2019-12-26, decribe=申请信息, phone=12345678, status=0), ApplyDto(applyId=3, teamId=1, teamName=废铁团队, userId=1, userName=crw, applyDate=2020-02-02, decribe=描述, phone=188814231208, status=0)]),[]>
2020-04-04 01:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [ApplyDto(applyId=1, teamId=1, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2019-12-26, decribe=申请信息, phone=12345678, status=1), ApplyDto(applyId=3, teamId=1, teamName=废铁团队, userId=1, userName=crw, applyDate=2020-02-02, decribe=描述, phone=188814231208, status=0)]
2020-04-04 01:18 [http-nio-8888-exec-1] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[ApplyDto(applyId=1, teamId=1, teamName=废铁团队, userId=1, userName=曹荣武, applyDate=2019-12-26, decribe=申请信息, phone=12345678, status=1), ApplyDto(applyId=3, teamId=1, teamName=废铁团队, userId=1, userName=crw, applyDate=2020-02-02, decribe=描述, phone=188814231208, status=0)]),[]>
2020-04-04 02:30 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesServiceImpl--->目标方法名为:loadUserByUsername
2020-04-04 02:30 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-04-04 02:30 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@c6e48fd
2020-04-04 02:30 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 13488 (started by crw in D:\project\毕业设计项目\team-01)
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39ms. Found 0 JDBC repository interfaces.
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@25966118' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:32 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:33 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-04-04 02:33 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-04-04 02:33 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-04-04 02:33 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-04 02:33 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-04-04 02:33 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2756 ms
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-04-04 02:33:00",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-04-04 02:33 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 99
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@3d0579a2
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@780103
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:configure
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:33 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/static/**'], []
2020-04-04 02:33 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-04-04 02:33 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56c863e5, org.springframework.security.web.context.SecurityContextPersistenceFilter@7e2fe1b8, org.springframework.security.web.header.HeaderWriterFilter@5050361d, org.springframework.security.web.authentication.logout.LogoutFilter@57056f21, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4ab17feb, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@18afeac5, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@174710f0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f983560, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2be4619e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@561aa556, org.springframework.security.web.session.SessionManagementFilter@3c609c7e, org.springframework.security.web.access.ExceptionTranslationFilter@3cf4ce54, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5df78dd6]
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@2ace706d
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@370fafa8
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$539/364826570@6a47d896
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@4347ebae
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@3603beb9
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@49d5ec51
2020-04-04 02:33 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 02:33 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-04-04 02:33 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-04-04 02:33 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-04 02:33 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-04-04 02:33 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-04-04 02:33 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-04-04 02:33 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingPOST_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-04-04 02:33 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-04-04 02:33 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-04-04 02:33 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-04-04 02:33 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 8.528 seconds (JVM running for 10.924)
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-04-04 02:33 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:33 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 02:33 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-04-04 02:33 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-04-04 02:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesServiceImpl--->目标方法名为:loadUserByUsername
2020-04-04 02:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-04-04 02:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@48924543
2020-04-04 02:33 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 11596 (started by crw in D:\project\毕业设计项目\team-01)
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49ms. Found 0 JDBC repository interfaces.
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@647400cd' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-04-04 02:35 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-04-04 02:35 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-04-04 02:35 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-04 02:35 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2566 ms
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-04-04 02:35:04",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-04-04 02:35 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 99
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@93644af
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@1e17989f
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:configure
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/static/**'], []
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@258854a9, org.springframework.security.web.context.SecurityContextPersistenceFilter@78397911, org.springframework.security.web.header.HeaderWriterFilter@19840f43, org.springframework.security.web.authentication.logout.LogoutFilter@73eeeef8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@317b3d81, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5a6a467c, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4d77f2ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f9ffcf6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c559833, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@25f9fe57, org.springframework.security.web.session.SessionManagementFilter@3914ce83, org.springframework.security.web.access.ExceptionTranslationFilter@2b3d3e0e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17f3f885]
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@1773a1f5
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@26cb18cd
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$539/1628061258@6d582c28
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@74d0b4e
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@5cb5b53b
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@76a71d83
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-04-04 02:35 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-04 02:35 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-04-04 02:35 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-04-04 02:35 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-04-04 02:35 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingPOST_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-04-04 02:35 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-04-04 02:35 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-04-04 02:35 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 8.688 seconds (JVM running for 10.899)
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-04-04 02:35 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:35 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 02:35 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-04-04 02:35 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-04-04 02:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesServiceImpl--->目标方法名为:loadUserByUsername
2020-04-04 02:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-04-04 02:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@23e2d6f0
2020-04-04 02:35 [http-nio-8888-exec-7] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-04-04 02:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-04-04 02:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-04-04 02:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserItemRemarkController--->目标方法名为:getTeamTypeNum
2020-04-04 02:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserItemRemarkServiceImpl--->目标方法名为:getTeamTypeNum
2020-04-04 02:35 [http-nio-8888-exec-10] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserItemRemarkMapper--->目标方法名为:getTeamTypeNum
2020-04-04 02:35 [http-nio-8888-exec-10] [ERROR]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:175)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2] with root cause
org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:80) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy120.selectOne(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy172.getTeamTypeNum(Unknown Source) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at com.sun.proxy.$Proxy173.getTeamTypeNum(Unknown Source) ~[?:?]
	at crw.bishe.team.service.UserItemRemarkServiceImpl.getTeamTypeNum(UserItemRemarkServiceImpl.java:18) ~[classes/:?]
	at crw.bishe.team.service.UserItemRemarkServiceImpl$$FastClassBySpringCGLIB$$871e2c58.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.service.UserItemRemarkServiceImpl$$EnhancerBySpringCGLIB$$50085906.getTeamTypeNum(<generated>) ~[classes/:?]
	at crw.bishe.team.controller.test.UserItemRemarkController.getTeamTypeNum(UserItemRemarkController.java:26) ~[classes/:?]
	at crw.bishe.team.controller.test.UserItemRemarkController$$FastClassBySpringCGLIB$$d53694a.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at crw.bishe.team.controller.test.UserItemRemarkController$$EnhancerBySpringCGLIB$$e8d4b71c.getTeamTypeNum(<generated>) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.0.12.jar:1.0.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:209) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)ev  el crw.bishe.team.TeamApplication - Starting TeamApplication on LAPTOP-QUUHKKKK with PID 9576 (started by crw in D:\project\毕业设计项目\team-01)
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:651)ev  el crw.bishe.team.TeamApplication - No active profile set, falling back to default profiles: default
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:225)ev  el org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:127)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:187)ev  el org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 JDBC repository interfaces.
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@75f62a7c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)ev  el org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:92)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8888 (http)
2020-04-04 02:40 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8888"]
2020-04-04 02:40 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-04-04 02:40 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-04 02:40 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)ev  el org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2554 ms
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:druidServlet
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : statViewServlet urls=[/druid/*]
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:filterRegistrationBean
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : filterRegistrationBean urls=[/*] order=2147483647
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : DruidConfig--->目标方法名为:dataSource
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : {
	CreateTime:"2020-04-04 02:40:05",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}

[
]
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : VisitorContextListener--->目标方法名为:contextInitialized
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : ProjectMapper--->目标方法名为:getSeeNum
2020-04-04 02:40 [restartedMain] [INFO]  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669)ev  el com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : 99
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:passwordEncoder
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@7c43e166
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:authenticationProvider
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.authentication.dao.DaoAuthenticationProvider@746b83c8
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_InitializingBean.afterPropertiesSet(MyInitConfig_InitializingBean.java:18)ev  el crw.bishe.team.init.MyInitConfig_InitializingBean - 实现InitializingBean接口实现项目初始化操作
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : WebConfig--->目标方法名为:addInterceptors
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:configure
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/static/**'], []
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/api/**'], []
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43)ev  el org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6743ffc8, org.springframework.security.web.context.SecurityContextPersistenceFilter@1028679, org.springframework.security.web.header.HeaderWriterFilter@2097f536, org.springframework.security.web.authentication.logout.LogoutFilter@74e33f3a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@30f2ba27, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@695ae683, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@42455285, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12292ced, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1134007a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70fe9693, org.springframework.security.web.session.SessionManagementFilter@2bad8646, org.springframework.security.web.access.ExceptionTranslationFilter@cdbc7ef, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@53ab55c4]
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:tokenBasedRememberMeServices
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices@3e6368d2
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:loginSuccessHandler
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$1@17625bcb
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SecurityConfig--->目标方法名为:logoutSuccessHandler
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.config.SecurityConfig$$Lambda$539/1759472432@39afe88
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69)ev  el springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:TestApi
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@3d92889a
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:DictionaryApi
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@595c3017
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : SwaggerConfig--->目标方法名为:createRestApi
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : springfox.documentation.spring.web.plugins.Docket@1a4cf9ab
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)ev  el org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:58)ev  el org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)ev  el org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-04-04 02:40 [restartedMain] [WARN]  org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists(ThymeleafAutoConfiguration.java:106)ev  el org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-04-04 02:40 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-04-04 02:40 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-04-04 02:40 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-04-04 02:40 [restartedMain] [INFO]  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83)ev  el tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:147)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:150)ev  el springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 3 custom documentation plugin(s)
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_2
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_3
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_2
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_2
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_2
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: createUsingPOST_4
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteUsingDELETE_3
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: findAllUsingGET_3
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateUsingPUT_3
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getProTypeUsingGET_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getUniversityUsingGET_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)ev  el springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamsUsingGET_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: failUsingGET_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: infoUsingPOST_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: loginUsingPOST_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: logoutUsingGET_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: projectPagesUsingGET_1
2020-04-04 02:40 [restartedMain] [INFO]  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40)ev  el springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: getTeamTypeNumUsingGET_1
2020-04-04 02:40 [restartedMain] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8888"]
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204)ev  el org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8888 (http) with context path ''
2020-04-04 02:40 [restartedMain] [INFO]  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)ev  el crw.bishe.team.TeamApplication - Started TeamApplication in 8.064 seconds (JVM running for 10.255)
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_CommandLineRunner--->目标方法名为:run
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_CommandLineRunner.run(MyInitConfig_CommandLineRunner.java:20)ev  el crw.bishe.team.init.MyInitConfig_CommandLineRunner - 实现CommandLineRunner接口，进行项目初始化操作
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : MyInitConfig_ApplicationRunner--->目标方法名为:run
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.init.MyInitConfig_ApplicationRunner.run(MyInitConfig_ApplicationRunner.java:19)ev  el crw.bishe.team.init.MyInitConfig_ApplicationRunner - 实现ApplicationRunner接口，在项目启动完成之前初始化操作
2020-04-04 02:40 [restartedMain] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : null
2020-04-04 02:40 [http-nio-8888-exec-1] [INFO]  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173)ev  el org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-04 02:40 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)ev  el org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-04-04 02:40 [http-nio-8888-exec-1] [INFO]  org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)ev  el org.springframework.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-04-04 02:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesServiceImpl--->目标方法名为:loadUserByUsername
2020-04-04 02:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserRolesMapper--->目标方法名为:findByUserName
2020-04-04 02:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : crw.bishe.team.entity.UserRoles@511a7985
2020-04-04 02:40 [http-nio-8888-exec-5] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : org.springframework.security.core.userdetails.User@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ADMIN
2020-04-04 02:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : TokenInterceptor--->目标方法名为:preHandle
2020-04-04 02:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : true
2020-04-04 02:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserItemRemarkController--->目标方法名为:getTeamTypeNum
2020-04-04 02:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserItemRemarkServiceImpl--->目标方法名为:getTeamTypeNum
2020-04-04 02:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doBefore(WebLogAspect.java:28)ev  el crw.bishe.team.aop.WebLogAspect - 调用方法 : UserItemRemarkMapper--->目标方法名为:getTeamTypeNum
2020-04-04 02:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{user_id=1, team_type_id=1, team_type_num=2}, {user_id=1, team_type_id=2, team_type_num=1}]
2020-04-04 02:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : [{user_id=1, team_type_id=1, team_type_num=2}, {user_id=1, team_type_id=2, team_type_num=1}]
2020-04-04 02:40 [http-nio-8888-exec-4] [INFO]  crw.bishe.team.aop.WebLogAspect.doAfterReturning(WebLogAspect.java:34)ev  el crw.bishe.team.aop.WebLogAspect - 返回值 : <200 OK OK,Result(status=200, desc=OK, data=[{user_id=1, team_type_id=1, team_type_num=2}, {user_id=1, team_type_id=2, team_type_num=1}]),[]>
